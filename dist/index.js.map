{"version":3,"file":"index.js","sources":["../node_modules/tslib/tslib.es6.js","../src/object-plus/tools.ts","../src/object-plus/eventsource.ts","../src/object-plus/mixins.ts","../src/object-plus/events.ts","../src/object-plus/logging.ts","../src/io-tools.ts","../src/traversable.ts","../src/validation.ts","../src/transactions.ts","../src/record/updates.ts","../src/record/metatypes/any.ts","../src/record/metatypes/basic.ts","../src/record/metatypes/date.ts","../src/record/metatypes/owned.ts","../src/record/metatypes/shared.ts","../src/record/metatypes/index.ts","../src/record/attrDef.ts","../src/record/mixin.ts","../src/record/io-mixin.ts","../src/record/record.ts","../src/record/index.ts","../src/collection/commons.ts","../src/collection/add.ts","../src/collection/remove.ts","../src/collection/set.ts","../src/collection/index.ts","../src/relations/commons.ts","../src/relations/from.ts","../src/relations/subsetOf.ts","../src/relations/store.ts","../src/index.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n"," /** Similar to underscore `_.defaults` */\nexport function defaults< T >( dest : T, ...sources : Object[] ) : T\nexport function defaults< T >( dest : T, source : Object ) : T {\n    for( var name in source ) {\n        if( source.hasOwnProperty( name ) && !dest.hasOwnProperty( name ) ) {\n            dest[ name ] = source[ name ];\n        }\n    }\n\n    if( arguments.length > 2 ){\n        for( let i = 2; i < arguments.length; i++ ){\n            const other = arguments[ i ];\n            other && defaults( dest, other );\n        }\n    }\n\n    return dest;\n}\n\n/** Check if value is raw JSON */\nexport function isValidJSON( value : any ) : boolean {\n    if( value === null ){\n        return true;\n    }\n\n    switch( typeof value ){\n    case 'number' :\n    case 'string' :\n    case 'boolean' :\n        return true;\n\n    case 'object':\n        var proto = Object.getPrototypeOf( value );\n\n        if( proto === Object.prototype || proto === Array.prototype ){\n            return every( value, isValidJSON );\n        }\n    }\n\n    return false;\n}\n\n/** Get the base class constructor function.\n * @param Class Subclass constructor function.\n * @returns Base class constructor function.\n */\nexport function getBaseClass( Class : Function ) {\n    return Object.getPrototypeOf( Class.prototype ).constructor\n}\n\nexport function assignToClassProto<T, K extends keyof T>( Class, definition : T, ...names : K[] ) : void {\n    for( let name of names ){\n        const value = definition[ name ];\n        value === void 0 || ( Class.prototype[ name ] = value );\n    }\n}\n\n/** Checks whenever given object is an empty hash `{}` */\nexport function isEmpty( obj : {} ) : boolean {\n    if( obj ){\n        for( let key in obj ){\n            if( obj.hasOwnProperty( key ) ){\n                return false;\n            }\n        }\n    }\n\n    return true;\n}\n\nexport type Iteratee = ( value : any, key? : string | number ) => any;\n\n/** @hidden */\nfunction someArray( arr : any[], fun : Iteratee ) : any {\n    let result;\n\n    for( let i = 0; i < arr.length; i++ ){\n        if( result = fun( arr[ i ], i ) ){\n            return result;\n        }\n    }\n}\n\n/** @hidden */\nfunction someObject( obj : {}, fun : Iteratee ) : any {\n    let result;\n\n    for( let key in obj ){\n        if( obj.hasOwnProperty( key ) ){\n            if( result = fun( obj[ key ], key ) ){\n                return result;\n            }\n        }\n    }\n}\n\n/** Similar to underscore `_.some` */\nexport function some( obj, fun : Iteratee ) : any {\n    if( Object.getPrototypeOf( obj ) === ArrayProto ){\n        return someArray( obj, fun );\n    }\n    else{\n        return someObject( obj, fun );\n    }\n}\n\n/** Similar to underscore `_.every` */\nexport function every( obj : { }, predicate : Iteratee ) : boolean {\n    return !some( obj, x => !predicate( x ) );\n}\n\n/** Similar to `getOwnPropertyDescriptor`, but traverse the whole prototype chain. */\nexport function getPropertyDescriptor( obj : {}, prop : string ) : PropertyDescriptor {\n    let desc : PropertyDescriptor;\n\n    for( let proto = obj; !desc && proto; proto = Object.getPrototypeOf( proto ) ) {\n        desc = Object.getOwnPropertyDescriptor( proto, prop );\n    }\n\n    return desc;\n}\n\n/** Similar to underscore `_.omit` */\nexport function omit( source : {}, ...rest : string[] ) : {}\nexport function omit( source ) : {} {\n    const dest = {}, discard = {};\n\n    for( let i = 1; i < arguments.length; i ++ ){\n        discard[ arguments[ i ] ] = true;\n    }\n\n    for( var name in source ) {\n        if( !discard.hasOwnProperty( name ) && source.hasOwnProperty( name ) ) {\n            dest[ name ] = source[ name ];\n        }\n    }\n\n    return dest;\n}\n\n/** map `source` object properties with a given function, and assign the result to the `dest` object.\n * When `fun` returns `undefined`, skip this value. \n */\nexport function transform< A, B >( dest : { [ key : string ] : A }, source : { [ key : string ] : B }, fun : ( value : B, key : string ) => A | void ) : { [ key : string ] : A } {\n    for( var name in source ) {\n        if( source.hasOwnProperty( name ) ) {\n            var value = fun( source[ name ], name );\n            value === void 0 || ( dest[ name ] = < A >value );\n        }\n    }\n\n    return dest;\n}\n\n/** @hidden */\nexport function fastAssign< A >( dest : A, source : {} ) : A {\n    for( var name in source ) {\n        dest[ name ] = source[ name ];\n    }\n\n    return dest;\n}\n\n/** @hidden */\nexport function fastDefaults< A >( dest : A, source : {} ) : A {\n    for( var name in source ) {\n        if( dest[ name ] === void 0 ){\n            dest[ name ] = source[ name ];\n        }\n    }\n\n    return dest;\n}\n\n/** Similar to underscore `_.extend` and `Object.assign` */\nexport function assign< T >( dest : T, ...sources : Object[] ) : T\nexport function assign< T >( dest : T, source : Object ) : T {\n    for( var name in source ) {\n        if( source.hasOwnProperty( name ) ) {\n            dest[ name ] = source[ name ];\n        }\n    }\n\n    if( arguments.length > 2 ){\n        for( let i = 2; i < arguments.length; i++ ){\n            const other = arguments[ i ];\n            other && assign( dest, other );\n        }\n    }\n\n    return dest;\n}\n\n/** Similar to underscore `_.keys` */\nexport function keys( o : any ) : string[]{\n    return o ? Object.keys( o ) : [];\n}\n\n/** Similar to underscore `_.once` */\nexport function once( func : Function ) : Function {\n    var memo, first = true;\n    return function() {\n        if ( first ) {\n            first = false;\n            memo = func.apply(this, arguments);\n            func = null;\n        }\n        return memo;\n    };\n}\n\n/** @hidden */\nconst ArrayProto = Array.prototype,\n      DateProto = Date.prototype,\n      ObjectProto = Object.prototype;\n\n/**\n * Determine whenever two values are not equal, deeply traversing \n * arrays and plain JS objects (hashes). Dates are compared by enclosed timestamps, all other\n * values are compared with strict comparison.\n */\nexport function notEqual( a : any, b : any) : boolean {\n    if( a === b ) return false;\n\n    if( a && b && typeof a == 'object' && typeof b == 'object' ) {\n        const protoA = Object.getPrototypeOf( a );\n\n        if( protoA !== Object.getPrototypeOf( b ) ) return true;\n\n        switch( protoA ){\n            case DateProto   : return +a !== +b;\n            case ArrayProto  : return arraysNotEqual( a, b );\n            case ObjectProto :\n            case null:\n                return objectsNotEqual( a, b );\n        }\n    }\n\n    return true;\n}\n\n/** @hidden */\nfunction objectsNotEqual( a, b ) {\n    const keysA = Object.keys( a );\n\n    if( keysA.length !== Object.keys( b ).length ) return true;\n\n    for( let i = 0; i < keysA.length; i++ ) {\n        const key = keysA[ i ];\n\n        if( !b.hasOwnProperty( key ) || notEqual( a[ key ], b[ key ] ) ) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\n/** @hidden */\nfunction arraysNotEqual( a, b ) {\n    if( a.length !== b.length ) return true;\n\n    for( let i = 0; i < a.length; i++ ) {\n        if( notEqual( a[ i ], b[ i ] ) ) return true;\n    }\n\n    return false;\n}\n\n/**\n * Create an object without Object prototype members except hasOwnProperty.\n * @param obj - optional parameter to populate the hash map from.\n */\nconst HashProto = Object.create( null );\nHashProto.hasOwnProperty = ObjectProto.hasOwnProperty;\n\nexport function hashMap( obj? ){\n    const hash = Object.create( HashProto );\n    return obj ? assign( hash, obj ) : hash;\n}","import { once as _once } from './tools'\n\n/*******************\n * Prebuilt events map, used for optimized bulk event subscriptions.\n *\n * const events = new EventMap({\n *      'change' : true, // Resend this event from self as it is.\n *      'change:attr' : 'localTargetFunction',\n *      'executedInTargetContext' : function(){ ... }\n *      'executedInNativeContext' : '^props.handler'\n * })\n */\n/** @hidden */\nexport interface EventsDefinition {\n    [ events : string ] : Function | string | boolean\n}\n\n/** @hidden */\nexport class EventMap {\n    handlers : EventDescriptor[] = [];\n\n    constructor( map? : EventsDefinition | EventMap ){\n        if( map ){\n            if( map instanceof EventMap ){\n                this.handlers = map.handlers.slice();\n            }\n            else{\n                map && this.addEventsMap( map );\n            }\n        }\n    }\n\n    merge( map : EventMap ){\n        this.handlers = this.handlers.concat( map.handlers );\n    }\n\n    addEventsMap( map : EventsDefinition ){\n        for( let names in map ){\n            this.addEvent( names, map[ names ] )\n        }\n    }\n\n    bubbleEvents( names : string ){\n        for( let name of names.split( eventSplitter ) ){\n            this.addEvent( name, getBubblingHandler( name ) );\n        }\n    }\n\n    addEvent( names : string, callback : Function | string | boolean ){\n        const { handlers } = this;\n\n        for( let name of names.split( eventSplitter ) ){\n            handlers.push( new EventDescriptor( name, callback ) );\n        }\n    }\n\n    subscribe( target : {}, source : EventSource ){\n        for( let event of this.handlers ){\n            on( source, event.name, event.callback, target );\n        }\n    }\n\n    unsubscribe( target : {}, source : EventSource ){\n        for( let event of this.handlers ){\n            off( source, event.name, event.callback, target );\n        }\n    }\n}\n\n/** @hidden */\nexport class EventDescriptor {\n    callback : Function\n\n    constructor(\n        public name : string,\n        callback : Function | string | boolean\n    ){\n        if( callback === true ){\n            this.callback = getBubblingHandler( name );\n        }\n        else if( typeof callback === 'string' ){\n            this.callback =\n                function localCallback(){\n                    const handler = this[ callback ];\n                    handler && handler.apply( this, arguments );\n                };\n        }\n        else{\n            this.callback = <Function>callback;\n        }\n    }\n}\n\n/** @hidden */\nconst _bubblingHandlers = {};\n\n/** @hidden */\nfunction getBubblingHandler( event : string ){\n    return _bubblingHandlers[ event ] || (\n        _bubblingHandlers[ event ] = function( a?, b?, c?, d?, e? ){\n            if( d !== void 0 || e !== void 0 ) trigger5( this, event, a, b, c, d, e );\n            if( c !== void 0 ) trigger3( this, event, a, b, c );\n            else trigger2( this, event, a, b );\n        }\n    );\n}\n\n/** @hidden */\nexport interface HandlersByEvent {\n    [ name : string ] : EventHandler\n}\n\n/** @hidden */\nexport class EventHandler {\n    constructor( public callback : Callback, public context : any, public next = null ){}\n}\n\n/** @hidden */\nfunction listOff( _events : HandlersByEvent, name : string, callback : Callback, context : any ){\n    const head = _events[ name ];\n\n    let filteredHead, prev;\n\n    for( let ev = head; ev; ev = ev.next ){\n        // Element must be kept\n        if( ( callback && callback !== ev.callback && callback !== ev.callback._callback ) ||\n            ( context && context !== ev.context ) ){\n            \n            prev = ev;\n            filteredHead || ( filteredHead = ev );\n        }\n        // Element must be skipped\n        else{\n            if( prev ) prev.next = ev.next;\n        }\n    }\n\n    if( head !== filteredHead ) _events[ name ] = filteredHead;\n}\n\n/** @hidden */\nfunction listSend2( head : EventHandler, a, b ){\n    for( let ev = head; ev; ev = ev.next ) ev.callback.call( ev.context, a, b );\n}\n\n/** @hidden */\nfunction listSend3( head : EventHandler, a, b, c ){\n    for( let ev = head; ev; ev = ev.next ) ev.callback.call( ev.context, a, b, c );\n}\n\n/** @hidden */\nfunction listSend4( head : EventHandler, a, b, c, d ){\n    for( let ev = head; ev; ev = ev.next ) ev.callback.call( ev.context, a, b, c, d );\n}\n\n/** @hidden */\nfunction listSend5( head : EventHandler, a, b, c, d, e ){\n    for( let ev = head; ev; ev = ev.next ) ev.callback.call( ev.context, a, b, c, d, e );\n}\n\n/** @hidden */\nfunction listSend6( head : EventHandler, a, b, c, d, e, f ){\n    for( let ev = head; ev; ev = ev.next ) ev.callback.call( ev.context, a, b, c, d, e, f );\n}\n\n/** @hidden */\nexport interface Callback extends Function {\n    _callback? : Function\n}\n\n/** @hidden */\nexport function on( source : EventSource, name : string, callback : Callback, context? : any ) : void {\n    if( callback ){\n        const _events = source._events || ( source._events = Object.create( null ) );\n        _events[ name ] = new EventHandler( callback, context, _events[ name ] );\n    }\n}\n\n/** @hidden */\nexport function once( source : EventSource, name : string, callback : Callback, context? : any ) : void {\n    if( callback ){\n        const once : Callback = _once( function(){\n            off( source, name, once );\n            callback.apply(this, arguments);\n        });\n\n        once._callback = callback;\n        on( source, name, once, context );\n    }\n}\n\n/** @hidden */\nexport function off( source : EventSource, name? : string, callback? : Callback, context? : any ) : void {\n    const { _events } = source;\n    if( _events ){\n        if( callback || context ) {\n            if( name ){\n                listOff( _events, name, callback, context );\n            }\n            else{\n                for( let name in _events ){\n                    listOff( _events, name, callback, context );\n                }\n            }\n        }\n        else if( name ){\n            _events[ name ] = void 0;\n        }\n        else{\n            source._events = void 0;\n        }\n    }\n}\n\n/** @hidden */\nexport interface EventSource {\n    _events : HandlersByEvent\n}\n\n/** @hidden */\nconst eventSplitter = /\\s+/;\n\n/** @hidden */\nexport function strings( api : ApiEntry, source : EventSource, events : string, callback : Callback, context ){\n    if( eventSplitter.test( events ) ){\n        const names = events.split( eventSplitter );\n        for( let name of names ) api( source, name, callback, context );\n    }\n    else api( source, events, callback, context );\n}\n\n/** @hidden */\nexport type ApiEntry = ( source : EventSource, event : string, callback : Callback, context? : any ) => void\n\n/*********************************\n * Event-triggering API\n */\n\n/** @hidden */\nexport function trigger2( self : EventSource, name : string, a, b ) : void {\n    const { _events } = self;\n    if( _events ){\n        const queue = _events[ name ],\n            { all } = _events;\n\n        listSend2( queue, a, b );\n        listSend3( all, name, a, b );\n    }\n};\n\n/** @hidden */\nexport function trigger3( self : EventSource, name : string, a, b, c ) : void{\n    const { _events } = self;\n    if( _events ){\n        const queue = _events[ name ],\n            { all } = _events;\n\n        listSend3( queue, a, b, c );\n        listSend4( all, name, a, b, c );\n    }\n};\n\n/** @hidden */\nexport function trigger5( self : EventSource, name : string, a, b, c, d, e ) : void{\n    const { _events } = self;\n    if( _events ){\n        const queue = _events[ name ],\n            { all } = _events;\n\n        listSend5( queue, a, b, c, d, e );\n        listSend6( all, name, a, b, c, d, e );\n    }\n};","/*****************************************************************\n * Mixins engine and @define metaprogramming class extensions\n *\n * Vlad Balin & Volicon, (c) 2016-2017\n */\nimport { __extends } from 'tslib';\nimport { assign, defaults, getBaseClass, hashMap, transform } from './tools';\n\nexport interface Subclass< T > extends MixableConstructor {\n    new ( ...args ) : T\n    prototype : T\n}\n\nexport interface MixableConstructor extends Function{\n    __super__? : object;\n    mixins? : MixinsState;\n    onExtend? : ( BaseClass : Function ) => void;\n    onDefine? : ( definition : object, BaseClass : Function ) => void;\n    define? : ( definition? : object, statics? : object ) => MixableConstructor;\n    extend? : <T extends object>( definition? : T, statics? : object ) => Subclass<T>;\n}\n\nexport interface MixableDefinition {\n    mixins? : Mixin[]\n}\n\n/**\n * Base class, holding metaprogramming class extensions.\n * Supports mixins and Class.define metaprogramming method.\n */\nexport class Mixable {\n    static onExtend : ( BaseClass : Function ) => void;\n    static onDefine : ( definition : object, BaseClass : Function ) => object;    \n    static __super__ : object\n    static mixins : MixinsState;\n\n    /** \n     *  Must be called after inheritance and before 'define'.\n     */\n    static define( protoProps : MixableDefinition = {}, staticProps? : object ) : MixableConstructor {\n        const BaseClass : MixableConstructor = getBaseClass( this );\n\n        // Assign statics.\n        staticProps && assign( this, staticProps );\n\n        // Extract and apply mixins from the definition.\n        const { mixins, ...defineMixin } = protoProps;\n        mixins && this.mixins.merge( mixins );\n\n        // Unshift definition to the the prototype.\n        this.mixins.mergeObject( this.prototype, defineMixin, true );\n\n        // Unshift definition from statics to the prototype.\n        this.mixins.mergeObject( this.prototype, this.mixins.getStaticDefinitions( BaseClass ), true );\n\n        // Call onDefine hook, if it's present.\n        this.onDefine && this.onDefine( this.mixins.definitions, BaseClass );\n        \n        // Apply merge rules to inherited members. No mixins can be added after this point.\n        this.mixins.mergeInheritedMembers( BaseClass );\n\n        return this;\n    }\n\n    /** Backbone-compatible extend method to be used in ES5 and for backward compatibility */\n    static extend< T extends object>(spec? : T, statics? : {} ) : Subclass< T > {\n        let TheSubclass : Subclass< T >;\n\n        // 1. Create the subclass (ES5 compatibility shim).\n        // If constructor function is given...\n        if( spec && spec.hasOwnProperty( 'constructor' ) ){\n            // ...we need to manually call internal TypeScript __extend function. Hack! Hack!\n            TheSubclass = spec.constructor as any;\n            __extends( TheSubclass, this );\n        }\n        // Otherwise, create the subclall in usual way.\n        else{\n            TheSubclass = class Subclass extends this {} as any;\n        }\n\n        predefine( TheSubclass );\n        spec && TheSubclass.define( spec, statics );\n\n        return TheSubclass;\n    }\n}\n\n/** @decorator `@predefine` for forward definitions. Can be used with [[Mixable]] classes only.\n * Forwards the call to the [[Mixable.predefine]];\n */\nexport function predefine( Constructor : MixableConstructor ) : void {\n    const BaseClass : MixableConstructor = getBaseClass( Constructor );\n\n    // Legacy systems support\n    Constructor.__super__ = BaseClass.prototype;\n    \n    // Initialize mixins structures...\n    Constructor.define || MixinsState.get( Mixable ).populate( Constructor );\n\n    // Make sure Ctor.mixins are ready before the callback...\n    MixinsState.get( Constructor );\n\n    // Call extend hook.\n    Constructor.onExtend && Constructor.onExtend( BaseClass );\n}\n\n/** @decorator `@define` for metaprogramming magic. Can be used with [[Mixable]] classes only.\n *  Forwards the call to [[Mixable.define]].\n */\nexport function define( ClassOrDefinition : Function ) : void;\nexport function define( ClassOrDefinition : object ) : ClassDecorator;\nexport function define( ClassOrDefinition : object | MixableConstructor ){\n    // @define class\n    if( typeof ClassOrDefinition === 'function' ){\n        predefine( ClassOrDefinition );\n        ( ClassOrDefinition as MixableConstructor ).define();\n    }\n    // @define({ prop : val, ... }) class\n    else{\n        return function( Ctor : MixableConstructor ){\n            predefine( Ctor );\n            Ctor.define( ClassOrDefinition );\n        }\n    }\n}\n\nexport function definitions( rules : MixinMergeRules ) : ClassDecorator {\n    return ( Class : Function ) => {\n        const mixins = MixinsState.get( Class );\n        mixins.definitionRules = defaults( hashMap(), rules, mixins.definitionRules );\n    }\n}\n\n// Create simple property list decorator\nexport function propertyListDecorator( listName: string ) : PropertyDecorator {\n    return function propList(proto, name : string) {\n        const list = proto.hasOwnProperty( listName ) ?\n            proto[ listName ] : (proto[ listName ] = (proto[ listName ] || []).slice());  \n\n        list.push(name);\n    }\n}\n\nexport function definitionDecorator( definitionKey, value ){\n    return ( proto : object, name : string ) => {\n        MixinsState\n            .get( proto.constructor )\n            .mergeObject( proto, {\n                [ definitionKey ] : {\n                    [ name ] : value\n                }\n            });\n    }\n}\n\nexport class MixinsState {\n    mergeRules : MixinMergeRules;\n    definitionRules : MixinMergeRules;\n    definitions : object = {};\n    appliedMixins : Mixin[];\n\n    // Return mixins state for the class. Initialize if it's not exist.\n    static get( Class ) : MixinsState {\n        const { mixins } = Class;\n    \n        return mixins && Class === mixins.Class ? mixins :\n             Class.mixins = new MixinsState( Class );\n    }\n\n    constructor( public Class : MixableConstructor ){\n        const { mixins } = getBaseClass( Class );\n\n        this.mergeRules = ( mixins && mixins.mergeRules ) || hashMap();\n        this.definitionRules = ( mixins && mixins.definitionRules ) || hashMap();\n        this.appliedMixins = ( mixins && mixins.appliedMixins ) || [];\n    }\n\n    getStaticDefinitions( BaseClass : Function ){\n        const definitions = hashMap(),\n            { Class } = this;\n\n        return transform( definitions, this.definitionRules, ( rule, name ) =>{\n            if( BaseClass[ name ] !== Class[ name ]){\n                return Class[ name ];\n            }\n        });\n    }\n\n    merge( mixins : Mixin[] ){\n        const proto      = this.Class.prototype,\n            { mergeRules } = this;\n\n        // Copy applied mixins array as it's going to be updated.\n        const appliedMixins = this.appliedMixins = this.appliedMixins.slice();\n\n        // Apply mixins in sequence...\n        for( let mixin of mixins ) {\n            // Mixins array should be flattened.\n            if( Array.isArray( mixin ) ) {\n                this.merge( mixin );\n            }\n            // Don't apply mixins twice.\n            else if( appliedMixins.indexOf( mixin ) < 0 ){\n                appliedMixins.push( mixin );\n\n                // For constructors, merge _both_ static and prototype members.\n                if( typeof mixin === 'function' ){\n                    // Merge static members\n                    this.mergeObject( this.Class, mixin );\n\n                    // merge definitionRules and mergeRules\n                    const sourceMixins = ( mixin as any ).mixins;\n                    if( sourceMixins ){\n                        this.mergeRules = defaults( hashMap(), this.mergeRules, sourceMixins.mergeRules );\n                        this.definitionRules = defaults( hashMap(), this.definitionRules, sourceMixins.definitionRules );\n                        this.appliedMixins = this.appliedMixins.concat( sourceMixins.appliedMixins );\n                    }\n\n                    // Prototypes are merged according with rules.\n                    this.mergeObject( proto, mixin.prototype );\n                }\n                // Handle plain object mixins.\n                else {\n                    this.mergeObject( proto, mixin );\n                }\n            }\n        }\n    }\n\n    populate( ...ctors : Function[] ){\n        for( let Ctor of ctors ) {\n            MixinsState.get( Ctor ).merge([ this.Class ]);\n        }\n    }\n\n    mergeObject( dest : object, source : object, unshift? : boolean ) {\n        forEachOwnProp( source, name => {\n            const sourceProp = Object.getOwnPropertyDescriptor( source, name );\n            let rule : MixinMergeRule;\n\n            if( rule = this.definitionRules[ name ] ){\n                assignProperty( this.definitions, name, sourceProp, rule, unshift );\n            }\n\n            if( !rule || rule === mixinRules.protoValue  ){\n                assignProperty( dest, name, sourceProp, this.mergeRules[ name ], unshift );\n            }\n        });\n    }\n\n    mergeInheritedMembers( BaseClass : Function ){\n        const { mergeRules, Class } = this;\n\n        if( mergeRules ){\n            const proto = Class.prototype,\n                baseProto = BaseClass.prototype;\n\n            for( let name in mergeRules ) {\n                const rule = mergeRules[ name ];\n\n                if( proto.hasOwnProperty( name ) && name in baseProto ){\n                    proto[ name ] = resolveRule( proto[ name ], baseProto[ name ], rule );\n                }\n            }\n        }\n    }\n}\n\nconst dontMix = {\n    function : hashMap({\n        length : true,\n        prototype : true,\n        caller : true,\n        arguments : true,\n        name : true,\n        __super__ : true\n    }),\n    \n    object : hashMap({\n        constructor : true\n    })    \n}\n\nfunction forEachOwnProp( object : object, fun : ( name : string ) => void ){\n    const ignore = dontMix[ typeof object ];\n\n    for( let name of Object.getOwnPropertyNames( object ) ) {\n        ignore[ name ] || fun( name );\n    }\n}\n\nexport interface MixinMergeRules {\n    [ name : string ] : MixinMergeRule\n}\n\nexport type MixinMergeRule = ( a : any, b : any ) => any\nexport type Mixin = { [ key : string ] : any } | Function\n\n// @mixins( A, B, ... ) decorator.\nexport interface MixinRulesDecorator {\n    ( rules : MixinMergeRules ) : ClassDecorator\n    value( a : object, b : object) : object;\n    protoValue( a : object, b : object) : object;\n    merge( a : object, b : object ) : object;\n    pipe( a: Function, b : Function ) : Function;\n    defaults( a: Function, b : Function ) : Function;\n    classFirst( a: Function, b : Function ) : Function;\n    classLast( a: Function, b : Function ) : Function;\n    every( a: Function, b : Function ) : Function;\n    some( a: Function, b : Function ) : Function;\n}\n\nexport const mixins = ( ...list : Mixin[] ) => (\n    ( Class : Function ) => MixinsState.get( Class ).merge( list )\n);\n\n// @mixinRules({ name : rule, ... }) decorator.\nexport const mixinRules = ( ( rules : MixinMergeRules ) => (\n    ( Class : Function ) => {\n        const mixins = MixinsState.get( Class );\n        mixins.mergeRules = defaults( rules, mixins.mergeRules );\n    }\n) ) as MixinRulesDecorator;\n\n// Pre-defined mixin merge rules\n\nmixinRules.value = ( a, b ) => a;\n\nmixinRules.protoValue = ( a, b ) => a;\n\n// Recursively merge members\nmixinRules.merge = ( a, b ) => defaults( {}, a, b );\n\n    // Execute methods in pipe, with the class method executed last.\nmixinRules.pipe = ( a, b ) => (\n    function( x : any ) : any {\n        return a.call( this, b.call( this, x ) );\n    }\n);\n\n    // Assume methods return an object, and merge results with defaults (class method executed first)\nmixinRules.defaults = ( a : Function, b : Function ) => (\n    function() : object {\n        return defaults( a.apply( this, arguments ), b.apply( this, arguments ) );\n    }\n);\n\n// Execute methods in sequence staring with the class method.\nmixinRules.classFirst = ( a : Function, b : Function ) => (\n    function() : void {\n        a.apply( this, arguments );\n        b.apply( this, arguments );\n    }\n);\n\n    // Execute methods in sequence ending with the class method.\nmixinRules.classLast = ( a : Function, b : Function ) => (\n    function() : void {\n        b.apply( this, arguments );\n        a.apply( this, arguments );\n    }\n)\n\n    // Execute methods in sequence returning the first falsy result.\nmixinRules.every = ( a : Function, b : Function ) =>(\n    function() : any {\n        return a.apply( this, arguments ) && b.apply( this, arguments );\n    }\n);\n    // Execute methods in sequence returning the first truthy result.\nmixinRules.some = ( a : Function, b : Function ) =>(\n    function() : any {\n        return a.apply( this, arguments ) || b.apply( this, arguments );\n    }\n);\n\n/**\n * Helpers\n */\n\nfunction assignProperty( dest : object, name : string, sourceProp : PropertyDescriptor, rule : MixinMergeRule, unshift? : boolean ){\n// Destination prop is defined, thus the merge rules must be applied.\n    if( dest.hasOwnProperty( name ) ){\n        const destProp = Object.getOwnPropertyDescriptor( dest, name );\n\n        if( destProp.configurable && 'value' in destProp ){\n            dest[ name ] = unshift ?\n                resolveRule( sourceProp.value, destProp.value, rule ) :\n                resolveRule( destProp.value, sourceProp.value, rule ) ;\n        }\n    }\n    // If destination is empty, just copy the prop over.\n    else{\n        Object.defineProperty( dest, name, sourceProp );\n    }\n}\n\nfunction resolveRule( dest, source, rule : MixinMergeRule ){\n    // When destination is empty, take the source.\n    if( dest === void 0 ) return source;\n\n    // In these cases we take non-empty destination:\n    if( !rule || source === void 0 ) return dest;\n\n    // In other cases we must merge values.\n    return rule( dest, source );\n}","import * as _eventsApi from './eventsource';\nimport { EventMap, EventsDefinition, EventSource, HandlersByEvent } from './eventsource';\nimport { define, definitions, Mixable, MixableConstructor, mixinRules, MixinsState } from './mixins';\nimport { omit, transform } from './tools';\n\nconst { strings, on, off, once, trigger5, trigger2, trigger3 } = _eventsApi;\n\n/** @hidden */\nlet _idCount = 0;\n\n/** @hidden */\nfunction uniqueId() : string {\n    return 'l' + _idCount++;\n}\n\nexport { EventMap, EventsDefinition };\n\nexport interface MessengerDefinition {\n    _localEvents? : EventMap\n    localEvents? : EventsDefinition\n    properties? : PropertyMap\n    [ name : string ] : any\n}\n\nexport interface PropertyMap {\n    [ name : string ] : Property\n}\n\nexport type Property = PropertyDescriptor | ( () => any )\n\n/** @hidden */\nexport interface MessengersByCid {\n    [ cid : string ] : Messenger\n}\n\n/** @hidden */\nexport type CallbacksByEvents = { [ events : string ] : Function }\n\n/*************************\n * Messenger is mixable class with capabilities of sending and receiving synchronous events.\n * This class itself can serve as both mixin and base class.\n */\n\n@define\n@definitions({\n    properties : mixinRules.merge,\n    localEvents : mixinRules.merge\n})\nexport class Messenger implements Mixable, EventSource {\n    // Define extendable mixin static properties.\n    static __super__ : object;\n    static mixins : MixinsState;\n    static onExtend : ( BaseClass : Function ) => void;\n    static define : ( definition? : MessengerDefinition, statics? : object ) => MixableConstructor;\n    static extend : ( definition? : MessengerDefinition, statics? : object ) => MixableConstructor;\n    static onDefine({ localEvents, _localEvents, properties } : MessengerDefinition, BaseClass? : typeof Mixable ){\n        // Handle localEvents definition\n        if( localEvents || _localEvents ){\n            const eventsMap = new EventMap( this.prototype._localEvents );\n\n            localEvents && eventsMap.addEventsMap( localEvents );\n            _localEvents && eventsMap.merge( _localEvents );\n            \n            this.prototype._localEvents = eventsMap;\n        }\n\n        // Handle properties definitions...\n        if( properties ){\n            Object.defineProperties( this.prototype, transform( {}, <PropertyMap>properties, toPropertyDescriptor ) );\n        }\n    }\n\n    /** @hidden */ \n    _events : HandlersByEvent = void 0;\n\n    /** @hidden */ \n    _listeningTo : MessengersByCid = void 0\n\n    /** Unique client-only id. */\n    cid : string\n\n    /** @hidden Prototype-only property to manage automatic local events subscription */ \n    _localEvents : EventMap\n\n    /** @hidden */ \n    constructor(){\n        this.cid = uniqueId();\n        this.initialize.apply( this, arguments );\n\n        // TODO: local events subscribe?\n    }\n\n    /** Method is called at the end of the constructor */\n    initialize() : void {}\n    \n    on( events : string | CallbacksByEvents, callback, context? ) : this {\n        if( typeof events === 'string' ) strings( on, this, events, callback, context );\n        else for( let name in events ) strings( on, this, name, events[ name ], context || callback );\n\n        return this;\n    }\n\n    once( events : string | CallbacksByEvents, callback, context? ) : this {\n        if( typeof events === 'string' ) strings( once, this, events, callback, context );\n        else for( let name in events ) strings( once, this, name, events[ name ], context || callback );\n\n        return this;\n    }\n\n    off( events? : string | CallbacksByEvents, callback?, context? ) : this {\n        if( !events ) off( this, void 0, callback, context );\n        else if( typeof events === 'string' ) strings( off, this, events, callback, context );\n        else for( let name in events ) strings( off, this, name, events[ name ], context || callback );\n\n        return this;\n    }\n\n    // Trigger one or many events, firing all bound callbacks. Callbacks are\n    // passed the same arguments as `trigger` is, apart from the event name\n    // (unless you're listening on `\"all\"`, which will cause your callback to\n    // receive the true name of the event as the first argument).\n    trigger(name : string, a?, b?, c?, d?, e? ) : this {\n        if( d !== void 0 || e !== void 0 ) trigger5( this, name, a, b, c, d, e );\n        else if( c !== void 0 ) trigger3( this, name, a, b, c );\n        else trigger2( this, name, a, b );\n        return this;\n    }\n\n    listenTo( source : Messenger, a : string | CallbacksByEvents, b? : Function ) : this {\n        if( source ){\n            addReference( this, source );\n            source.on( a, !b && typeof a === 'object' ? this : b, this );\n        }\n\n        return this;\n    }\n\n    listenToOnce( source : Messenger, a : string | CallbacksByEvents, b? : Function ) : this {\n        if( source ){\n            addReference( this, source );\n            source.once( a, !b && typeof a === 'object' ? this : b, this );\n        }\n\n        return this;\n    }\n\n    stopListening( a_source? : Messenger, a? : string | CallbacksByEvents, b? : Function ) : this {\n        const { _listeningTo } = this;\n        if( _listeningTo ){\n            const removeAll = !( a || b ),\n                  second = !b && typeof a === 'object' ? this : b;\n\n            if( a_source ){\n                const source = _listeningTo[ a_source.cid ];\n                if( source ){\n                    if( removeAll ) delete _listeningTo[ a_source.cid ];\n                    source.off( a, second, this );\n                }\n            }\n            else if( a_source == null ){\n                for( let cid in _listeningTo ) _listeningTo[ cid ].off( a, second, this );\n\n                if( removeAll ) ( this._listeningTo = void 0 );\n            }\n        }\n\n        return this;\n    }\n\n    /**\n     * Destructor. Stops messenger from listening to all objects,\n     * and stop others from listening to the messenger. \n     */\n    _disposed : boolean\n\n    dispose() : void {\n        if( this._disposed ) return;\n\n        this.stopListening();\n        this.off();\n\n        this._disposed = true;\n    }\n}\n\n/**\n * Backbone 1.2 API conformant Events mixin.\n */\nexport const Events : Messenger = <Messenger> omit( Messenger.prototype, 'constructor', 'initialize' );\n\n/**\n * Messenger Private Helpers \n */\n\nfunction toPropertyDescriptor( x : Property ) : PropertyDescriptor {\n    if( x ){\n        return typeof x === 'function' ? { get : < () => any >x, configurable : true } : <PropertyDescriptor> x;\n    }\n}\n\n/** @hidden */\nfunction addReference( listener : Messenger, source : Messenger ){\n      const listeningTo = listener._listeningTo || (listener._listeningTo = Object.create( null ) ),\n            cid = source.cid || ( source.cid = uniqueId() );\n\n      listeningTo[ cid ] = source;\n}","import { Messenger } from './events'\nimport { define } from './mixins';\n\nexport type LogLevel = 'error' | 'warn' | 'debug' | 'info' | 'log';\nexport type LoggerEventHandler = ( topic : string, msg : string, props : object )  => void;\n\nexport const isProduction = typeof process !== 'undefined' && process.env && process.env.NODE_ENV === 'production',\n    logEvents : LogLevel[] =  isProduction ?\n        [ 'error', 'info' ] :\n        [ 'error', 'warn', 'debug', 'info', 'log' ];\n\n@define\nexport class Logger extends Messenger {\n    counter : { [ level in LogLevel ]? : number } = {}\n\n    // Log events of the given log level to the console, optionally filtered by topic\n    logToConsole( level : LogLevel, filter? : RegExp ) : this {\n        return this.on( level, ( topic, msg, props ) => {\n            if( !filter || filter.test( topic ) ){\n                const args = [ `[${topic}] ${msg}` ];\n        \n                for( let name in props ){\n                    args.push( `\\n\\t${name}:`, toString( props[ name ] ) );\n                }\n        \n                console[ level ].apply( console, args );\n            }\n        });\n    }\n\n    // Fire exception on the events of the given log level, optionally filtered by topic\n    throwOn( level : LogLevel, filter? : RegExp ) : this {\n        return this.on( level, ( topic, msg, props ) => {\n            if( !filter || filter.test( topic ) ){\n                throw new Error( `[${topic}] ${msg}` );\n            }\n        });\n    }\n\n    // Count log events of the given level, optionally filtered by topic\n    count( level : LogLevel, filter? : RegExp ) : this {\n        return this.on( level, ( topic, msg, props ) => {\n            if( !filter || filter.test( topic ) ){\n                this.counter[ level ] = ( this.counter[ level ] || 0 ) + 1;\n            }\n        });\n    }\n\n    trigger : ( level : LogLevel, topic : string, message : string, props? : object ) => this;\n    \n    off : ( event? : LogLevel ) => this;\n\n\n    on( handlers : { [ name in LogLevel ] : LoggerEventHandler } ) : this;\n    on( handlers : LogLevel, handler : LoggerEventHandler ) : this;\n    on( handlers : 'all', handler : ( level : LogLevel, topic : string, msg : string, props : object )  => void ) : this;\n    on( a : any, b? : any ){\n        return super.on( a, b );\n    }\n}\n\n/**\n * Convert objects to the plain text friendly format.\n * primitives as in JSON.\n */\nlet toString = typeof window === 'undefined' ? \n    something => {\n        if( something && typeof something === 'object' ){\n            const { __inner_state__ } = something,\n                value = __inner_state__ || something,\n                isArray = Array.isArray( value );\n\n            const body = isArray ? `[ length = ${ value.length } ]` : `{ ${ Object.keys( value ).join( ', ' )} }`;\n\n            return something.constructor.name + ' ' + body;\n        }\n\n        return JSON.stringify( something );\n    }\n    : x => x;\n\nexport const logger = new Logger();\n\nif( typeof console !== 'undefined' ) {\n    for( let event of logEvents ){\n        logger.logToConsole( event );\n    }\n}\n\nexport const log : typeof logger.trigger = logger.trigger.bind( logger );","export interface IONode {\n    _endpoint : IOEndpoint\n    _ioPromise : IOPromise< this >\n}\n\nexport interface IOPromise<T> extends Promise<T> {\n    abort? : () => void\n}\n\nexport interface IOEndpoint {\n    list( options : IOOptions, collection? ) : IOPromise<any>\n    create( json : any, options : IOOptions, record? ) : IOPromise<any>\n    update( id : string | number, json :any, options : IOOptions, record? ) : IOPromise<any>\n    read( id : string | number, options : IOOptions, record? ) : IOPromise<any>\n    destroy( id : string | number, options : IOOptions, record? ) : IOPromise<any>\n    subscribe( events : IOEvents, collection? ) : IOPromise<any>\n    unsubscribe( events : IOEvents, collection? ) : void\n}\n\nexport interface IOOptions {\n    ioUpdate? : boolean\n}\n\nexport interface IOEvents {\n    updated? : ( json : any ) => void\n    removed? : ( json : any ) => void\n}\n\nexport function getOwnerEndpoint( self ) : IOEndpoint {\n    // Check if we are the member of the collection...\n    const { collection } = self;\n    if( collection ){\n        return getOwnerEndpoint( collection );\n    }\n\n    // Now, if we're the member of the model...\n    if( self._owner ){\n        const { _endpoints } = self._owner;\n        return _endpoints && _endpoints[ self._ownerKey ];\n    }\n}\n\n/**\n * Create abortable promise.\n * Adds `promise.abort()` function which rejects the promise by default\n * initialize() function takes third optional argument `abort : ( resolve, reject ) => void`,\n * which can be used to add custom abort handling.\n */\ndeclare var Promise: PromiseConstructorLike;\n\nexport function createIOPromise( initialize : InitIOPromise ) : IOPromise<any>{\n    let resolve, reject, onAbort;\n\n    function abort( fn ){\n        onAbort = fn;\n    }\n\n    const promise : IOPromise<any> = new Promise( ( a_resolve, a_reject ) =>{\n        reject = a_reject;\n        resolve = a_resolve;\n        initialize( resolve, reject, abort );\n    }) as IOPromise<any>;\n\n    promise.abort = () => {\n        onAbort ? onAbort( resolve, reject ) : reject( new Error( \"I/O Aborted\" ) );\n    }\n\n    return promise;\n}\n\nexport type InitIOPromise = ( resolve : ( x? : any ) => void, reject : ( x? : any ) => void, abort? : ( fn : Function ) => void ) => void;\n\nexport function startIO( self : IONode, promise : IOPromise<any>, options : IOOptions, thenDo : ( json : any ) => any ) : IOPromise<any> {\n    // Stop pending I/O first...\n    abortIO( self );\n\n    // Mark future update transaction as IO transaction.\n    options.ioUpdate = true;\n\n    self._ioPromise = promise\n        .then( resp => {\n            self._ioPromise = null;\n    \n            const result = thenDo ? thenDo( resp ) : resp;\n                \n            triggerAndBubble( self, 'sync', self, resp, options );\n                \n            return result;\n        } )  \n        .catch( err => {\n            self._ioPromise = null;\n            \n            // Overlaps with a new `error` event.\n            triggerAndBubble( self, 'error', self, err, options );\n            \n            throw err;\n        } ) as IOPromise<any>;\n\n    self._ioPromise.abort = promise.abort;\n\n    return self._ioPromise;\n}\n\nexport function abortIO( self : IONode ){\n    if( self._ioPromise && self._ioPromise.abort ){\n        self._ioPromise.abort();\n        self._ioPromise = null;\n    }\n}\n\nexport function triggerAndBubble( eventSource, ...args ){\n    eventSource.trigger.apply( eventSource, args );\n    const { collection } = eventSource;\n    collection && collection.trigger.apply( collection, args ); \n}","/**\n * Some sketches for reference resolution.\n *\n * \n * a : Model.from( '~collection' )\n * \n * We need two functions. One for get, and one for compile. \n */\nexport interface Traversable {\n    getStore() : Traversable\n    getOwner() : Traversable\n    get( key : string ) : any \n}\n\nconst referenceMask =  /\\^|(store\\.[^.]+)|([^.]+)/g;\n\n// Compile reference to function\nexport type ResolveReference = ( root : Traversable ) => any;  \n\nexport class CompiledReference {\n    resolve : ResolveReference\n    tail : string\n    local : boolean\n\n    constructor( reference : string, splitTail : boolean = false ){\n        const path = reference\n                        .match( referenceMask )\n                        .map( key => {\n                            if( key === '^' || key === 'owner' ) return 'getOwner()';\n\n                            if( key[ 0 ] === '~' ) return `getStore().get(\"${ key.substr( 1 ) }\")`;\n\n                            if( key.indexOf( 'store.' ) === 0 ) return `getStore().get(\"${ key.substr( 6 ) }\")`;\n                            \n                            return key;\n                        } );\n               \n        this.tail = splitTail && path.pop();\n        this.local = !path.length;\n        \n        this.resolve = <any> new Function( 'self', `\n            var v = self.${ path.shift() };\n                           \n            ${ path.map( x => `\n                v = v && v.${ x };\n            `).join('')}\n\n            return v;\n        ` );\n    }\n}\n\nexport function resolveReference( root : Traversable, reference : string, action : ( object, key : string ) => any ) : any {\n    const path = reference.match( referenceMask ),\n          skip = path.length - 1;\n    \n    let self = root;\n\n    for( var i = 0; i < skip; i++ ){\n        const key = path[ i ];\n        switch( key ){\n            case '~' : self = self.getStore(); break;\n            case '^' : self = self.getOwner(); break;\n            default  : self = self.get( key );\n        }\n\n        // Do nothing if object on the path doesn't exist.\n        if( !self ) return;\n    }\n\n    return action( self, path[ skip ] );\n}","export interface ChildrenErrors {\n    [ key : string ] : ValidationError | any\n} \n\nexport interface Validatable {\n    _validateNested( errors : ChildrenErrors ) : number;\n    validate( self : any ) : any\n    get( key : string ) : any\n}\n\n// Validation error object.\nexport class ValidationError {\n    // Invalid nested object keys \n    nested : ChildrenErrors \n    length : number\n\n    // Local error\n    error : any\n\n    constructor( obj : Validatable ){\n        this.length = obj._validateNested( this.nested = {} );\n\n        if( this.error = obj.validate( obj ) ){\n            this.length++;\n        }\n    }\n\n    each( iteratee : ( value : any, key : string ) => void ) : void {\n        const { error, nested } = this;\n\n        if( error ) iteratee( error, null );\n\n        for( const key in nested ){\n            iteratee( nested[ key ], key );\n        }\n    }\n\n    eachError( iteratee : ( error : any, key : string, object : Validatable ) => void, object : Validatable ) : void {\n        this.each( ( value : any, key : string ) => {\n            if( value instanceof ValidationError ){\n                (<ValidationError>value).eachError( iteratee, object.get( key ) );\n            }\n            else{\n                iteratee( value, key, object );\n            }\n        });\n    }\n}","import { abortIO, IOEndpoint, IONode, IOPromise } from './io-tools';\nimport { CallbacksByEvents, define, definitions, eventsApi, Messenger, MessengerDefinition, MessengersByCid, mixinRules, mixins, MixinsState, log, LogLevel, Logger } from './object-plus';\nimport { resolveReference, Traversable } from './traversable';\nimport { ChildrenErrors, Validatable, ValidationError } from './validation';\n\nconst { trigger3, on, off } = eventsApi;\n/***\n * Abstract class implementing ownership tree, tho-phase transactions, and validation. \n * 1. createTransaction() - apply changes to an object tree, and if there are some events to send, transaction object is created.\n * 2. transaction.commit() - send and process all change events, and close transaction.\n */\n\n/** @private */\nexport interface TransactionalDefinition extends MessengerDefinition {\n    endpoint? : IOEndpoint\n}\n\nexport enum ItemsBehavior {\n    share       = 0b0001,\n    listen      = 0b0010,\n    persistent  = 0b0100\n}\n\n// Transactional object interface\n@define\n@definitions({\n    endpoint : mixinRules.value\n})\n@mixins( Messenger )\nexport abstract class Transactional implements Messenger, IONode, Validatable, Traversable {\n    // Mixins are hard in TypeScript. We need to copy type signatures over...\n    // Here goes 'Mixable' mixin.\n    static endpoint : IOEndpoint;\n    static __super__ : object;\n    static mixins : MixinsState;\n    static define : ( definition? : TransactionalDefinition, statics? : object ) => typeof Transactional;\n    static extend : <T extends TransactionalDefinition>( definition? : T, statics? : object ) => any;\n\n    static onDefine( definitions : TransactionalDefinition, BaseClass : typeof Transactional ){\n        if( definitions.endpoint ) this.prototype._endpoint = definitions.endpoint;\n        Messenger.onDefine.call( this, definitions, BaseClass );\n    };\n\n    static onExtend( BaseClass : typeof Transactional ) : void {\n        // Make sure we don't inherit class factories.\n        if( BaseClass.create === this.create ) {\n            this.create = Transactional.create;\n        }\n    }\n\n    // Define extendable mixin static properties.\n    static create( a : any, b? : any ) : Transactional {\n        return new (this as any)( a, b );\n    }\n\n    /** Generic class factory. May be overridden for abstract classes. Not inherited. */\n    on : ( events : string | CallbacksByEvents, callback, context? ) => this\n    once : ( events : string | CallbacksByEvents, callback, context? ) => this\n    off : ( events? : string | CallbacksByEvents, callback?, context? ) => this\n    trigger      : (name : string, a?, b?, c?, d?, e? ) => this\n\n    stopListening : ( source? : Messenger, a? : string | CallbacksByEvents, b? : Function ) => this\n    listenTo : ( source : Messenger, a : string | CallbacksByEvents, b? : Function ) => this\n    listenToOnce : ( source : Messenger, a : string | CallbacksByEvents, b? : Function ) => this\n    \n    _disposed : boolean;\n\n    // State accessor. \n    readonly __inner_state__ : any;\n\n    // Shared modifier (used by collections of shared models)\n    _shared? : number; \n    \n    dispose() : void {\n        if( this._disposed ) return;\n        \n        abortIO( this );\n        this._owner = void 0;\n        this._ownerKey = void 0;\n        this.off();\n        this.stopListening();\n        this._disposed = true;\n    }\n\n    // Must be called at the end of the constructor in the subclass.\n    initialize() : void {}\n\n    /** @private */\n    _events : eventsApi.HandlersByEvent = void 0;\n\n    /** @private */\n    _listeningTo : MessengersByCid\n\n    /** @private */\n    _localEvents : eventsApi.EventMap\n\n    cid : string\n    cidPrefix : string\n\n    static shared : any;\n\n    // Unique version token replaced on change\n    /** @private */\n    _changeToken : {} = {}\n\n    // true while inside of the transaction\n    /** @private */\n    _transaction : boolean = false;\n\n    // Holds current transaction's options, when in the middle of transaction and there're changes but is an unsent change event\n    /** @private */\n    _isDirty  : TransactionOptions = null;\n\n    // Backreference set by owner (Record, Collection, or other object)\n    /** @private */\n    _owner : Owner = void 0;\n\n    // Key supplied by owner. Used by record to identify attribute key.\n    // Only collections doesn't set the key, which is used to distinguish collections.\n    /** @private */  \n    _ownerKey : string = void 0;\n\n    // Name of the change event\n    /** @private */\n    _changeEventName : string\n\n    /**\n     * Subsribe for the changes.\n     */\n    onChanges( handler : Function, target? : Messenger ){\n        on( this, this._changeEventName, handler, target );\n    }\n\n    /**\n     * Unsubscribe from changes.\n     */\n    offChanges( handler? : Function, target? : Messenger ){\n        off( this, this._changeEventName, handler, target );\n    }\n\n    /**\n     * Listen to changes event. \n     */\n    listenToChanges( target : Transactional, handler ){\n        this.listenTo( target, target._changeEventName, handler );\n    }\n\n    constructor( cid : string | number ){\n        this.cid = this.cidPrefix + cid;\n    }\n\n    // Deeply clone ownership subtree\n    abstract clone( options? : CloneOptions ) : this\n    \n    // Execute given function in the scope of ad-hoc transaction.\n    transaction( fun : ( self : this ) => void, options : TransactionOptions = {} ) : void{\n        const isRoot = transactionApi.begin( this );\n        const update = fun.call( this, this );\n        update && this.set( update );\n        isRoot && transactionApi.commit( this );\n    }\n\n    // Assign transactional object \"by value\", copying aggregated items.\n    assignFrom( source : Transactional | Object ) : this {\n        // Need to delay change events until change token willl by synced.\n        this.transaction( () =>{\n            this.set( ( <any>source ).__inner_state__ || source, { merge : true } );\n\n            // Synchronize change tokens\n            const { _changeToken } = source as any;\n    \n            if( _changeToken ){\n                this._changeToken = _changeToken;\n            }    \n        });\n\n        return this;\n    }\n\n    // Apply bulk object update without any notifications, and return open transaction.\n    // Used internally to implement two-phase commit.\n    // Returns null if there are no any changes.\n    /** @private */  \n    abstract _createTransaction( values : any, options? : TransactionOptions ) : Transaction | void\n\n    // Apply bulk in-place object update in scope of ad-hoc transaction \n    abstract set( values : any, options? : TransactionOptions ) : this;\n\n    \n    // Parse function applied when 'parse' option is set for transaction.\n    parse( data : any, options? : TransactionOptions ) : any { return data }\n\n    // Convert object to the serializable JSON structure\n    abstract toJSON( options? : object ) : {}\n\n    /*******************\n     * Traversals and member access\n     */\n    \n    // Get object member by its key.\n    abstract get( key : string ) : any\n\n    // Get object member by symbolic reference.\n    deepGet( reference : string ) : any {\n        return resolveReference( this, reference, ( object, key ) => object.get ? object.get( key ) : object[ key ] );\n    }\n\n    //_isCollection : boolean\n\n    // Return owner skipping collections.\n    getOwner() : Owner {\n        return this._owner;\n    }\n\n    // Store used when owner chain store lookup failed. Static value in the prototype. \n    /** @private */\n    _defaultStore : Transactional\n\n    // Locate the closest store. Store object stops traversal by overriding this method. \n    getStore() : Transactional {\n        const { _owner } = this;\n        return _owner ? <Transactional> _owner.getStore() : this._defaultStore;\n    }\n\n\n    /***************************************************\n     * Iteration API\n     */\n\n    // Loop through the members. Must be efficiently implemented in container class.\n\n    _endpoint : IOEndpoint\n    _ioPromise : IOPromise<this>\n\n    hasPendingIO() : IOPromise<this> { return this._ioPromise; }\n\n    fetch( options? : object ) : IOPromise<this> { throw new Error( \"Not implemented\" ); }\n\n    getEndpoint() : IOEndpoint {\n        return getOwnerEndpoint( this ) || this._endpoint;\n    }\n    \n    /*********************************\n     * Validation API\n     */\n\n    // Lazily evaluated validation error\n    /** @private */\n    _validationError : ValidationError = void 0\n\n    // Validate ownership tree and return valudation error \n    get validationError() : ValidationError {\n        const error = this._validationError || ( this._validationError = new ValidationError( this ) );\n        return error.length ? error : null; \n    }\n\n    // Validate nested members. Returns errors count.\n    /** @private */\n    abstract _validateNested( errors : ChildrenErrors ) : number\n\n    // Object-level validator. Returns validation error.\n    validate( obj? : Transactional ) : any {}\n\n    // Return validation error (or undefined) for nested object with the given key. \n    getValidationError( key : string ) : any {\n        var error = this.validationError;\n        return ( key ? error && error.nested[ key ] : error ) || null;\n    }\n\n    // Get validation error for the given symbolic reference.\n    deepValidationError( reference : string ) : any {\n        return resolveReference( this, reference, ( object, key ) => object.getValidationError( key ) );\n    }\n\n    // Iterate through all validation errors across the ownership tree.\n    eachValidationError( iteratee : ( error : any, key : string, object : Transactional ) => void ) : void {\n        const { validationError } = this;\n        validationError && validationError.eachError( iteratee, this );\n    }\n\n    // Check whenever member with a given key is valid. \n    isValid( key : string ) : boolean {\n        return !this.getValidationError( key );\n    }\n\n    valueOf() : Object { return this.cid; }\n    toString(){ return this.cid; }\n\n    // Get class name for an object instance. Works fine with ES6 classes definitions (not in IE).\n    getClassName() : string {\n        const { name } = <any>this.constructor;\n        if( name !== 'Subclass' ) return name;\n    }\n\n    // Logging interface for run time errors and warnings.\n    abstract _log( level : LogLevel, topic : string, text : string, value : any, logger? : Logger ) : void\n}\n\nexport interface CloneOptions {\n    // 'Pin store' shall assign this._defaultStore = this.getStore();\n    pinStore? : boolean\n}\n\n// Owner must accept children update events. It's an only way children communicates with an owner.\n/** @private */\nexport interface Owner extends Traversable, Messenger {\n    _onChildrenChange( child : Transactional, options : TransactionOptions ) : void;\n    getOwner() : Owner\n    getStore() : Transactional\n}\n\n// Transaction object used for two-phase commit protocol.\n// Must be implemented by subclasses.\n// Transaction must be created if there are actual changes and when markIsDirty returns true.\n/** @private */ \nexport interface Transaction {\n    // Object transaction is being made on.\n    object : Transactional\n\n    // Send out change events, process update triggers, and close transaction.\n    // Nested transactions must be marked with isNested flag (it suppress owner notification).\n    commit( initiator? : Transactional )\n}\n\n// Options for distributed transaction  \nexport interface TransactionOptions {\n    // Invoke parsing \n    parse? : boolean\n\n    // Optional logger\n    logger? : Logger\n\n    // Suppress change notifications and update triggers\n    silent? : boolean\n\n    // Update existing transactional members in place, or skip the update (ignored by models)\n    merge? : boolean // =true\n\n    // Should collections remove elements in set (ignored by models)  \n    remove? : boolean // =true\n\n    // Always replace enclosed objects with new instances\n    reset? : boolean // = false\n\n    // Do not dispose aggregated members\n    unset? : boolean\n\n    validate? : boolean\n\n    // `true` if the transaction is initiated as a result of IO operation\n    ioUpdate? : boolean\n\n    // The hint for IOEndpoint\n    // If `true`, `record.save()` will behave as \"upsert\" operation for the records having id.\n    upsert? : boolean\n}\n\n/**\n * Low-level transactions API. Must be used like this:\n * const isRoot = begin( record );\n * ...\n * isRoot && commit( record, options );\n * \n * When committing nested transaction, the flag must be set to true. \n * commit( object, options, isNested ) \n */\n\nexport const transactionApi = {\n    // Start transaction. Return true if it's the root one.\n    /** @private */\n    begin( object : Transactional ) : boolean {\n        return object._transaction ? false : ( object._transaction = true );  \n    },\n\n    // Mark object having changes inside of the current transaction.\n    // Returns true whenever there notifications are required.\n    /** @private */\n    markAsDirty( object : Transactional, options : TransactionOptions ) : boolean {\n        // If silent option is in effect, don't set isDirty flag.\n        const dirty = !options.silent;\n        if( dirty ) object._isDirty = options;\n        \n        // Reset version token.\n        object._changeToken = {};\n\n        // Object is changed, so validation must happen again. Clear the cache.\n        object._validationError = void 0;\n\n        return dirty;\n    },\n\n    // Commit transaction. Send out change event and notify owner. Returns true if there were changes.\n    // Must be executed for the root transaction only.\n    /** @private */\n    commit( object : Transactional, initiator? : Transactional ){\n        let originalOptions = object._isDirty;\n\n        if( originalOptions ){\n            // Send the sequence of change events, handling chained handlers.\n            while( object._isDirty ){\n                const options = object._isDirty;\n                object._isDirty = null; \n                trigger3( object, object._changeEventName, object, options, initiator );\n            }\n            \n            // Mark transaction as closed.\n            object._transaction = false;\n\n            // Notify owner on changes out of transaction scope.  \n            const { _owner } = object;  \n            if( _owner && _owner !== <any> initiator ){ // If it's the nested transaction, owner is already aware there are some changes.\n                _owner._onChildrenChange( object, originalOptions );\n            }\n        }\n        else{\n            // No changes. Silently close transaction.\n            object._isDirty = null;\n            object._transaction = false;\n        }\n    },\n\n    /************************************\n     * Ownership management\n     */\n\n    // Add reference to the record.\n    /** @private */\n    aquire( owner : Owner, child : Transactional, key? : string ) : void {\n        if( child._owner ) throw new ReferenceError( 'Trying to aquire ownership for an object already having an owner' );\n\n        child._owner = owner;\n        child._ownerKey = key;\n    },\n\n    // Remove reference to the record.\n    /** @private */\n    free( owner : Owner, child : Transactional ) : void {\n        if( owner === child._owner ){\n            child._owner = void 0;\n            child._ownerKey = void 0;\n        }\n    }\n}\n\nfunction getOwnerEndpoint( self : Transactional ) : IOEndpoint {\n    // Check if we are the member of the collection...\n    const { collection } = self as any;\n    if( collection ){\n        return getOwnerEndpoint( collection );\n    }\n\n    // Now, if we're the member of the model...\n    if( self._owner ){\n        const { _endpoints } = self._owner as any;\n        return _endpoints && _endpoints[ self._ownerKey ];\n    }\n}\n","import { eventsApi } from '../object-plus';\nimport { Owner, Transaction, Transactional, transactionApi, TransactionOptions } from \"../transactions\";\nconst { begin : _begin, markAsDirty : _markAsDirty, commit } = transactionApi;\n\nconst { trigger3 } = eventsApi;\n\nexport interface ConstructorsMixin {\n    Attributes : AttributesConstructor\n    AttributesCopy : AttributesCopyConstructor\n}\n\nexport interface ConstructorOptions extends TransactionOptions{\n    clone? : boolean\n}\n\nexport type AttributesConstructor = new ( record : AttributesContainer, values : object, options : TransactionOptions ) => AttributesValues;\nexport type AttributesCopyConstructor = new ( values : object ) => AttributesValues;\n\nexport interface AttributesContainer extends Transactional, Owner, ConstructorsMixin {\n    // Attribute descriptors.\n    _attributes : AttributesDescriptors\n\n    // Attribute values.\n    attributes : AttributesValues\n\n    // Previous attribute values.\n    _previousAttributes : AttributesValues\n\n    // Changed attributes cache. \n    _changedAttributes : AttributesValues\n}\n\nexport interface AttributesValues {\n    [ name : string ] : any\n}\n\nexport interface AttributesDescriptors {\n    [ name : string ] : AttributeUpdatePipeline\n}\n\nexport interface AttributeUpdatePipeline{\n    doUpdate( value, record : AttributesContainer, options : TransactionOptions, nested? : Transaction[] ) : boolean\n}\n\n // Optimized single attribute transactional update. To be called from attributes setters\n // options.silent === false, parse === false. \nexport function setAttribute( record : AttributesContainer, name : string, value : any ) : void {\n    // Open the transaction.\n    const isRoot  = begin( record ),\n          options = {};\n\n    // Update attribute.      \n    if( record._attributes[ name ].doUpdate( value, record, options ) ){\n        // Notify listeners on changes.\n        markAsDirty( record, options );\n        trigger3( record, 'change:' + name, record, record.attributes[ name ], options );\n    }\n\n    // Close the transaction.\n    isRoot && commit( record );\n}\n\nfunction begin( record : AttributesContainer ){\n    if( _begin( record ) ){\n        record._previousAttributes = new record.AttributesCopy( record.attributes );\n        record._changedAttributes = null;\n        return true;\n    }\n    \n    return false;\n}\n\nfunction markAsDirty( record : AttributesContainer, options : TransactionOptions ){\n    // Need to recalculate changed attributes, when we have nested set in change:attr handler\n    if( record._changedAttributes ){\n        record._changedAttributes = null;\n    }\n\n    return _markAsDirty( record, options );\n}\n\n/**\n * TODO: There's an opportunity to create an optimized pipeline for primitive types and Date, which makes the majority\n * of attributes. It might create the major speedup.\n * \n * Create the dedicated pipeline for owned and shared attributes as well.\n * \n * Three elements of the pipeline:\n * - from constructor\n * - from assignment\n * - from `set`\n */\n\nexport const UpdateRecordMixin = {\n// Need to override it here, since begin/end transaction brackets are overriden. \n    transaction( this : AttributesContainer, fun : ( self : AttributesContainer ) => void, options : TransactionOptions = {} ) : void{\n        const isRoot = begin( this );\n        fun.call( this, this );\n        isRoot && commit( this );\n    },\n            \n    // Handle nested changes. TODO: propagateChanges == false, same in transaction.\n    _onChildrenChange( child : Transactional, options : TransactionOptions ) : void {\n        const { _ownerKey } = child,\n              attribute = this._attributes[ _ownerKey ];\n\n        if( !attribute /* TODO: Must be an opposite, likely the bug */ || attribute.propagateChanges ) this.forceAttributeChange( _ownerKey, options );\n    },\n\n    // Simulate attribute change \n    forceAttributeChange( key : string, options : TransactionOptions = {} ){\n        // Touch an attribute in bounds of transaction\n        const isRoot = begin( this );\n\n        if( markAsDirty( this, options ) ){\n            trigger3( this, 'change:' + key, this, this.attributes[ key ], options );\n        }\n        \n        isRoot && commit( this );\n    },\n\n    _createTransaction( this : AttributesContainer, a_values : {}, options : TransactionOptions = {} ) : Transaction {\n        const isRoot = begin( this ),\n                changes : string[] = [],\n                nested : RecordTransaction[]= [],\n                { _attributes } = this,\n                values = options.parse ? this.parse( a_values, options ) : a_values;\n\n        let unknown;\n\n        if( shouldBeAnObject( this, values, options ) ){\n            for( let name in values ){\n                const spec = _attributes[ name ];\n\n                if( spec ){\n                    if( spec.doUpdate( values[ name ], this, options, nested ) ){\n                        changes.push( name );\n                    }\n                }\n                else{\n                    unknown || ( unknown = [] );\n                    unknown.push( `'${ name }'` );\n                }\n            }\n\n            if( unknown ){\n                unknownAttrsWarning( this, unknown, { values }, options );\n            }\n        }\n        \n        if( changes.length && markAsDirty( this, options ) ){\n            return new RecordTransaction( this, isRoot, nested, changes );\n        }\n        \n        // No changes, but there might be silent attributes with open transactions.\n        for( let pendingTransaction of nested ){\n            pendingTransaction.commit( this );\n        }\n\n        isRoot && commit( this );\n    }\n};\n\nexport function unknownAttrsWarning( record : AttributesContainer, unknown : string[], props, options ){\n    record._log( 'warn', 'Type-R:UnknownAttrs', `undefined attributes ${ unknown.join(', ')} are ignored.`, props, options.logger );\n}\n\n// One of the main performance tricks of Type-R.\n// Create loop unrolled constructors for internal attribute hash,\n// so the hidden class JIT optimization will be engaged and they will become static structs.\n// It dramatically improves record performance.\nexport function constructorsMixin( attrDefs : AttributesDescriptors ) : ConstructorsMixin {\n    const attrs = Object.keys( attrDefs );\n\n    const AttributesCopy : AttributesCopyConstructor = new Function( 'values', `\n        ${ attrs.map( attr =>`\n            this.${ attr } = values.${ attr };\n        `).join( '' ) }\n    `) as any;\n\n    AttributesCopy.prototype = Object.prototype;\n\n    const Attributes : AttributesConstructor = new Function( 'record', 'values', 'options', `\n        var _attrs = record._attributes;\n\n        ${ attrs.map( attr =>`\n            this.${ attr } = _attrs.${ attr }.doInit( values.${ attr }, record, options );\n        `).join( '' ) }\n    `) as any;\n\n    Attributes.prototype = Object.prototype;\n\n    return { Attributes, AttributesCopy };\n}\n\nexport function shouldBeAnObject( record : AttributesContainer, values : object, options ){\n    if( values && values.constructor === Object ) return true;\n\n    record._log( 'error', 'Type-R:InvalidObject', 'update with non-object is ignored!', { values }, options.logger );\n    return false;\n}\n\n// Transaction class. Implements two-phase transactions on object's tree. \n// Transaction must be created if there are actual changes and when markIsDirty returns true. \nexport class RecordTransaction implements Transaction {\n    // open transaction\n    constructor( public object : AttributesContainer,\n                 public isRoot : boolean,\n                 public nested : Transaction[],\n                 public changes : string[] ){}\n\n    // commit transaction\n    commit( initiator? : AttributesContainer ) : void {\n        const { nested, object, changes } = this;\n\n        // Commit all pending nested transactions...\n        for( let transaction of nested ){ \n            transaction.commit( object );\n        }\n\n        // Notify listeners on attribute changes...\n        // Transaction is never created when silent option is set, so just send events out.\n        const { attributes, _isDirty } = object;\n        for( let key of changes ){\n            trigger3( object, 'change:' + key, object, attributes[ key ], _isDirty );\n        }\n\n        this.isRoot && commit( object, initiator );\n    }\n}","import { IOEndpoint } from '../../io-tools';\nimport { LogLevel, tools, Logger } from '../../object-plus';\nimport { TransactionOptions } from '../../transactions';\nimport { AttributesContainer, AttributeUpdatePipeline, RecordTransaction, setAttribute } from '../updates';\n\nconst { notEqual, assign} = tools;\n\nexport type Transform = ( this : AnyType, next : any, prev : any, record : AttributesContainer, options : TransactionOptions ) => any;\nexport type ChangeHandler = ( this : AnyType, next : any, prev : any, record : AttributesContainer, options : TransactionOptions ) => void;\n\nexport interface AttributeOptions {\n    _metatype? : typeof AnyType\n    validate? : ( record : AttributesContainer, value : any, key : string ) => any\n    isRequired? : boolean\n    changeEvents? : boolean\n\n    endpoint? : IOEndpoint\n\n    type? : Function\n    value? : any\n    hasCustomDefault? : boolean\n\n    parse? : Parse\n    toJSON? : AttributeToJSON\n   \n    getHooks? : GetHook[]\n    transforms? : Transform[]\n    changeHandlers? : ChangeHandler[]\n\n    _onChange? : ChangeAttrHandler\n}\n\nexport type Parse = ( value : any, key : string ) => any;\nexport type GetHook = ( value : any, key : string ) => any;\nexport type AttributeToJSON = ( value : any, key : string ) => any\nexport type AttributeParse = ( value : any, key : string ) => any\nexport type ChangeAttrHandler = ( ( value : any, attr : string ) => void ) | string;\n\n// TODO: interface differs from options, do something obout it\nconst emptyOptions : TransactionOptions = {};\n\n/**\n * Typeless attribute. Is the base class for all other attributes.\n */\nexport class AnyType implements AttributeUpdatePipeline {\n    // Factory method to create attribute from options \n    static create : ( options : AttributeOptions, name : string ) => AnyType;\n    \n    /**\n     * Update pipeline functions\n     * =========================\n     *\n     * Stage 0. canBeUpdated( value )\n     * - presence of this function implies attribute's ability to update in place.\n     */\n    canBeUpdated( prev, next, options : TransactionOptions ) : any {}\n\n    /**\n     * Stage 1. Transform stage\n     */\n    transform( next : any, prev : any, model : AttributesContainer, options : TransactionOptions ) : any { return next; }\n\n    // convert attribute type to `this.type`.\n    convert( next : any, prev : any, model : AttributesContainer, options : TransactionOptions ) : any { return next; }\n\n    /**\n     * Stage 2. Check if attr value is changed\n     */\n    isChanged( a : any, b : any ) : boolean {\n        return notEqual( a, b );\n    }\n\n    /**\n     * Stage 3. Handle attribute change\n     */\n    handleChange( next : any, prev : any, model : AttributesContainer, options : TransactionOptions ) {}\n\n    /**\n     * End update pipeline definitions.\n     */\n\n    // create empty object passing backbone options to constructor...\n    create() { return void 0; }\n\n    // generic clone function for typeless attributes\n    // Must be overriden in sublass\n    clone( value : any, record : AttributesContainer ) {\n        return value;\n    }\n\n    dispose( record : AttributesContainer, value : any ) : void {\n        this.handleChange( void 0, value, record, emptyOptions );\n    }\n\n    validate( record : AttributesContainer, value : any, key : string ) : any {}\n\n    toJSON( value, key, options? : object ) {\n        return value && value.toJSON ? value.toJSON( options ) : value;\n    }\n\n    createPropertyDescriptor() : PropertyDescriptor | void {\n        const { name, getHook } = this;\n\n        if( name !== 'id' ){\n            return {\n                // call to optimized set function for single argument.\n                set( value ){\n                    setAttribute( this, name, value );\n                },\n\n                // attach get hook to the getter function, if it present\n                get : (\n                    getHook ?\n                        function() {\n                            return getHook.call( this, this.attributes[ name ], name );\n                        } :\n                        function() { return this.attributes[ name ]; }\n                ),\n\n                configurable : true\n            }\n        }\n    }\n\n    value : any\n\n    // Used as global default value for the given metatype\n    static defaultValue : any;\n\n    type : Function\n\n    initialize( name : string, options : TransactionOptions ){}\n\n    options : AttributeOptions\n\n    doInit( value, record : AttributesContainer, options : TransactionOptions ){\n        const v = value === void 0 ? this.defaultValue() : value,\n            x = this.transform( v, void 0, record, options );\n            \n        this.handleChange( x, void 0, record, options );\n        return x;\n    }\n\n    doUpdate( value, record : AttributesContainer, options : TransactionOptions, nested? : RecordTransaction[] ){\n        const { name } = this,\n            { attributes } = record,\n              prev = attributes[ name ];\n\n        const next = this.transform( value, prev, record, options );\n        attributes[ name ] = next;\n\n        if( this.isChanged( next, prev ) ) {\n            // Do the rest of the job after assignment\n            this.handleChange( next, prev, record, options );\n            return true;\n        }\n\n        return false;\n    }\n\n    propagateChanges : boolean\n\n    protected _log( level : LogLevel, code : string, text : string, value, record : AttributesContainer, logger : Logger ){\n        record._log( level, code, `${record.getClassName()}.${ this.name } ${ text }`, {\n            'New value' : value,\n            'Prev. value' : record.attributes[ this.name ]\n        }, logger );\n    }\n\n    defaultValue(){\n        return this.value;\n    }\n\n    constructor( public name : string, a_options : AttributeOptions ) {        \n        // Save original options...\n        this.options = a_options;\n\n        // Clone options.\n        const options : AttributeOptions = assign( { getHooks : [], transforms : [], changeHandlers : [] }, a_options );\n        options.getHooks = options.getHooks.slice();\n        options.transforms = options.transforms.slice();\n        options.changeHandlers = options.changeHandlers.slice();\n\n        const {\n                  value, type, parse, toJSON, changeEvents,\n                  validate, getHooks, transforms, changeHandlers\n              } = options;\n\n        // Initialize default value...\n        this.value = value;\n        this.type  = type;\n\n        // TODO: An opportunity to optimize for attribute subtype.\n        if( !options.hasCustomDefault && type ){\n            this.defaultValue = this.create;\n        }\n        else if( tools.isValidJSON( value ) ){ \n            // JSON literals must be deep copied.\n            this.defaultValue = new Function( `return ${ JSON.stringify( value ) };` ) as any;\n        }\n        else{\n            this.defaultValue = this.defaultValue;\n        }\n\n        // Changes must be bubbled when they are not disabled for an attribute and transactional object.\n        this.propagateChanges = changeEvents !== false;\n\n        this.toJSON = toJSON === void 0 ? this.toJSON : toJSON;\n\n        this.validate = validate || this.validate;\n        \n        if( options.isRequired ){\n            this.validate = wrapIsRequired( this.validate );\n        }\n\n        /**\n         * Assemble pipelines...\n         */\n\n        // `convert` is default transform, which is always present...\n        transforms.unshift( this.convert );\n\n        // Get hook from the attribute will be used first...\n        if( this.get ) getHooks.unshift( this.get );\n\n        // let subclasses configure the pipeline...\n        this.initialize.call( this, options );\n\n        // let attribute spec configure the pipeline...\n        if( getHooks.length ){\n            const getHook = this.getHook = getHooks.reduce( chainGetHooks );\n\n            const { validate } = this;\n            this.validate = function( record : AttributesContainer, value : any, key : string ){\n                return validate.call( this, record, getHook.call( record, value, key ), key );\n            }\n        }\n        \n        this.transform = transforms.length ? transforms.reduce( chainTransforms ) : this.transform;\n        \n        this.handleChange = changeHandlers.length ? changeHandlers.reduce( chainChangeHandlers ) : this.handleChange;\n\n        // Attribute-level parse transform are attached as update hooks modifiers...\n        const { doInit, doUpdate } = this;\n        this.doInit = parse ? function( value, record : AttributesContainer, options : TransactionOptions ){\n            return doInit.call( this, options.parse && value !== void 0 ? parse.call( record, value, this.name ) : value, record, options );\n        } : doInit;\n\n        this.doUpdate = parse ? function( value, record : AttributesContainer, options : TransactionOptions, nested? : RecordTransaction[] ){\n            return doUpdate.call( this, options.parse && value !== void 0 ? parse.call( record, value, this.name ) : value, record, options, nested );\n        } : doUpdate;\n    }\n\n    getHook : ( value, key : string ) => any = null\n    get : ( value, key : string ) => any\n}\n\n\nfunction chainGetHooks( prevHook : GetHook, nextHook : GetHook ) : GetHook {\n    return function( value, name ) {\n        return nextHook.call( this, prevHook.call( this, value, name ), name );\n    }\n}\n\nfunction chainTransforms( prevTransform : Transform, nextTransform : Transform ) : Transform {\n    return function( next, prev, record, options ) {\n        return nextTransform.call( this, prevTransform.call( this, next, prev, record, options ), prev, record, options );\n    }\n}\n\nfunction chainChangeHandlers( prevHandler : ChangeHandler, nextHandler : ChangeHandler ) : ChangeHandler {\n    return function( next, prev, record, options ) {\n        prevHandler.call( this, next, prev, record, options );\n        nextHandler.call( this, next, prev, record, options );\n    }\n}\n\nfunction wrapIsRequired( validate ){\n    return function( record : AttributesContainer, value : any, key : string ){\n        return value ? validate.call( this, record, value, key ) : 'Required';\n    }\n}","/**\n * Built-in JSON types attributes: Object, Array, Number, String, Boolean, and immutable class.\n * \n * Adds type assertions, default validation, and optimized update pipeline.\n */\n\nimport { TransactionOptions } from '../../transactions';\nimport { AnyType } from './any';\nimport { AttributesContainer } from '../updates';\n\n/**\n * Custom class must be immutable class which implements toJSON() method\n * with a constructor taking json.\n */\nexport class ImmutableClassType extends AnyType {\n    type : new ( value? : any ) => {}\n\n    create(){\n        return new this.type();\n    }\n\n    convert( next : any ) : any {\n        return next == null || next instanceof this.type ? next : new this.type( next );\n    }\n\n    toJSON( value, key? : string, options? : object ){\n        return value && value.toJSON ? value.toJSON( options ) : value;\n    }\n\n    clone( value ) {\n        return new this.type( this.toJSON( value ) );\n    }\n\n    isChanged( a, b ){\n        return a !== b;\n    }\n}\n\n/**\n * Optimized attribute of primitive type.\n * \n * Primitives has specialized simplified pipeline.\n */\nexport class PrimitiveType extends AnyType {\n    type : NumberConstructor | StringConstructor | BooleanConstructor\n\n    dispose(){}\n    create() { return this.type(); }\n\n    toJSON( value ) { return value; }\n\n    convert( next ) { return next == null ? next : this.type( next ); }\n\n    isChanged( a, b ) { return a !== b; }\n\n    clone( value ) { return value; }\n\n    doInit( value, record : AttributesContainer, options : TransactionOptions ){\n        return this.transform( value === void 0 ? this.value : value, void 0, record, options );\n    }\n\n    doUpdate( value, record, options, nested ){\n        const   { name } = this,\n                { attributes } = record,\n                prev = attributes[ name ];\n        \n        return prev !== ( attributes[ name ] = this.transform( value, prev, record, options ) );\n    }\n\n    initialize(){\n        if( !this.options.hasCustomDefault ){\n            this.value = this.type();\n        }\n    }\n}\n\n// Number type with special validation algothim.\n/** @private */ \nexport class NumericType extends PrimitiveType {\n    type : NumberConstructor\n\n    create(){\n        return 0;\n    }\n\n    convert( next, prev?, record?, options? ) {\n        const num = next == null ? next : this.type( next );\n\n        if( num !== num ){\n            this._log( 'error', 'Type-R:InvalidNumber', 'Number attribute is assigned with an invalid number', next, record, options.logger );\n        }\n        \n        return num;\n    }\n\n    validate( model, value, name ) {\n        // Whatever is not symmetrically serializable to JSON, is not valid by default.\n        if( value != null && !isFinite( value ) ) {\n            return name + ' is not valid number';\n        }\n    }\n}\n\n/**\n * Compatibility wrapper for Array type.\n * @private\n */ \nexport class ArrayType extends AnyType {\n    toJSON( value ) { return value; }\n    dispose(){}\n    create(){ return []; }\n\n    convert( next, prev, record, options ) {\n        // Fix incompatible constructor behaviour of Array...\n        if( next == null || Array.isArray( next ) ) return next;\n\n        this._log( 'error', 'Type-R:InvalidArray', 'Array attribute assigned with non-array value', next, record, options.logger );\n\n        return [];\n    }\n\n    clone( value ){\n        return value && value.slice();\n    }\n}\n\nexport class ObjectType extends AnyType {\n    create(){ return {}; }\n\n    convert( next, prev, record, options ) {\n        if( next == null || typeof next === 'object' ) return next;\n                \n        this._log( 'error', 'Type-R:InvalidObject', 'Object attribute is assigned with non-object value', next, record, options.logger );\n        return {};\n    }\n}\n\nexport function doNothing(){}\n\nexport class FunctionType extends AnyType {\n    // Functions are not serialized.\n    toJSON( value ) { return void 0; }\n    create(){ return doNothing; }\n    dispose(){}\n\n    convert( next, prev, record, options ) {\n        // Fix incompatible constructor behaviour of Function...\n        if( next == null || typeof next === 'function' ) return next;\n\n        this._log( 'error', 'Type-R:InvalidFunction', 'Function attribute assigned with non-function value', next, record, options.logger );\n\n        return doNothing;\n    }\n\n    // Functions are not cloned.\n    clone( value ){ return value; }\n}\n","/**\n * Date attribute type.\n * \n * Implements validation, cross-browser compatibility fixes, variety of Date serialization formats,\n * and optimized update pipeline.\n */\nimport { TransactionOptions } from '../../transactions';\nimport { AnyType } from './any';\nimport { AttributesContainer } from '../updates';\n\n// Date Attribute\n/** @private */\nexport class DateType extends AnyType {\n    create(){\n        return new Date();\n    }\n    \n    convert( next : any, a, record, options ){\n        if( next == null || next instanceof Date ) return next;\n\n        const date = new Date( next ),\n              timestamp = date.getTime();\n\n        if( timestamp !== timestamp ){\n            this._log( 'error', 'Type-R:InvalidDate', 'Date attribute assigned with invalid date', next, record, options.logger );\n        }\n\n        return date;\n    }\n\n    validate( model, value, name ) {\n        if( value != null ){\n            const timestamp = value.getTime(); \n            if( timestamp !== timestamp ) return name + ' is Invalid Date';\n        }\n    }\n\n    toJSON( value ) { return value && value.toISOString(); }\n\n    isChanged( a, b ) { return ( a && a.getTime() ) !== ( b && b.getTime() ); }\n\n    doInit( value, record : AttributesContainer, options : TransactionOptions ){\n        // Date don't have handleChanges step.\n        return this.transform( value === void 0 ? this.defaultValue() : value, void 0, record, options );\n    }\n\n    doUpdate( value, record, options, nested ){\n        const   { name } = this,\n                { attributes } = record,\n                prev = attributes[ name ];\n        \n        // Date don't have handleChanges step.\n        return this.isChanged( prev , attributes[ name ] = this.transform( value, prev, record, options ) );\n    }\n\n    clone( value ) { return value && new Date( value.getTime() ); }\n    dispose(){}\n}\n\n// If ISO date is not supported by date constructor (such as in Safari), polyfill it.\nfunction supportsDate( date ){\n    return !isNaN( ( new Date( date ) ).getTime() );\n}\n\nif( !supportsDate('2011-11-29T15:52:30.5') ||\n    !supportsDate('2011-11-29T15:52:30.52') ||\n    !supportsDate('2011-11-29T15:52:18.867') ||\n    !supportsDate('2011-11-29T15:52:18.867Z') ||\n    !supportsDate('2011-11-29T15:52:18.867-03:30') ){\n\n    DateType.prototype.convert = function( value ){\n        return value == null || value instanceof Date ? value : new Date( safeParseDate( value ) );\n    }\n}\n\nconst numericKeys    = [ 1, 4, 5, 6, 7, 10, 11 ],\n      isoDatePattern = /^(\\d{4}|[+\\-]\\d{6})(?:-(\\d{2})(?:-(\\d{2}))?)?(?:T(\\d{2}):(\\d{2})(?::(\\d{2})(?:\\.(\\d{3}))?)?(?:(Z)|([+\\-])(\\d{2})(?::(\\d{2}))?)?)?$/;\n\nfunction safeParseDate( date : string ) : number {\n    var timestamp, struct : any[], minutesOffset = 0;\n\n    if( ( struct = isoDatePattern.exec( date )) ) {\n        // avoid NaN timestamps caused by undefined values being passed to Date.UTC\n        for( var i = 0, k; ( k = numericKeys[ i ] ); ++i ) {\n            struct[ k ] = +struct[ k ] || 0;\n        }\n\n        // allow undefined days and months\n        struct[ 2 ] = (+struct[ 2 ] || 1) - 1;\n        struct[ 3 ] = +struct[ 3 ] || 1;\n\n        if( struct[ 8 ] !== 'Z' && struct[ 9 ] !== undefined ) {\n            minutesOffset = struct[ 10 ] * 60 + struct[ 11 ];\n\n            if( struct[ 9 ] === '+' ) {\n                minutesOffset = 0 - minutesOffset;\n            }\n        }\n\n        timestamp =\n            Date.UTC( struct[ 1 ], struct[ 2 ], struct[ 3 ], struct[ 4 ], struct[ 5 ] + minutesOffset, struct[ 6 ],\n                    struct[ 7 ] );\n    }\n    else {\n        timestamp = Date.parse( date );\n    }\n\n    return timestamp;\n}","import { ItemsBehavior, Transactional, transactionApi, TransactionOptions } from '../../transactions';\nimport { ValidationError } from '../../validation';\nimport { AnyType } from './any';\nimport { AttributesContainer, ConstructorOptions } from '../updates';\n\nconst { free, aquire } = transactionApi;\n\nexport class AggregatedType extends AnyType {\n    type : typeof Transactional\n\n    clone( value : Transactional ) : Transactional {\n        return value ? value.clone() : value;\n    }\n\n    toJSON( x, key : string, options : object ){ return x && x.toJSON( options ); }\n\n    doInit( value, record : AttributesContainer, options : ConstructorOptions ){\n        const v = options.clone ? this.clone( value ) : (\n            value === void 0 ? this.defaultValue() : value\n        );\n\n        const x = this.transform( v, void 0, record, options );\n        this.handleChange( x, void 0, record, options );\n        return x;\n    }\n\n    doUpdate( value, record, options, nested : any[] ){ // Last to things can be wrapped to an object, either transaction or ad-hoc\n        const key = this.name, { attributes } = record; \n        const prev = attributes[ key ];\n        let update;\n\n        // This can be moved to transactional attribute. And chained with the rest.\n        if( update = this.canBeUpdated( prev, value, options ) ) { // todo - skip empty updates.\n            const nestedTransaction = prev._createTransaction( update, options );\n            if( nestedTransaction ){\n                if( nested ){\n                    nested.push( nestedTransaction );\n                }\n                else{\n                    nestedTransaction.commit( record );\n                }\n\n                if( this.propagateChanges ) return true;\n            }\n\n            return false;\n        }\n\n        const next = this.transform( value, prev, record, options );\n        attributes[ key ] = next;\n\n        if( this.isChanged( next, prev ) ) { // Primitives and nested comparison can be inlined.\n            // Do the rest of the job after assignment\n            this.handleChange( next, prev, record, options );\n\n            return true;\n        }\n\n        return false;\n    }\n\n    canBeUpdated( prev : Transactional, next : any, options : TransactionOptions ) : any {\n        // If an object already exists, and new value is of incompatible type, let object handle the update.\n        if( prev && next != null ){\n            if( next instanceof this.type ){\n                // In case if merge option explicitly specified, force merge.\n                if( options.merge ) return next.__inner_state__;\n            }\n            else{\n                return next;\n            }\n        }\n    }\n\n    convert( next : any, prev : any, record : AttributesContainer, options : TransactionOptions ) : Transactional {\n        // Invoke class factory to handle abstract classes\n        if( next == null ) return next;\n        \n        if( next instanceof this.type ){\n            if( next._shared && !( next._shared & ItemsBehavior.persistent ) ) { // TODO: think more about shared types assignment compatibility. \n                this._log( 'error', 'Type-R:InvalidCollection', 'aggregated collection attribute is assigned with shared collection type', next, record, options.logger );\n            }\n\n            // With explicit 'merge' option we need to clone an object if its previous value was 'null'.\n            // This is an only case we could be here when merge === true.\n            if( options.merge ) return next.clone();\n\n            if( next._owner ){\n                this._log( 'warn', 'Type-R:InvalidOwner', 'object alreay has an owner and was cloned. Use explicit object.clone() to dismiss this warning.', next, record, options.logger );\n                return next.clone();\n            }\n\n            return next;\n        }\n\n        return <any>this.type.create( next, options );\n    }\n\n    dispose ( record : AttributesContainer, value : Transactional ){\n        if( value ){\n            this.handleChange( void 0, value, record, {} );\n        }\n    }\n\n    validate( record : AttributesContainer, value : Transactional ) : ValidationError {\n        var error = value && value.validationError;\n        if( error ) return error;\n    }\n\n    create() : Transactional {\n        return (<any>this.type).create(); // this the subclass of Transactional here.\n    }\n\n    initialize( options ){\n        options.changeHandlers.unshift( this._handleChange );\n    }\n\n    _handleChange( next : Transactional, prev : Transactional, record : AttributesContainer, options : TransactionOptions ){\n        if( prev ){\n            free( record, prev );\n            options.unset || prev.dispose();\n        } \n        \n        if( next ) aquire( record, next, this.name );\n    }\n}","import { eventsApi } from '../../object-plus';\nimport { ItemsBehavior, Transactional, transactionApi, TransactionOptions } from '../../transactions';\nimport { AnyType } from './any';\nimport { AttributesContainer, ConstructorOptions } from '../updates';\n\nconst { on, off } = eventsApi,\n    { free, aquire } = transactionApi;\n\n/************************\n * Shared attribute definition.\n * - Not serialized.\n * - Listening to the changes.\n * - Doesn't take ownership when assigned with object of proper type.\n * - Takes ownership on objects which are converted.\n */\n\nconst shareAndListen = ItemsBehavior.listen | ItemsBehavior.share;\n\n/** @private */\nexport class SharedType extends AnyType {\n    type : typeof Transactional\n\n     doInit( value, record : AttributesContainer, options : ConstructorOptions ){\n        const v = options.clone ? this.clone( value, record ) : (\n            value === void 0 ? this.defaultValue() : value\n        );\n\n        const x = this.transform( v, void 0, record, options );\n        this.handleChange( x, void 0, record, options );\n        return x;\n    }\n\n    doUpdate( value, record, options, nested : any[] ){ // Last to things can be wrapped to an object, either transaction or ad-hoc\n        const key = this.name, { attributes } = record; \n        const prev = attributes[ key ];\n        let update;\n\n        // This can be moved to transactional attribute. And chained with the rest.\n        if( update = this.canBeUpdated( prev, value, options ) ) { // todo - skip empty updates.\n            const nestedTransaction = prev._createTransaction( update, options );\n            if( nestedTransaction ){\n                if( nested ){\n                    nested.push( nestedTransaction );\n                }\n                else{\n                    nestedTransaction.commit( record );\n                }\n\n                if( this.propagateChanges ) return true;\n            }\n\n            return false;\n        }\n\n        const next = this.transform( value, prev, record, options );\n        attributes[ key ] = next;\n\n        if( this.isChanged( next, prev ) ) { // Primitives and nested comparison can be inlined.\n            // Do the rest of the job after assignment\n            this.handleChange( next, prev, record, options );\n\n            return true;\n        }\n\n        return false;\n    }\n\n    clone( value : Transactional, record : AttributesContainer ) : Transactional {\n        // References are not cloned.\n        if( !value || value._owner !== record ) return value;\n\n        // Implicitly created objects are cloned.\n        const clone = value.clone();\n        aquire( record, clone, this.name );\n        return clone;\n    }\n\n    // Do not serialize by default.\n    toJSON(){}\n\n    canBeUpdated( prev : Transactional, next : any, options : TransactionOptions ) : any {\n        // If an object already exists, and new value is of incompatible type, let object handle the update.\n        if( prev && next != null && !( next instanceof this.type ) ){\n            return next;\n        }\n    }\n\n    convert( next : any, prev : any, record : AttributesContainer, options : TransactionOptions ) : Transactional {\n        if( next == null || next instanceof this.type ) return next;\n\n        // Convert type using implicitly created transactional object.\n        const implicitObject = new ( this.type as any )( next, options, shareAndListen );\n\n        // To prevent a leak, we need to take an ownership on it.\n        aquire( record, implicitObject, this.name );\n\n        return implicitObject;\n    }\n\n    // Refs are always valid.\n    validate( model, value, name ){}\n\n    // They are always created as null.\n    create() : Transactional {\n        return null;\n    }\n\n    // Listening to the change events\n    _handleChange( next : Transactional, prev : Transactional, record : AttributesContainer, options ){\n        if( prev ){\n            // If there was an implicitly created object, remove an ownership.\n            if( prev._owner === record ){\n                free( record, prev );\n                options.unset || prev.dispose();\n            }\n            else{\n                off( prev, prev._changeEventName, this._onChange, record );\n            }\n        }  \n \n        if( next ){\n            // No need to take an ownership for an implicit object - already done in convert or clone.\n            if( next._owner !== record ){\n                on( next, next._changeEventName, this._onChange, record );\n            }\n        } \n    }\n\n    dispose( record : AttributesContainer, value : Transactional ){\n        if( value ){\n            this.handleChange( void 0, value, record, {} );\n        }\n    }\n\n    _onChange : ( child : Transactional, options : TransactionOptions, initiator : Transactional ) => void \n\n    initialize( options ){\n        // Create change event handler which knows current attribute name. \n        const attribute = this;\n        this._onChange = this.propagateChanges ? function( child, options, initiator ){\n            this === initiator || this.forceAttributeChange( attribute.name, options );\n        } : ignore;\n\n        options.changeHandlers.unshift( this._handleChange );\n    }\n}\n\nfunction ignore(){}\n\nexport function shared( T : typeof Transactional ){\n    return T.shared;\n}","import { PrimitiveType, NumericType, ObjectType, ImmutableClassType, FunctionType, ArrayType } from './basic';\nimport { DateType } from './date';\nimport { AnyType, AttributeOptions } from './any';\n\nexport * from './any';\nexport * from './basic';\nexport * from './date';\nexport * from './owned';\nexport * from './shared';\n\n/**\n * Every record attribute type has the corresponding metatype controlling its behavior.\n * For built-in types, Type-R uses the predefined list to resolve metatype in order to avoid global objects modifications.\n * For user-defined types, static `_metatype` constructor member is used.\n */\n\nconst builtins : Function[] = [ String, Number, Boolean, Date, Object, Array, Function ],\n      metatypes = [ PrimitiveType, NumericType, PrimitiveType, DateType, ObjectType, ArrayType, FunctionType ];\n\nexport function getMetatype( Ctor : Function ){\n    return ( Ctor as any )._metatype || resolveBuiltins( Ctor );\n}\n\nAnyType.create = ( options : AttributeOptions, name : string ) => {\n    const type = options.type,\n          AttributeCtor = options._metatype || ( type ? getMetatype( type ): AnyType );\n\n    return new AttributeCtor( name, options );\n}\n\nfunction resolveBuiltins( Ctor : Function ){\n    const idx = builtins.indexOf( Ctor );\n    return idx < 0 ? ImmutableClassType : metatypes[ idx ];\n}","/**\n * Type spec engine. Declare attributes using chainable syntax,\n * and returns object with spec.\n */\nimport { IOEndpoint } from '../io-tools';\nimport { definitionDecorator, EventMap, EventsDefinition, tools } from '../object-plus';\nimport { Transactional } from '../transactions';\nimport { AttributeOptions, Parse, AnyType, getMetatype } from './metatypes';\nimport { AttributesContainer } from './updates';\n\nconst { assign } = tools;\n\nexport interface AttributeCheck {\n    ( value : any, key : string ) : boolean\n    error? : any\n}\n\nexport class ChainableAttributeSpec {\n    options : AttributeOptions;\n\n    constructor( options : AttributeOptions ) {\n        // Shallow copy options, fill it with defaults.\n        this.options = { getHooks : [], transforms : [], changeHandlers : []};\n        if( options ) assign( this.options, options );\n    }\n\n    check( check : AttributeCheck, error? : any ) : ChainableAttributeSpec {\n        function validate( model, value, name ){\n            if( !check.call( model, value, name ) ){\n                const msg = error || check.error || name + ' is not valid';\n                return typeof msg === 'function' ? msg.call( model, name ) : msg;\n            }\n        }\n\n        const prev = this.options.validate;\n\n        return this.metadata({\n            validate : prev ? (\n                            function( model, value, name ){\n                                return prev( model, value, name ) || validate( model, value, name );\n                            }\n                       ) : validate\n        });\n    }\n\n    get asProp(){\n        return definitionDecorator( 'attributes', this );\n    }\n\n    get as(){ return this.asProp; }\n\n    get isRequired() : ChainableAttributeSpec {\n        return this.required;\n    }\n\n    get required() : ChainableAttributeSpec {\n        return this.metadata({ isRequired : true }); \n    }\n\n    endpoint( endpoint : IOEndpoint ){\n        return this.metadata({ endpoint });\n    }\n\n    watcher( ref : string | ( ( value : any, key : string ) => void ) ) : ChainableAttributeSpec {\n        return this.metadata({ _onChange : ref });\n    }\n\n    // Attribute-specific parse transform\n    parse( fun : Parse ) : ChainableAttributeSpec {\n        return this.metadata({ parse : fun });\n    }\n\n    toJSON( fun ) : ChainableAttributeSpec {\n        return this.metadata({\n            toJSON : typeof fun === 'function' ? fun : ( fun ? ( x, k, o ) => x && x.toJSON( o ) : emptyFunction ) \n        });\n    }\n\n    // Attribute get hook.\n    get( fun ) : ChainableAttributeSpec {\n        return this.metadata({\n            getHooks : this.options.getHooks.concat( fun )\n        });\n    }\n\n    // Attribute set hook.\n    set( fun ) : ChainableAttributeSpec {\n        function handleSetHook( next, prev, record : AttributesContainer, options ) {\n            if( this.isChanged( next, prev ) ) {\n                const changed = fun.call( record, next, this.name );\n                return changed === void 0 ? prev : this.convert( changed, prev, record, options );\n            }\n\n            return prev;\n        }\n\n        return this.metadata({\n            transforms : this.options.transforms.concat( handleSetHook )\n        });\n    }\n\n    changeEvents( events : boolean ) : ChainableAttributeSpec {\n        return this.metadata({ changeEvents : events });\n    }\n\n    // Subsribe to events from an attribute.\n    events( map : EventsDefinition ) : ChainableAttributeSpec {\n        const eventMap = new EventMap( map );\n\n        function handleEventsSubscribtion( next, prev, record : AttributesContainer ){\n            prev && prev.trigger && eventMap.unsubscribe( record, prev );\n\n            next && next.trigger && eventMap.subscribe( record, next );\n        }\n\n        return this.metadata({\n            changeHandlers : this.options.changeHandlers.concat( handleEventsSubscribtion )\n        });\n    }\n\n    // Creates a copy of the spec.\n    get has() : ChainableAttributeSpec {\n        return this;\n    }\n\n    metadata( options : AttributeOptions ) : ChainableAttributeSpec {\n        const cloned = new ChainableAttributeSpec( this.options );\n        assign( cloned.options, options );\n        return cloned;\n    }\n\n    value( x ) : ChainableAttributeSpec {\n        return this.metadata({ value : x, hasCustomDefault : true });\n    }\n\n    static from( spec : any ) : ChainableAttributeSpec {\n        // Pass metatype through untouched...\n        if( spec && spec instanceof ChainableAttributeSpec ) {\n            return spec;\n        }\n\n        return typeof spec === 'function' ? type( spec ) : value( spec );\n    }\n}\n\nfunction emptyFunction(){}\n\nexport function type( this : void, type : ChainableAttributeSpec | Function, value? : any ) : ChainableAttributeSpec {\n    if( type instanceof ChainableAttributeSpec ) return type;\n\n    const defaultValue = type && value === void 0 ? getMetatype( type ).defaultValue : value;\n\n    return new ChainableAttributeSpec( {\n        type,\n        value : defaultValue,\n        hasCustomDefault : defaultValue !== void 0\n    } );\n}\n\n// Create attribute metatype inferring the type from the value.\nexport function value( this : void, x : any ) : ChainableAttributeSpec {\n    let Type = inferType( x );\n\n    // Transactional types inferred from values must have shared type. \n    if( Type && Type.prototype instanceof Transactional ){\n        Type = ( Type as typeof Transactional ).shared;\n    }\n\n    return type( Type ).value( x );\n}\n\nfunction inferType( value : {} ) : Function {\n    switch( typeof value ) {\n        case 'number' :\n            return Number;\n        case 'string' :\n            return String;\n        case 'boolean' :\n            return Boolean;\n        case 'function' :\n            return Function;\n        case 'undefined' :\n            return void 0;\n        case 'object' :\n            return value ? <any> value.constructor : void 0;\n    }\n}\n\nexport function createSharedTypeSpec( Constructor : Function, Attribute : typeof AnyType ){\n    if( !Constructor.hasOwnProperty( 'shared' ) ){\n        Object.defineProperty( Constructor, 'shared', {\n            get(){\n                return new ChainableAttributeSpec({\n                    value : null,\n                    type : Constructor,\n                    _metatype : Attribute\n                });\n            }\n        });\n    }\n}","import { IOEndpoint } from '../io-tools';\nimport { eventsApi, tools as _ } from '../object-plus';\nimport { CompiledReference } from '../traversable';\nimport { ChainableAttributeSpec } from './attrDef';\nimport { AnyType } from './metatypes';\nimport { ConstructorsMixin, constructorsMixin } from './updates';\n\nexport interface RecordAttributesMixin extends ConstructorsMixin {\n    // Attributes descriptors\n    _attributes : AttributeDescriptors\n    _attributesArray : AnyType[]\n    \n    // Attribute's property descriptors\n    properties : PropertyDescriptorMap\n\n    // Event map for record's local events.\n    _localEvents? : eventsApi.EventMap,\n\n    _endpoints : { [ name : string ] : IOEndpoint }\n}\n\nexport interface AttributeDescriptors {\n    [ name : string ] : AnyType\n}\n\n// Create attribute from the type spec.\nexport function createAttribute( spec : any, name : string ) : AnyType {\n    return AnyType.create( ChainableAttributeSpec.from( spec ).options, name );\n}\n\n// Create record mixin from the given record's attributes definition\nexport function createAttributesMixin( attributesDefinition : object, baseClassAttributes : AttributeDescriptors ) : RecordAttributesMixin {\n    const myAttributes = _.transform( {} as AttributeDescriptors, attributesDefinition, createAttribute ),\n          allAttributes = _.defaults( {} as AttributeDescriptors, myAttributes, baseClassAttributes );\n\n    const ConstructorsMixin = constructorsMixin( allAttributes );\n\n    return {\n        ...ConstructorsMixin,\n        _attributes : new ConstructorsMixin.AttributesCopy( allAttributes ),\n        _attributesArray : Object.keys( allAttributes ).map( key => allAttributes[ key ] ),\n        properties : _.transform( <PropertyDescriptorMap>{}, myAttributes, x => x.createPropertyDescriptor() ),\n        ...localEventsMixin( myAttributes ),\n        _endpoints : _.transform( {}, allAttributes, attrDef => attrDef.options.endpoint )\n    }            \n}\n\ninterface LocalEventsMixin {\n    _localEvents? : eventsApi.EventMap\n}\n\nfunction localEventsMixin( attrSpecs : AttributeDescriptors ) : LocalEventsMixin {\n    let _localEvents : eventsApi.EventMap;\n\n    for( var key in attrSpecs ){\n        const attribute = attrSpecs[ key ],\n            { _onChange } = attribute.options; \n\n        if( _onChange ){\n            _localEvents || ( _localEvents = new eventsApi.EventMap() );\n\n            _localEvents.addEvent( 'change:' + key,\n                typeof _onChange === 'string' ?\n                    createWatcherFromRef( _onChange, key ) : \n                    wrapWatcher( _onChange, key ) );\n        }\n    }\n\n    return _localEvents ? { _localEvents } : {};\n}\n\nfunction wrapWatcher( watcher, key ){\n    return function( record, value ){\n        watcher.call( record, value, key );\n    } \n}\n\nfunction createWatcherFromRef( ref : string, key : string ){\n    const { local, resolve, tail } = new CompiledReference( ref, true );\n    return local ?\n        function( record, value ){\n            record[ tail ]( value, key );\n        } :\n        function( record, value ){\n            resolve( record )[ tail ]( value, key );\n        }\n}","import { IOEndpoint, IONode, IOOptions, IOPromise, startIO } from '../io-tools';\n\nexport interface IORecord extends IONode {\n    getEndpoint() : IOEndpoint\n    save( options? : IOOptions ) : IOPromise<this>\n    fetch( options? : IOOptions ) : IOPromise<this>\n    destroy( options? : IOOptions ) : IOPromise<this>\n    toJSON( options? : object ) : any\n    isNew() : boolean\n    id : string | number\n    set( json : object, options : object )\n}\n\nexport const IORecordMixin = {\n    save( this : IORecord, options : IOOptions = {} ){\n        const endpoint = this.getEndpoint(),\n              json = this.toJSON( options );\n\n        return startIO(\n            this,\n            this.isNew() ?\n                endpoint.create( json, options, this ) :\n                endpoint.update( this.id, json, options, this ),\n            options,\n\n            update => {\n                this.set( update, { parse : true, ...options } );\n            }\n        );\n    },\n\n    fetch( options : IOOptions = {} ){\n        return startIO(\n            this,\n            this.getEndpoint().read( this.id, options, this ),\n            options,\n\n            json => this.set( json, { parse : true, ...options } )\n        );\n    },\n\n    destroy( options : IOOptions = {} ){  \n        return startIO(\n            this,\n            this.getEndpoint().destroy( this.id, options, this ),\n            options,\n\n            () => {\n                const { collection } = this;\n                if( collection ){\n                    collection.remove( this, options );\n                }\n                else{\n                    this.dispose();\n                }\n\n                return this;\n            }\n        )\n    }\n}","/**\n * Record core implementing transactional updates.\n * The root of all definitions. \n */\n\nimport { CollectionConstructor } from '../collection';\nimport { IOEndpoint, IOPromise } from '../io-tools';\nimport { define, definitions, isProduction, Logger, logger, LogLevel, mixinRules, tools } from '../object-plus';\nimport { CloneOptions, Owner, Transaction, Transactional, TransactionalDefinition, TransactionOptions } from '../transactions';\nimport { ChildrenErrors } from '../validation';\nimport { AggregatedType, AnyType } from './metatypes';\nimport { IORecord, IORecordMixin } from './io-mixin';\nimport { AttributesConstructor, AttributesContainer, AttributesCopyConstructor, AttributesValues, setAttribute, shouldBeAnObject, unknownAttrsWarning, UpdateRecordMixin } from './updates';\nimport { type } from './attrDef';\n\n\nconst { assign, isEmpty } = tools;\n\n/*******************************************************\n * Record core implementation\n */\n\nexport interface ConstructorOptions extends TransactionOptions{\n    clone? : boolean\n}\n\n// Client unique id counter\nlet _cidCounter : number = 0;\n\n/***************************************************************\n * Record Definition as accepted by Record.define( definition )\n */\nexport interface RecordDefinition extends TransactionalDefinition {\n    idAttribute? : string\n    attributes? : AttributesValues\n    collection? : object\n    Collection? : typeof Transactional\n}\n\n@define({\n    // Default client id prefix \n    cidPrefix : 'm',\n\n    // Name of the change event\n    _changeEventName : 'change',\n\n    // Default id attribute name\n    idAttribute : 'id'\n})\n@definitions({\n    defaults : mixinRules.merge,\n    attributes : mixinRules.merge,\n    collection : mixinRules.merge,\n    Collection : mixinRules.value,\n    idAttribute : mixinRules.protoValue\n})\nexport class Record extends Transactional implements IORecord, AttributesContainer, Iterable<any> {\n    static _metatype = AggregatedType;\n\n    // Hack\n    static onDefine( definition, BaseClass ){}\n\n    static Collection : CollectionConstructor;\n    static DefaultCollection : CollectionConstructor;\n\n    static from : ( collectionReference : any ) => any;\n    \n    // Attribute type for the record id.\n    static id = type( String ).value( null );\n    \n    // Lazy object reference, serializable as id.\n    static get ref(){\n        return type( this )\n            .toJSON( x => x ? x.id : null )\n            .parse( x => {\n                return { [ this.prototype.idAttribute ] : x };\n            });\n    }\n\n    static defaults( attrs : AttributesValues ) : typeof Record {\n        return <any>this.extend({ attributes : attrs });\n    }\n    \n    static attributes : AttributesValues\n\n    /********************\n     * IO Methods\n     */\n     _endpoints : { [ name : string ] : IOEndpoint }\n\n     // Save record\n     save( options? : object ) : IOPromise<this> { throw new Error( 'Implemented by mixin' ); }\n\n     // Destroy record\n     destroy( options? : object ) : IOPromise<this> { throw new Error( 'Implemented by mixin' ); }\n\n    /***********************************\n     * Core Members\n     */\n    // Previous attributes\n    _previousAttributes : {}\n\n    previousAttributes(){ return new this.AttributesCopy( this._previousAttributes ); } \n\n    // Current attributes    \n    attributes : AttributesValues\n\n    // Polymorphic accessor for aggregated attribute's canBeUpdated().\n    get __inner_state__(){ return this.attributes; }\n\n    // Lazily evaluated changed attributes hash\n    _changedAttributes : AttributesValues\n\n    get changed(){\n        let changed = this._changedAttributes;\n\n        if( !changed ){\n            const prev = this._previousAttributes;\n            changed = {};\n\n            const { attributes } = this;\n\n            for( let attr of this._attributesArray ){\n                const key = attr.name,\n                    value = attributes[ key ];\n\n                if( attr.isChanged( value, prev[ key ] ) ){\n                    changed[ key ] = value;\n                }\n            }\n\n            this._changedAttributes = changed;\n        }\n\n        return changed;    \n    }\n\n    changedAttributes( diff? : {} ) : boolean | {} {\n        if( !diff ) return this.hasChanged() ? assign( {}, this.changed ) : false;\n\n        var val, changed : {} | boolean = false,\n            old          = this._transaction ? this._previousAttributes : this.attributes,\n            attrSpecs    = this._attributes;\n\n        for( var attr in diff ){\n            if( !attrSpecs[ attr ].isChanged( old[ attr ], ( val = diff[ attr ] ) ) ) continue;\n            (changed || (changed = {}))[ attr ] = val;\n        }\n\n        return changed;        \n    }\n\n    hasChanged( key? : string ) : boolean {\n        const { _previousAttributes } = this;\n        if( !_previousAttributes ) return false;\n\n        return key ?\n                this._attributes[ key ].isChanged( this.attributes[ key ], _previousAttributes[ key ] ) :\n                !isEmpty( this.changed );\n    }\n\n    previous( key : string ) : any {\n        if( key ){\n            const { _previousAttributes } = this;\n            if( _previousAttributes ) return _previousAttributes[ key ];\n        }\n        \n        return null;\n    }\n\n    isNew() : boolean {\n        return this.id == null;\n    }\n\n    has( key : string ) : boolean {\n        return this[ key ] != void 0;\n    }\n\n    // Return attribute value, setting an attribute to undefined.\n    // TODO: If attribute was aggregated, don't dispose it.\n    unset( key : string, options? ) : any {\n        const value = this[ key ];\n        this.set({ [ key ] : void 0 }, { unset : true, ...options });\n        return value;\n    }\n\n    // Undocumented. Move to NestedTypes?\n    clear( options? ) : this {\n        const nullify = options && options.nullify;\n\n        this.transaction( () =>{\n            this.forEach( ( value, key ) => this[ key ] = nullify ? null : void 0 );\n        }, options );\n\n        return this;\n    }\n\n    // Returns Record owner skipping collections. TODO: Move out\n    getOwner() : Owner {\n        const owner : any = this._owner;\n\n        // If there are no key, owner must be transactional object, and it's the collection.\n        // We don't expect that collection can be the member of collection, so we're skipping just one level up. An optimization.\n        return this._ownerKey ? owner : owner && owner._owner;\n    }\n\n    /***********************************\n     * Identity managements\n     */\n\n    // Id attribute name ('id' by default)\n    idAttribute : string;\n\n    // Fixed 'id' property pointing to id attribute\n    get id() : string { return this.attributes[ this.idAttribute ]; }\n    set id( x : string ){ setAttribute( this, this.idAttribute, x ); }\n\n    /***********************************\n     * Dynamically compiled stuff\n     */\n\n    // Attributes specifications \n    _attributes : { [ key : string ] : AnyType }\n    _attributesArray : AnyType[]\n\n    // Attributes object copy constructor\n    Attributes : AttributesConstructor\n    AttributesCopy : AttributesCopyConstructor\n\n    // Create record default values, optionally augmenting given values.\n    defaults( values = {} ){\n        const defaults = {},\n            { _attributesArray } = this;\n\n        for( let attr of _attributesArray ){\n            const key = attr.name,\n            value = values[ key ];\n\n            defaults[ key ] = value === void 0 ? attr.defaultValue() : value;\n        }\n\n        return defaults;\n    }\n\n    /***************************************************\n     * Record construction\n     */\n    // Create record, optionally setting an owner\n    constructor( a_values? : any, a_options? : ConstructorOptions ){\n        super( _cidCounter++ );\n        this.attributes = {};\n        \n        const options = a_options || {},\n              values = ( options.parse ? this.parse( a_values, options ) :  a_values ) || {};\n\n        isProduction || typeCheck( this, values, options );\n\n        this._previousAttributes = this.attributes = new this.Attributes( this, values, options );\n\n        this.initialize( a_values, a_options );\n\n        if( this._localEvents ) this._localEvents.subscribe( this, this );\n    }\n\n    // Initialization callback, to be overriden by the subclasses \n    initialize( values? : Partial<this>, options? ){}\n\n    // Deeply clone record, optionally setting new owner.\n    clone( options : CloneOptions = {} ) : this {\n        const copy : this = new (<any>this.constructor)( this.attributes, { clone : true } );\n        \n        if( options.pinStore ) copy._defaultStore = this.getStore();\n\n        return copy;\n    }\n\n    // Validate attributes.\n    _validateNested( errors : ChildrenErrors ) : number {\n        var length    = 0;\n\n        const { attributes } = this;\n\n        for( let attribute of this._attributesArray ){\n            const { name } = attribute,\n                error = attribute.validate( this, attributes[ name ], name );\n\n            if( error ){\n                errors[ name ] = error;\n                length++;\n            }\n        }\n\n        return length;\n    }\n\n    // Get attribute by key\n    get( key : string ) : any {\n        return this[ key ];\n    }\n\n    // Apply bulk in-place object update in scope of ad-hoc transaction \n    set( values : any, options? : TransactionOptions ) : this {\n        if( values ){ \n            const transaction = this._createTransaction( values, options );\n            transaction && transaction.commit();\n        }\n\n        return this;\n    }\n\n    /**\n     * Serialization control\n     */\n\n    // Default record-level serializer, to be overriden by subclasses \n    toJSON( options? : object ) : any {\n        const json = {},\n            { attributes } = this;\n\n        for( let attribute of this._attributesArray ){\n            const { name } = attribute,\n                value = attributes[ name ];\n\n            if( value !== void 0 ){\n                // ...serialize it according to its spec.\n                const asJson = attribute.toJSON.call( this, value, name, options );\n\n                // ...skipping undefined values. Such an attributes are excluded.\n                if( asJson !== void 0 ) json[ name ] = asJson; \n            }\n        }\n\n        return json;\n    }\n    \n    // Default record-level parser, to be overriden by the subclasses.\n    parse( data, options? : TransactionOptions ){\n        return data;\n    }\n\n    /**\n     * Transactional control\n     */\n    deepSet( name : string, value : any, options? : any ){\n        // Operation might involve series of nested object updates, thus it's wrapped in transaction.\n        this.transaction( () => {\n            const path  = name.split( '.' ),\n                l     = path.length - 1,\n                attr  = path[ l ];\n\n            let model = this;\n\n            // Locate the model, traversing the path.\n            for( let i = 0; i < l; i++ ){\n                const key = path[ i ];\n\n                // There might be collections in path, so use `get`.\n                let next    = model.get ? model.get( key ) : model[ key ];\n\n                // Create models, if they are not exist.\n                if( !next ){\n                    const attrSpecs = model._attributes;\n                    if( attrSpecs ){\n                        // If current object is model, create default attribute\n                        var newModel = attrSpecs[ key ].create();\n\n                        // If created object is model, nullify attributes when requested\n                        if( options && options.nullify && newModel._attributes ){\n                            newModel.clear( options );\n                        }\n\n                        model[ key ] = next = newModel;\n                    }\n                    // Silently fail in other case.\n                    else return;\n                }\n                \n                model = next;\n            }\n\n            // Set model attribute.\n            if( model.set ){\n                model.set({ [ attr ] : value }, options );\n            }\n            else{\n                model[ attr ] = value;\n            }\n        });\n\n        return this;\n    }\n            \n    // Returns owner without the key (usually it's collection)\n    get collection() : any {\n        return this._ownerKey ? null : this._owner;\n    }\n\n    // Dispose object and all childrens\n    dispose(){\n        if( this._disposed ) return;\n\n        const { attributes } = this;\n\n        for( let attr of this._attributesArray ){\n            attr.dispose( this, attributes[ attr.name ] );\n        }\n        \n        super.dispose();\n    }\n\n    _log( level : LogLevel, topic: string, text : string, props : object, a_logger? : Logger ) : void {\n        ( a_logger || logger ).trigger( level, topic, this.getClassName() + ' ' + text, {\n            ...props,\n            'Record' : this,\n            'Attributes definition' : this._attributes\n        });\n    }\n\n    getClassName() : string {\n        return super.getClassName() || 'Record';\n    }\n\n    // Dummies to \n    _createTransaction( values : object, options : TransactionOptions ) : Transaction { return void 0; }\n    // Simulate attribute change \n    forceAttributeChange : ( key : string, options : TransactionOptions ) => void\n    _onChildrenChange : ( child : Transactional, options : TransactionOptions ) => void\n\n\n    /**\n     * Map methods\n     */\n\n    forEach( iteratee : ( value? : any, key? : string ) => void, context? : any ){\n        const fun = context !== void 0 ? ( v, k ) => iteratee.call( context, v, k ) : iteratee,\n            { attributes } = this;\n\n        for( const key in this.attributes ){\n            const value = attributes[ key ];\n            if( value !== void 0 ) fun( value, key );\n        }\n    }\n\n    mapObject( a_fun : ( value, key ) => any, context? : any ) : object {\n        const fun = context === void 0 ? a_fun : a_fun.bind( context );\n        return tools.transform( {}, this.attributes, fun );\n    }\n\n    [ Symbol.iterator ](){\n        return new RecordEntriesIterator( this );\n    }\n\n    entries(){\n        return new RecordEntriesIterator( this );\n    }\n\n    // Get array of attribute keys (Record) or record ids (Collection) \n    keys() : string[] {\n        const keys : string[] = [];\n\n        this.forEach( ( value, key ) => keys.push( key ) );\n\n        return keys;\n    }\n};\n\nassign( Record.prototype, UpdateRecordMixin, IORecordMixin );\n\n/***********************************************\n * Helper functions\n */\n\nclass BaseRecordAttributes {\n    id : string\n\n    constructor( record : Record, x : AttributesValues, options : TransactionOptions ) {\n        this.id = x.id;\n    }\n}\n\nRecord.prototype.Attributes = BaseRecordAttributes;\n\nclass BaseRecordAttributesCopy {\n    id : string\n\n    constructor( x : AttributesValues ) {\n        this.id = x.id;\n    }\n}\n\nRecord.prototype.AttributesCopy = BaseRecordAttributesCopy;\n\nconst IdAttribute = AnyType.create({ value : void 0 }, 'id' );\nRecord.prototype._attributes = { id : IdAttribute };\nRecord.prototype._attributesArray = [ IdAttribute ];\n\nfunction typeCheck( record : Record, values : object, options ){\n    if( shouldBeAnObject( record, values, options ) ){\n        const { _attributes } = record;\n        let unknown : string[];\n\n        for( let name in values ){\n            if( !_attributes[ name ] ){\n                unknown || ( unknown = [] );\n                unknown.push( `'${ name }'` );\n            }\n        }\n\n        if( unknown ){\n            unknownAttrsWarning( record, unknown, { values }, options );\n        }\n    }\n}\n\nexport class RecordEntriesIterator implements Iterator<[string, any]> {\n    private idx = 0;\n    \n    constructor( private readonly record : Record){}\n\n    next() : IteratorResult<[string, any]> {\n        const { record } = this,\n            metatype = record._attributesArray[ this.idx++ ];\n\n        return {\n            done : !metatype,\n            value : metatype ? [ metatype.name, record[ metatype.name ] ] : void 0\n        };\n    }\n}","import { predefine, tools } from '../object-plus';\nimport { Transactional } from '../transactions';\nimport { ChainableAttributeSpec, createSharedTypeSpec, type } from './attrDef';\nimport { SharedType } from './metatypes';\nimport { createAttributesMixin } from './mixin';\nimport { Record, RecordDefinition } from './record';\n\nexport * from './attrDef';\nexport * from './metatypes';\nexport { Record };\n\nconst { assign, defaults } = tools;\n\nRecord.onExtend = function( this : typeof Record, BaseClass : typeof Record ){\n    Transactional.onExtend.call( this, BaseClass );\n\n    // Create the default collection\n    const Class = this;\n\n    @predefine class DefaultCollection extends BaseClass.Collection {\n        static model = Class;\n    }\n\n    this.DefaultCollection = DefaultCollection;\n\n    // If there are no collection defined in statics, use the default collection.\n    // It will appear in onDefine's definition, overriding all other settings.\n    if( Class.Collection === BaseClass.Collection ){\n        this.Collection = DefaultCollection;\n    }\n\n    // Create Class.shared modifier\n    createSharedTypeSpec( this, SharedType );\n}\n\nRecord.onDefine = function( definition : RecordDefinition, BaseClass : typeof Record ){\n    const baseProto : Record = BaseClass.prototype;\n\n    // Compile attributes spec, creating definition mixin.\n    const { properties, _localEvents, ...dynamicMixin } = createAttributesMixin( this.attributes = getAttributes( definition ), baseProto._attributes );\n    assign( this.prototype, dynamicMixin );\n    \n    definition.properties = defaults( definition.properties || {}, properties );\n    definition._localEvents = _localEvents;\n    \n    Transactional.onDefine.call( this, definition, BaseClass );\n\n    // Finalize the definition of the default collection.\n    this.DefaultCollection.define( definition.collection || {} );\n\n    // assign collection from the definition.\n    this.Collection = definition.Collection;\n    this.Collection.prototype.model = this;\n\n    if( definition.endpoint ) this.Collection.prototype._endpoint = definition.endpoint;    \n}\n\ncreateSharedTypeSpec( Record, SharedType );\n\nfunction getAttributes({ defaults, attributes, idAttribute } : RecordDefinition ) {\n    const definition = attributes || defaults || {};\n    \n    // If there is an undeclared idAttribute, add its definition as untyped generic attribute.\n    if( idAttribute && !( idAttribute in definition ) ){\n        definition[ idAttribute ] = void 0;\n    }\n\n    return definition;\n}\n\ndeclare var Reflect;\n\nexport function attr( proto : object, attrName : string ) : void;\nexport function attr( spec : any ) : PropertyDecorator;\nexport function attr( proto, attrName? : string ) : any {\n    if( attrName ){\n        // Called without the spec. Extract the type.\n        if( typeof Reflect !== 'undefined' && Reflect.getMetadata ){\n            type( Reflect.getMetadata( \"design:type\", proto, attrName ) ).asProp( proto, attrName );\n        }\n        else{\n            proto._log( 'error', 'Type-R:MissingImport', 'Add import \"reflect-metadata\"; as the first line of your app.' );\n        }\n    }\n    else{\n        return ChainableAttributeSpec.from( proto ).asProp;\n    }\n}\n\nexport function prop( spec ) : any {\n    return spec.asProp;\n}","import { eventsApi, Logger } from '../object-plus';\nimport { Record } from '../record';\nimport { ItemsBehavior, Owner, Transaction, Transactional, transactionApi, TransactionOptions } from '../transactions';\n\n\nconst { trigger2, trigger3, on, off } = eventsApi,\n      { commit } = transactionApi,\n      _aquire = transactionApi.aquire, _free = transactionApi.free;\n\n/** @private */\nexport interface CollectionCore extends Transactional, Owner {\n    _byId : IdIndex\n    models : Record[]\n    model : typeof Record\n    idAttribute : string // TODO: Refactor inconsistent idAttribute usage\n    _comparator : Comparator\n    get( objOrId : string | Record | Object ) : Record    \n    _itemEvents? : eventsApi.EventMap\n    _shared : number\n    _aggregationError : Record[]\n\n    _log( level : string, topic : string, text : string, value : any, logger : Logger ) : void\n}\n\n// Collection's manipulation methods elements\nexport type Elements = ( Object | Record )[];\n\nexport interface CollectionOptions extends TransactionOptions {\n    sort? : boolean\n}\n\nexport type Comparator = ( a : Record, b : Record ) => number;  \n\n/** @private */\nexport function dispose( collection : CollectionCore ) : Record[]{\n    const { models } = collection;\n\n    collection.models = [];\n    collection._byId  = {};\n\n    freeAll( collection, models );\n    return models;\n}\n\n/** @private */\nexport function convertAndAquire( collection : CollectionCore, attrs : {} | Record, options : CollectionOptions ){\n    const { model } = collection;\n    \n    let record : Record;\n\n    if( collection._shared ){\n        record = attrs instanceof model ? attrs : <Record>model.create( attrs, options );\n\n        if( collection._shared & ItemsBehavior.listen ){\n            on( record, record._changeEventName, collection._onChildrenChange, collection );\n        }\n    }\n    else{\n        record = attrs instanceof model ? ( options.merge ? attrs.clone() : attrs ) : <Record>model.create( attrs, options );\n\n        if( record._owner ){\n            record = record.clone();\n            const errors = collection._aggregationError || ( collection._aggregationError = [] );\n            errors.push( record );\n        }\n\n        _aquire( collection, record );\n    }    \n\n    // Subscribe for events...\n    const { _itemEvents } = collection;\n    _itemEvents && _itemEvents.subscribe( collection, record );\n\n    return record;\n}\n\n/** @private */\nexport function free( owner : CollectionCore, child : Record, unset? : boolean ) : void {\n    if( owner._shared ){\n        if( owner._shared & ItemsBehavior.listen ){\n            off( child, child._changeEventName, owner._onChildrenChange, owner );\n        }\n    }\n    else{\n        _free( owner, child );\n        unset || child.dispose();\n    }\n\n    const { _itemEvents } = owner;\n    _itemEvents && _itemEvents.unsubscribe( owner, child );\n}\n\n/** @private */\nexport function freeAll( collection : CollectionCore, children : Record[] ) : Record[] {\n    for( let child of children ){\n        free( collection, child );\n    }\n\n    return children;\n}\n\n/**\n * Silently sort collection, if its required. Returns true if sort happened.\n * @private\n */   \nexport function sortElements( collection : CollectionCore, options : CollectionOptions ) : boolean {\n    let { _comparator } = collection;\n    if( _comparator && options.sort !== false ){\n        collection.models.sort( _comparator );\n        return true;\n    }\n\n    return false;\n}\n\n/**********************************\n * Collection Index\n * @private \n */\nexport interface IdIndex {\n    [ id : string ] : Record\n}\n\n/** @private Add record */ \nexport function addIndex( index : IdIndex, model : Record ) : void {\n    index[ model.cid ] = model;\n    var id             = model.id;\n    \n    if( id || ( id as any ) === 0 ){\n        index[ id ] = model;\n    }\n}\n\n/** @private Remove record */ \nexport function removeIndex( index : IdIndex, model : Record ) : void {\n    delete index[ model.cid ];\n    var id = model.id;\n    if( id || ( id as any ) === 0 ){\n        delete index[ id ];\n    }\n}\n\nexport function updateIndex( index : IdIndex, model : Record ){\n    delete index[ model.previous( model.idAttribute ) ];\n\n    const { id } = model;\n    id == null || ( index[ id ] = model );\n}\n\n/***\n * In Collections, transactions appears only when\n * add remove or change events might be emitted.\n * reset doesn't require transaction.\n * \n * Transaction holds information regarding events, and knows how to emit them.\n * \n * Two major optimization cases.\n * 1) Population of an empty collection\n * 2) Update of the collection (no or little changes) - it's crucial to reject empty transactions.\n */\n\n\n// Transaction class. Implements two-phase transactions on object's tree.\n/** @private */ \nexport class CollectionTransaction implements Transaction {\n    // open transaction\n    constructor(    public object : CollectionCore,\n                    public isRoot : boolean,\n                    public added : Record[],\n                    public removed : Record[],\n                    public nested : Transaction[],\n                    public sorted : boolean ){}\n\n    // commit transaction\n    commit( initiator? : Transactional ){\n        const { nested, object } = this,\n              { _isDirty } = object;\n\n        // Commit all nested transactions...\n        for( let transaction of nested ){\n            transaction.commit( object );\n        }\n\n        if( object._aggregationError ){\n            logAggregationError( object, _isDirty );\n        }\n\n        // Just trigger 'change' on collection, it must be already triggered for models during nested commits.\n        // ??? TODO: do it in nested transactions loop? This way appears to be more correct. \n        for( let transaction of nested ){\n            trigger2( object, 'change', transaction.object, _isDirty );\n        }\n\n        // Notify listeners on attribute changes...\n        const { added, removed } = this;\n\n        // Trigger `add` events for both model and collection.\n        for( let record of added ){\n            trigger3( record, 'add', record, object, _isDirty );\n            trigger3( object, 'add', record, object, _isDirty );\n        }\n\n        // Trigger `remove` events for both model and collection.\n        for( let record of removed ){\n            trigger3( record, 'remove', record, object, _isDirty );\n            trigger3( object, 'remove', record, object, _isDirty );\n        }\n\n        if( this.sorted ){\n            trigger2( object, 'sort', object, _isDirty );\n        }\n\n        if( added.length || removed.length ){\n            trigger2( object, 'update', object, _isDirty );\n        }\n\n        this.isRoot && commit( object, initiator );\n    }\n}\n\nexport function logAggregationError( collection : CollectionCore, options : TransactionOptions ){\n    collection._log( 'error', 'Type-R:InvalidOwner', 'added records already have an owner and were cloned. Use explicit record.clone() to dismiss this wearning.', collection._aggregationError, options.logger );\n    collection._aggregationError = void 0;\n}","import { Record } from '../record';\nimport { Transaction, transactionApi } from '../transactions';\nimport { addIndex, CollectionCore, CollectionOptions, CollectionTransaction, convertAndAquire, logAggregationError, sortElements, updateIndex } from './commons';\n\nconst { begin, commit, markAsDirty } = transactionApi;\n\nexport interface AddOptions extends CollectionOptions {\n    at? : number \n}\n\n/** @private */\nexport function addTransaction( collection : CollectionCore, items : any[], options : AddOptions, merge? : boolean ){\n    const isRoot = begin( collection ),\n          nested : Transaction[]= [];\n\n    var added = appendElements( collection, items, nested, options, merge );\n\n    if( added.length || nested.length ){\n        let needSort = sortOrMoveElements( collection, added, options );\n        if( markAsDirty( collection, options ) ){\n            return new CollectionTransaction( collection, isRoot, added, [], nested, needSort );\n        }\n\n        if( collection._aggregationError ) logAggregationError( collection, options );\n    }\n\n    // No changes...\n    isRoot && commit( collection );\n};\n\n// Handle sort or insert at options for add operation. Reurns true if sort happened.\n/** @private */ \nfunction sortOrMoveElements( collection : CollectionCore, added : Record[], options : AddOptions ) : boolean {\n    let at = options.at;\n\n    // if `at` option is given, it overrides sorting option...\n    if( at != null ){\n        // Take an original collection's length. \n        const length = collection.models.length - added.length;\n\n        // Crazy Backbone rules about `at` index. I don't know what that guys smoke.\n        at = Number( at );\n        if( at < 0 ) at += length + 1;\n        if( at < 0 ) at = 0;\n        if( at > length ) at = length;\n\n        // Move added elements to desired position. In place.\n        moveElements( collection.models, at, added );\n        return false;\n    }\n\n    return sortElements( collection, options );\n}\n\n/** @private */\nfunction moveElements( source : any[], at : number, added : any[] ) : void {\n    for( var j = source.length - 1, i = j - added.length; i >= at; i--, j-- ){\n        source[ j ] = source[ i ];\n    }\n\n    for( i = 0, j = at; i < added.length; i++, j++ ){\n        source[ j ] = added[ i ];\n    }\n}\n\n// append data to model and index\n/** @private */\nfunction appendElements( collection : CollectionCore, a_items : any[], nested : Transaction[], a_options : AddOptions, forceMerge : boolean ){\n    var { _byId, models } = collection,\n        merge       = ( forceMerge || a_options.merge ) && !collection._shared,\n        parse       = a_options.parse,\n        idAttribute = collection.model.prototype.idAttribute,\n        prevLength = models.length;\n\n    for( const item of a_items ){\n        let model = item ? _byId[ item[ idAttribute ] ] || _byId[ item.cid ] : null;\n\n        if( model ){\n            if( merge && item !== model ){\n                var attrs = item.attributes || item;\n                const transaction = model._createTransaction( attrs, a_options );\n                transaction && nested.push( transaction );\n\n                if( model.hasChanged( idAttribute ) ){\n                    updateIndex( _byId, model );\n                }\n            }\n        }\n        else{\n            model = convertAndAquire( collection, item, a_options );\n            models.push( model );\n            addIndex( _byId, model );\n        }\n    }\n\n    return models.slice( prevLength );\n}\n","/*************\n * Remove items from collections.\n * \n * Cannot be a part of two-phase transaction on object tree.\n * Can be executed in the scope of ad-hoc transaction or from the trigger, though.\n *\n * Implemented with low-level API. \n * Most frequent operation - single element remove. Thus, it have the fast-path.\n */\n\nimport { eventsApi } from '../object-plus';\nimport { Record } from '../record';\nimport { transactionApi, TransactionOptions } from '../transactions';\nimport { CollectionCore, CollectionTransaction, free, removeIndex } from './commons';\n\nconst { trigger2, trigger3 } = eventsApi,\n    { markAsDirty, begin, commit } = transactionApi;\n\n/** @private */\nexport function removeOne( collection : CollectionCore, el : Record | {} | string, options : TransactionOptions ) : Record {\n    var model : Record = collection.get( el );\n\n    if( model ){\n        const isRoot = begin( collection ),\n              models = collection.models;\n\n        // Remove model form the collection. \n        models.splice( models.indexOf( model ), 1 );\n        removeIndex( collection._byId, model );\n        \n        // Mark transaction as dirty. \n        const notify = markAsDirty( collection, options );\n\n        // Send out events.\n        if( notify ){\n            trigger3( model, 'remove', model, collection, options );\n            trigger3( collection, 'remove', model, collection, options );\n        } \n\n        free( collection, model, options.unset );\n\n        notify && trigger2( collection, 'update', collection, options );\n\n        // Commit transaction.\n        isRoot && commit( collection );\n\n        return model;\n    }\n};\n\n/** Optimized for removing many elements\n * 1. Remove elements from the index, checking for duplicates\n * 2. Create new models array matching index\n * 3. Send notifications and remove references\n */\n\n/** @private */\nexport function removeMany( collection : CollectionCore, toRemove : any[], options ){\n    const removed = _removeFromIndex( collection, toRemove, options.unset );\n    if( removed.length ){\n        const isRoot = begin( collection );\n\n        _reallocate( collection, removed.length );\n\n        if( markAsDirty( collection, options ) ){\n            const transaction = new CollectionTransaction( collection, isRoot, [], removed, [], false );\n            transaction.commit();\n        }\n        else{\n            // Commit transaction.\n            isRoot && commit( collection );\n        }\n    }\n\n    return removed;\n};\n\n// remove models from the index...\n/** @private */\nfunction _removeFromIndex( collection, toRemove, unset : boolean ){\n    var removed = Array( toRemove.length ),\n        _byId   = collection._byId;\n\n    for( var i = 0, j = 0; i < toRemove.length; i++ ){\n        var model = collection.get( toRemove[ i ] );\n        if( model ){\n            removed[ j++ ] = model;\n            removeIndex( _byId, model );\n            free( collection, model, unset );\n        }\n    }\n\n    removed.length = j;\n\n    return removed;\n}\n\n// Allocate new models array removing models not present in the index.\n/** @private */\nfunction _reallocate( collection, removed ){\n    var prev   = collection.models,\n        models = collection.models = Array( prev.length - removed ),\n        _byId = collection._byId;\n\n    for( var i = 0, j = 0; i < prev.length; i++ ){\n        var model = prev[ i ];\n\n        if( _byId[ model.cid ] ){\n            models[ j++ ] = model;\n        }\n    }\n\n    models.length = j;\n}","import { Record } from '../record';\nimport { Transaction, transactionApi } from '../transactions';\nimport { addIndex, CollectionCore, CollectionOptions, CollectionTransaction, convertAndAquire, Elements, free, freeAll, IdIndex, logAggregationError, sortElements } from './commons';\n\nconst { begin, commit, markAsDirty } = transactionApi;\n\n/** @private */\nconst silentOptions = { silent : true };\n\n/** @private */\nexport function emptySetTransaction( collection : CollectionCore, items : Elements, options : CollectionOptions, silent? : boolean ){\n    const isRoot = begin( collection );\n\n    const added = _reallocateEmpty( collection, items, options );\n\n    if( added.length ){\n        const needSort = sortElements( collection, options );\n\n        if( markAsDirty( collection, silent ? silentOptions : options ) ){\n            // 'added' is the reference to this.models. Need to copy it.\n            return new CollectionTransaction( collection, isRoot, added.slice(), [], [], needSort );\n        }\n\n        if( collection._aggregationError ) logAggregationError( collection, options );\n    }\n\n    // No changes...\n    isRoot && commit( collection );\n};\n\n/** @private */\nexport function setTransaction( collection, items, options ){\n    const isRoot = begin( collection ),\n          nested = [];\n\n    var previous = collection.models,\n        added    = _reallocate( collection, items, nested, options );\n\n    const reusedCount = collection.models.length - added.length,\n          removed = reusedCount < previous.length ? (\n                        reusedCount ? _garbageCollect( collection, previous ) :\n                                        freeAll( collection, previous )\n                    ) : [];                    \n    \n    const addedOrChanged = nested.length || added.length,\n          // As we are reallocating models array, it needs to be sorted even if there are no changes.\n          sorted = ( sortElements( collection, options ) && addedOrChanged ) || added.length || options.sorted;\n\n    if( addedOrChanged || removed.length || sorted ){\n        if( markAsDirty( collection, options ) ){ \n            return new CollectionTransaction( collection, isRoot, added, removed, nested, sorted );\n        }\n\n        if( collection._aggregationError ) logAggregationError( collection, options );\n    }\n\n    isRoot && commit( collection );\n};\n\n// Remove references to all previous elements, which are not present in collection.\n// Returns an array with removed elements.\n/** @private */\nfunction _garbageCollect( collection : CollectionCore, previous : Record[] ) : Record[]{\n    const { _byId }  = collection,\n          removed = [];\n\n    // Filter out removed models and remove them from the index...\n    for( let record of previous ){\n        if( !_byId[ record.cid ] ){\n            removed.push( record );\n            free( collection, record );\n        }\n    }\n\n    return removed;\n}\n\n// reallocate model and index\n/** @private */\nfunction _reallocate( collection : CollectionCore, source : any[], nested : Transaction[], options ){\n    var models      = Array( source.length ),\n        _byId : IdIndex = {},\n        merge       = ( options.merge == null ? true : options.merge ) && !collection._shared,\n        _prevById   = collection._byId,\n        prevModels  = collection.models, \n        idAttribute = collection.model.prototype.idAttribute,\n        toAdd       = [],\n        orderKept   = true;\n\n    // for each item in source set...\n    for( var i = 0, j = 0; i < source.length; i++ ){\n        var item  = source[ i ],\n            model : Record = null;\n\n        if( item ){\n            var id  = item[ idAttribute ],\n                cid = item.cid;\n\n            if( _byId[ id ] || _byId[ cid ] ) continue;\n\n            model = _prevById[ id ] || _prevById[ cid ];\n        }\n\n        if( model ){\n            if( merge && item !== model ){\n                if( orderKept && prevModels[ j ] !== model ) orderKept = false;\n\n                var attrs = item.attributes || item;\n                const transaction = model._createTransaction( attrs, options );\n                transaction && nested.push( transaction );\n            }\n        }\n        else{\n            model = convertAndAquire( collection, item, options );\n            toAdd.push( model );\n        }\n\n        models[ j++ ] = model;\n        addIndex( _byId, model );\n    }\n\n    models.length = j;\n    collection.models   = models;\n    collection._byId    = _byId;\n\n    if( !orderKept ) options.sorted = true;\n\n    return toAdd;\n}\n\n/** @private */\nfunction _reallocateEmpty( self, source, options ){\n    var len         = source ? source.length : 0,\n        models      = Array( len ),\n        _byId : IdIndex = {},\n        idAttribute = self.model.prototype.idAttribute;\n\n    for( var i = 0, j = 0; i < len; i++ ){\n        var src = source[ i ];\n\n        if( src && ( _byId[ src[ idAttribute ] ] || _byId[ src.cid ] ) ){\n            continue;\n        }\n\n        var model = convertAndAquire( self, src, options );\n        models[ j++ ] = model;\n        addIndex( _byId, model );\n    }\n\n    models.length = j;\n    self._byId    = _byId;\n\n    return self.models = models;\n}","import { IOPromise, startIO } from '../io-tools';\nimport { define, definitions, EventMap, eventsApi, EventsDefinition, Logger, logger, LogLevel, Mixable, MixableConstructor, mixinRules, tools } from '../object-plus';\nimport { AggregatedType, ChainableAttributeSpec, createSharedTypeSpec, Record, SharedType } from '../record';\nimport { CloneOptions, ItemsBehavior, Transactional, TransactionalDefinition, transactionApi, TransactionOptions } from '../transactions';\nimport { AddOptions, addTransaction } from './add';\nimport { CollectionCore, CollectionTransaction, Elements, free, sortElements, updateIndex } from './commons';\nimport { removeMany, removeOne } from './remove';\nimport { emptySetTransaction, setTransaction } from './set';\n\n\nconst { trigger2 } = eventsApi,\n    { begin, commit, markAsDirty } = transactionApi,\n    { assign, defaults } = tools;\n\nlet _count = 0;\n\nexport type GenericComparator = string | ( ( x : Record ) => number ) | ( ( a : Record, b : Record ) => number ); \n\nexport interface CollectionOptions extends TransactionOptions {\n    comparator? : GenericComparator\n    model? : typeof Record\n}\n\nexport type Predicate<R> = ( ( val : R, key? : number ) => boolean ) | Partial<R>;\n\nexport interface CollectionDefinition extends TransactionalDefinition {\n    model? : typeof Record,\n    itemEvents? : EventsDefinition\n    _itemEvents? : EventMap\n}\n\nconst slice = Array.prototype.slice;\n\nclass CollectionRefsType extends SharedType {\n    static defaultValue = [];\n}\n\nexport interface CollectionConstructor<R extends Record = Record > extends MixableConstructor {\n    new ( records? : Partial<R> | Partial<R>[], options?: CollectionOptions ) : Collection<R>\n    prototype : Collection<R>\n    Refs : CollectionConstructor<R>\n    subsetOf( C : Collection<R> | string | ( () => Collection<R> ) ) : ChainableAttributeSpec\n};\n\n\n@define({\n    // Default client id prefix \n    cidPrefix : 'c',\n    model : Record,\n    _changeEventName : 'changes',\n    _aggregationError : null\n})\n@definitions({\n    comparator : mixinRules.value,\n    model : mixinRules.protoValue,\n    itemEvents : mixinRules.merge\n})\nexport class Collection< R extends Record = Record> extends Transactional implements CollectionCore, Iterable<R> {\n    _shared : number\n    _aggregationError : R[]\n\n    static Subset : typeof Collection\n    static Refs : typeof Collection\n    static _SubsetOf : typeof Collection\n    \n    createSubset( models : ElementsArg<R>, options ) : Collection<R>{\n        const SubsetOf = (this.constructor as CollectionConstructor<R>).subsetOf( this ).options.type as CollectionConstructor<R>,\n            subset   = new SubsetOf( models, options );\n            \n        ( subset as any ).resolve( this );\n        return subset;\n    }\n\n    static onExtend( BaseClass : typeof Transactional ){\n        // Cached subset collection must not be inherited.\n        const Ctor = this;\n        this._SubsetOf = null;\n\n        function RefsCollection( a, b, listen? ){\n            Ctor.call( this, a, b, ItemsBehavior.share | ( listen ? ItemsBehavior.listen : 0 ) );\n        }\n\n        Mixable.mixins.populate( RefsCollection );\n        \n        RefsCollection.prototype = this.prototype;\n        RefsCollection._metatype = CollectionRefsType;\n\n        this.Refs = this.Subset = <any>RefsCollection;\n\n        Transactional.onExtend.call( this, BaseClass );\n        createSharedTypeSpec( this, SharedType );\n    }\n    \n    static onDefine( definition : CollectionDefinition, BaseClass : any ){\n        if( definition.itemEvents ){\n            const eventsMap = new EventMap( BaseClass.prototype._itemEvents );\n            eventsMap.addEventsMap( definition.itemEvents );\n            this.prototype._itemEvents = eventsMap;\n        }\n\n        if( definition.comparator !== void 0 ) this.prototype.comparator = definition.comparator;\n\n        Transactional.onDefine.call( this, definition );\n    }\n\n    static subsetOf : ( collectionReference : any ) => any;\n    \n    _itemEvents : EventMap\n\n    /***********************************\n     * Core Members\n     */\n    // Array of the records\n    models : R[]\n\n    // Polymorphic accessor for aggregated attribute's canBeUpdated().\n    get __inner_state__(){ return this.models; }\n\n    // Index by id and cid\n    _byId : { [ id : string ] : R }\n\n    set comparator( x : GenericComparator ){\n\n        switch( typeof x ){\n            case 'string' :\n                this._comparator = ( a, b ) => {\n                    const aa = a[ <string>x ], bb = b[ <string>x ];\n                    if( aa === bb ) return 0;\n                    return aa < bb ? -1 : + 1;\n                } \n                break;\n            case 'function' :\n                if( x.length === 1 ){\n                    this._comparator = ( a, b ) => {\n                        const aa = (<any>x).call( this, a ), bb = (<any>x).call( this, b );\n                        if( aa === bb ) return 0;\n                        return aa < bb ? -1 : + 1;\n                    }\n                }\n                else{\n                    this._comparator = ( a, b ) => (<any>x).call( this, a, b );\n                }\n                break;\n                \n            default :\n                this._comparator = null;\n        }\n    }\n    \n    // TODO: Improve typing\n    getStore() : Transactional {\n        return this._store || ( this._store = this._owner ? this._owner.getStore() : this._defaultStore );\n    }\n\n    _store : Transactional\n\n    get comparator(){ return this._comparator; }\n    _comparator : ( a : R, b : R ) => number\n\n    _onChildrenChange( record : R, options : TransactionOptions = {}, initiator? : Transactional ){\n        // Ignore updates from nested transactions.\n        if( initiator === this ) return;\n\n        const { idAttribute } = this;\n\n        if( record.hasChanged( idAttribute ) ){\n            updateIndex( this._byId, record );\n        }\n\n        const isRoot = begin( this );\n\n        if( markAsDirty( this, options ) ){\n            // Forward change event from the record.\n            trigger2( this, 'change', record, options )\n        }\n\n        isRoot && commit( this );\n    }\n\n    get( objOrId : string | { id? : string, cid? : string } ) : R {\n        if( objOrId == null ) return;\n\n        if( typeof objOrId === 'object' ){\n            const id = objOrId[ this.idAttribute ];\n            return ( id !== void 0 && this._byId[ id ] ) || this._byId[ objOrId.cid ];\n        }\n        else{\n            return this._byId[ objOrId ];\n        }        \n    }\n\n    each( iteratee : ( val : R, key? : number ) => void, context? : any ) : void {\n        this.models.forEach( iteratee, context );\n    }\n\n    // Loop through the members in the scope of transaction.\n    // Transactional version of each()\n    updateEach( iteratee : ( val : R, key? : number ) => void ){\n        const isRoot = transactionApi.begin( this );\n        this.models.forEach( iteratee );\n        isRoot && transactionApi.commit( this );\n    }\n\n    _validateNested( errors : {} ) : number {\n        // Don't validate if not aggregated.\n        if( this._shared ) return 0;\n\n        let count = 0;\n\n        this.each( record => {\n            const error = record.validationError;\n            if( error ){\n                errors[ record.cid ] = error;\n                count++;\n            }\n        });\n\n        return count;\n    }\n\n    model : typeof Record\n\n    // idAttribute extracted from the model type.\n    idAttribute : string\n\n    constructor( records? : ElementsArg<R>, options : CollectionOptions = {}, shared? : number ){\n        super( _count++ );\n        this.models = [];\n        this._byId = {};\n        \n        this.comparator  = this.comparator;\n\n        if( options.comparator !== void 0 ){\n            this.comparator = options.comparator;\n            options.comparator = void 0;\n        }\n        \n        this.model       = this.model;\n        \n        if( options.model ){\n            this.model = options.model;\n            options.model = void 0;\n        }\n\n        this.idAttribute = this.model.prototype.idAttribute; //TODO: Remove?\n\n        this._shared = shared || 0;\n\n        if( records ){\n            const elements = toElements( this, records, options );\n            emptySetTransaction( this, elements, options, true );\n        }\n\n        this.initialize.apply( this, arguments );\n\n        if( this._localEvents ) this._localEvents.subscribe( this, this );\n    }\n\n    initialize(){}\n\n    first() : R { return this.models[ 0 ]; }\n    last() : R { return this.models[ this.models.length - 1 ]; }\n    at( a_index : number ) : R {\n        const index = a_index < 0 ? a_index + this.models.length : a_index;    \n        return this.models[ index ];\n    }\n\n    // Deeply clone collection, optionally setting new owner.\n    clone( options : CloneOptions = {} ) : this {\n        const models = this._shared & ItemsBehavior.share ? this.models : this.map( model => model.clone() ),\n              copy : this = new (<any>this.constructor)( models, { model : this.model, comparator : this.comparator }, this._shared );\n        \n        if( options.pinStore ) copy._defaultStore = this.getStore();\n        \n        return copy;\n    }\n\n    toJSON( options? : object ) : any {\n        return this.models.map( model => model.toJSON( options ) );\n    }\n\n    // Apply bulk in-place object update in scope of ad-hoc transaction \n    set( elements : ElementsArg<R> = [], options : TransactionOptions = {} ) : this {\n        if( (<any>options).add !== void 0 ){\n            this._log( 'warn', \"Type-R:InvalidOption\", \"Collection.set doesn't support 'add' option, behaving as if options.add === true.\", options );\n        }\n\n        // Handle reset option here - no way it will be populated from the top as nested transaction.\n        if( options.reset ){\n            this.reset( elements, options )\n        }\n        else{\n            const transaction = this._createTransaction( elements, options );\n            transaction && transaction.commit();\n        } \n\n        return this;    \n    }\n\n        /**\n     * Enable or disable live updates.\n     * \n     * `true` enables full collection synchronization.\n     * `false` cancel live updates.\n     * `json => true | false` - filter updates\n     */\n    liveUpdates( enabled : LiveUpdatesOption ) : IOPromise<this> {\n        if( enabled ){\n            this.liveUpdates( false );\n\n            const filter = typeof enabled === 'function' ? enabled : () => true;\n\n            this._liveUpdates = {\n                updated : json => {\n                    filter( json ) && this.add( json, { parse : true, merge : true } );\n                },\n\n                removed : id => this.remove( id )\n            };\n\n            return this.getEndpoint().subscribe( this._liveUpdates, this ).then( () => this );\n        }\n        else{\n            if( this._liveUpdates ){\n                this.getEndpoint().unsubscribe( this._liveUpdates, this );\n                this._liveUpdates = null;\n            }\n\n            // TODO: Return the resolved promise.\n        }\n    }\n\n    _liveUpdates : object\n\n    fetch( a_options : { liveUpdates? : LiveUpdatesOption } & TransactionOptions = {} ) : IOPromise<this> {\n        const options = { parse : true, ...a_options },\n            endpoint = this.getEndpoint();\n\n        return startIO(\n            this,\n            endpoint.list( options, this ),\n            options,\n\n            json => {\n                let result : any = this.set( json, { parse : true, ...options } as TransactionOptions );\n                \n                if( options.liveUpdates ){\n                    result = this.liveUpdates( options.liveUpdates );\n                }\n\n                return result;\n            }\n        );\n    }\n\n    dispose() : void {\n        if( this._disposed ) return;\n\n        const aggregated = !this._shared;\n\n        for( let record of this.models ){\n            free( this, record );\n\n            if( aggregated ) record.dispose();\n        }\n\n        this.liveUpdates( false );\n\n        super.dispose();\n    }\n\n    reset( a_elements? : ElementsArg<R>, options : TransactionOptions = {} ) : R[] {\n        const isRoot = begin( this ),\n              previousModels = this.models;\n\n        // Make all changes required, but be silent.\n        if( a_elements ){            \n            emptySetTransaction( this, toElements( this, a_elements, options ), options, true );\n        }\n        else{\n            this._byId = {};\n            this.models = [];\n        }\n\n        markAsDirty( this, options );\n\n        options.silent || trigger2( this, 'reset', this, defaults( { previousModels : previousModels }, options ) );\n\n        // Dispose models which are not in the updated collection.\n        const { _byId } = this;\n        \n        for( let toDispose of previousModels ){\n            _byId[ toDispose.cid ] || free( this, toDispose );\n        }\n\n        isRoot && commit( this );\n        return this.models;\n    }\n\n    // Add elements to collection.\n    add( a_elements : ElementsArg<R> , options : AddOptions = {} ){\n        const elements = toElements( this, a_elements, options ),\n              transaction = this.models.length ?\n                    addTransaction( this, elements, options ) :\n                    emptySetTransaction( this, elements, options );\n\n        if( transaction ){\n            transaction.commit();\n            return transaction.added;\n        }\n    }\n\n    // Remove elements. \n    remove( recordsOrIds : any, options : CollectionOptions = {} ) : R[] | R {\n        if( recordsOrIds ){\n            return Array.isArray( recordsOrIds ) ?\n                        removeMany( this, recordsOrIds, options ) as R[]:\n                        removeOne( this, recordsOrIds, options ) as R;\n        }\n\n        return [];\n    }\n\n    // Apply bulk object update without any notifications, and return open transaction.\n    // Used internally to implement two-phase commit.   \n    _createTransaction( a_elements : ElementsArg<R>, options : TransactionOptions = {} ) : CollectionTransaction | void {\n        const elements = toElements( this, a_elements, options );\n\n        if( this.models.length ){\n            return options.remove === false ?\n                        addTransaction( this, elements, options, true ) :\n                        setTransaction( this, elements, options );\n        }\n        else{\n            return emptySetTransaction( this, elements, options );\n        }\n    }\n\n    static _metatype = AggregatedType;\n\n    /***********************************\n     * Collection manipulation methods\n     */\n\n    pluck<K extends keyof R>( key : K ) : R[K][] {\n        return this.models.map( model => model[ key ] );\n    }\n\n    sort( options : TransactionOptions = {} ) : this {\n        if( sortElements( this, options ) ){\n            const isRoot = begin( this );\n            \n            if( markAsDirty( this, options ) ){\n                trigger2( this, 'sort', this, options );\n            }\n\n            isRoot && commit( this );\n        }\n\n        return this;\n    }\n\n    // Remove and return given model.\n    unset( modelOrId : R | string, options? ) : R {\n        const value = this.get( modelOrId );\n        this.remove( modelOrId, { unset : true, ...options } );\n        return value;\n    }\n\n    modelId( attrs : {} ) : any {\n        return attrs[ this.model.prototype.idAttribute ];\n    }\n\n    // Toggle model in collection.\n    toggle( model : R, a_next? : boolean ) : boolean {\n        var prev = Boolean( this.get( model ) ),\n            next = a_next === void 0 ? !prev : Boolean( a_next );\n\n        if( prev !== next ){\n            if( prev ){\n                this.remove( model );\n            }\n            else{\n                this.add( model );\n            }\n        }\n\n        return next;\n    }\n\n    _log( level : LogLevel, topic : string, text : string, value : object, a_logger? : Logger ) : void {\n        ( a_logger || logger ).trigger( level, topic, `${ this.model.prototype.getClassName() }.${ this.getClassName() }: ` + text, {\n            Argument : value,\n            'Attributes spec' : this.model.prototype._attributes\n        });\n    }\n\n    getClassName() : string {\n        return super.getClassName() || 'Collection';\n    }\n\n    /***********************************\n     * Proxied Array methods\n     */\n\n    get length() : number { return this.models.length; }\n\n    // Add a model to the end of the collection.\n    push(model : ElementsArg<R>, options? : CollectionOptions ) {\n        return this.add(model, assign({at: this.length}, options));\n    }\n\n    // Remove a model from the end of the collection.\n    pop( options? : CollectionOptions ) : R {\n        var model = this.at(this.length - 1);\n        this.remove(model, { unset : true, ...options });\n        return model;\n    }\n\n    // Add a model to the beginning of the collection.\n    unshift(model : ElementsArg<R>, options? : CollectionOptions ) {\n        return this.add(model, assign({at: 0}, options));\n    }\n  \n    // Remove a model from the beginning of the collection.\n    shift( options? : CollectionOptions ) : R {\n        const model = this.at(0);\n        this.remove( model, { unset : true, ...options } );\n        return model;\n    }\n\n    // Slice out a sub-array of models from the collection.\n    slice( begin? : number, end? : number ) : R[] {\n        return this.models.slice( begin, end );\n    }\n  \n    indexOf( modelOrId : string | Partial<R> ) : number {\n        return this.models.indexOf( this.get( modelOrId ) );\n    }\n\n    filter( iteratee : Predicate<R>, context? : any ) : R[] {\n        return this.models.filter( toPredicateFunction( iteratee ), context );\n    }\n\n    find( iteratee : Predicate<R>, context? : any ) : R {\n        return this.models.find( toPredicateFunction( iteratee ), context );\n    }\n\n    some( iteratee : Predicate<R>, context? : any ) : boolean {\n        return this.models.some( toPredicateFunction( iteratee ), context );\n    }\n\n    forEach( iteratee : ( val : R, key? : number ) => void, context? : any ) : void {\n        this.models.forEach( iteratee, context );\n    }\n    \n    [ Symbol.iterator ]() : IterableIterator<R> {\n        return this.models[ Symbol.iterator ]();\n    }\n\n    values() : IterableIterator<R> {\n        return this.models.values();\n    }\n\n    entries() : IterableIterator<[ number, R ]>{\n        return this.models.entries();\n    }\n\n    every( iteratee : Predicate<R>, context? : any ) : boolean {\n        return this.models.every( toPredicateFunction( iteratee ), context );\n    }\n\n    includes( idOrObj : string | Partial<R> ){\n        return Boolean( this.get( idOrObj ) );\n    }\n\n    // Map members to an array\n    map<T>( iteratee : ( val : R, key? : number ) => T, context? : any ) : T[]{\n        return this.models.map( iteratee, context );\n    }\n\n    reduce<T>( iteratee : (previousValue: R, currentValue: R, currentIndex?: number ) => R ) : R\n    reduce<T>( iteratee : (previousValue: T, currentValue: R, currentIndex?: number ) => T, init? : any ) : T\n    reduce<T>( iteratee : (previousValue: any, currentValue: any, currentIndex?: number ) => any, init? : any ) : T | R {\n        return init === void 0 ? this.models.reduce( iteratee ) : this.models.reduce( iteratee, init );\n    }\n}\n\nconst d : CollectionConstructor = Collection;\n\n\nexport type LiveUpdatesOption = boolean | ( ( x : any ) => boolean );\n\nexport type ElementsArg<R = Record> = Partial<R> | Partial<R>[]\n\n// TODO: make is safe for parse to return null (?)\nfunction toElements<R extends Record>( collection : Collection<R>, elements : ElementsArg<R>, options : CollectionOptions ) : Elements {\n    const parsed = options.parse ? collection.parse( elements, options ) : elements; \n    return Array.isArray( parsed ) ? parsed : [ parsed ];\n}\n\ncreateSharedTypeSpec( Collection, SharedType );\n\nRecord.Collection = Collection;\n\nfunction toPredicateFunction<R>( iteratee : Predicate<R> ){\n    switch( typeof iteratee ){\n        case 'function' : return iteratee;\n        case 'object' :\n            const keys = Object.keys( iteratee );\n            \n            return x => {\n                for( let key of keys ){\n                    if( iteratee[ key ] !== x[ key ] )\n                        return false;\n                }\n\n                return true;\n            }\n        default : throw new Error( 'Invalid iteratee' );\n    }\n}","import { Collection } from '../collection';\nimport { Record } from '../record';\nimport { CompiledReference } from '../traversable';\n\nexport type CollectionReference = ( () => Collection ) | Collection | string; \n\n/** @private */\nexport function parseReference( collectionRef : CollectionReference ) : ( root : Record ) => Collection {\n    switch( typeof collectionRef ){\n        case 'function' :\n            return root => (<any>collectionRef).call( root );\n        case 'object'   :\n            return () => <Collection>collectionRef;\n        case 'string'   :\n            const { resolve } = new CompiledReference( <string>collectionRef );\n            return resolve;\n    }\n}","import { AnyType, ChainableAttributeSpec, Record } from '../record';\nimport { CollectionReference, parseReference } from './commons';\n\n\n/********\n * Reference to model by id.\n * \n * Untyped attribute. Holds model id, when unresolved. When resolved, is substituted\n * with a real model.\n * \n * No model changes are detected and counted as owner's change. That's intentional.\n */\n\n/** @private */\ntype RecordRefValue = Record | string;\n\n/** @private */\nclass RecordRefType extends AnyType {\n    // It is always serialized as an id, whenever it's resolved or not. \n    toJSON( value : RecordRefValue ){\n        return value && typeof value === 'object' ? value.id : value;\n    }\n\n    // Wne \n    clone( value : RecordRefValue ){\n        return value && typeof value === 'object' ? value.id : value;\n    }\n\n    // Model refs by id are equal when their ids are equal.\n    isChanged( a : RecordRefValue, b : RecordRefValue){\n        var aId = a && ( (<Record>a).id == null ? a : (<Record>a).id ),\n            bId = b && ( (<Record>b).id == null ? b : (<Record>b).id );\n\n        return aId !== bId;\n    }\n\n    // Refs are always valid.\n    validate( model, value, name ){}\n}\n\nexport function from( path : string, T = Record ){\n    return T.from( path );\n}\n\nRecord.from = function from( masterCollection : CollectionReference ) : ChainableAttributeSpec {\n    const getMasterCollection = parseReference( masterCollection );\n\n    const typeSpec = new ChainableAttributeSpec({\n        value : null,\n        _metatype : RecordRefType\n    });\n    \n    return typeSpec\n        .get( function( objOrId : RecordRefValue, name : string ) : Record {\n            if( typeof objOrId === 'object' ) return objOrId;\n\n            // So, we're dealing with an id reference. Resolve it.\n            const collection = getMasterCollection( this );\n            let   record : Record = null;\n\n            // If master collection exists and is not empty...\n            if( collection && collection.length ){\n                // Silently update attribute with record from this collection.\n                record = collection.get( objOrId ) || null;\n                this.attributes[ name ] = record;\n\n                // Subscribe for events manually. delegateEvents won't be invoked.\n                record && this._attributes[ name ].handleChange( record, null, this, {} );\n            }\n\n            return record;\n        });\n};","import { Collection } from '../collection';\nimport { define, tools } from '../object-plus';\nimport { AggregatedType, ChainableAttributeSpec, Record } from '../record';\nimport { ItemsBehavior, transactionApi } from '../transactions';\nimport { CollectionReference, parseReference } from './commons';\n\ntype RecordsIds = ( string | number )[];\n\nCollection.subsetOf = function subsetOf( masterCollection : CollectionReference ) : ChainableAttributeSpec {\n    const SubsetOf = this._SubsetOf || ( this._SubsetOf = defineSubsetCollection( this ) ),\n        getMasterCollection = parseReference( masterCollection ),\n        typeSpec = new ChainableAttributeSpec({\n            type : SubsetOf\n        });\n\n    return typeSpec.get(\n        function( refs ){\n            !refs || refs.resolvedWith || refs.resolve( getMasterCollection( this ) );\n            return refs;\n        }\n    );\n};\n\nexport function subsetOf( path : string, T = Collection ){\n    return T.subsetOf( path );\n}\n\nconst subsetOfBehavior = ItemsBehavior.share | ItemsBehavior.persistent;\n\nfunction defineSubsetCollection( CollectionConstructor : typeof Collection ) {\n    @define class SubsetOfCollection extends CollectionConstructor {\n        refs : any[];\n        resolvedWith : Collection = null;\n\n        _metatype : AggregatedType\n\n        get __inner_state__(){ return this.refs || this.models; }\n\n        constructor( recordsOrIds?, options? ){\n            super( [], options, subsetOfBehavior );\n            this.refs = toArray( recordsOrIds );\n        }\n\n        // Remove should work fine as it already accepts ids. Add won't...\n        add( a_elements, options = {} ){\n            const { resolvedWith } = this,\n                    toAdd = toArray( a_elements );\n            \n            if( resolvedWith ){\n                // If the collection is resolved already, everything is simple.\n                return super.add( resolveRefs( resolvedWith, toAdd ), options );\n            }\n            else{\n                // Collection is not resolved yet. So, we prepare the delayed computation.\n                if( toAdd.length ){\n                    const isRoot = transactionApi.begin( this );\n\n                    // Save elements to resolve in future...\n                    this.refs = this.refs ? this.refs.concat( toAdd ) : toAdd.slice();\n\n                    transactionApi.markAsDirty( this, options );\n\n                    // And throw the 'changes' event.\n                    isRoot && transactionApi.commit( this );\n                }\n            }\n        }\n\n        reset( a_elements?, options = {} ){\n            const { resolvedWith } = this,\n                elements = toArray( a_elements );\n    \n            return resolvedWith ?\n                // Collection is resolved, so parse ids and forward the call to set.\n                super.reset( resolveRefs( resolvedWith, elements ), options ) :\n                // Collection is not resolved yet. So, we prepare the delayed computation.\n                delaySet( this, elements, options ) as any || [];\n        }\n\n        _createTransaction( a_elements, options? ){\n            const { resolvedWith } = this,\n                elements = toArray( a_elements );\n    \n            return resolvedWith ?\n                // Collection is resolved, so parse ids and forward the call to set.\n                super._createTransaction( resolveRefs( resolvedWith, elements ), options ) :\n                // Collection is not resolved yet. So, we prepare the delayed computation.\n                delaySet( this, elements, options );\n        }\n\n        // Serialized as an array of model ids.\n        toJSON() : RecordsIds {\n            return this.refs ?\n                this.refs.map( objOrId => objOrId.id || objOrId ) :\n                this.models.map( model => model.id );\n        }\n\n        // Subset is always valid.\n        _validateNested(){ return 0; }\n\n        get length() : number {\n            return this.models.length || ( this.refs ? this.refs.length : 0 );\n        }\n\n        // Must be shallow copied on clone.\n        clone( owner? ){\n            var Ctor = (<any>this).constructor,\n                copy = new Ctor( [], {\n                    model : this.model,\n                    comparator : this.comparator\n                });\n\n            if( this.resolvedWith ){\n                // TODO: bug here. \n                copy.resolvedWith = this.resolvedWith;\n                copy.refs = null;\n                copy.reset( this.models, { silent : true } );\n            }\n            else{\n                copy.refs = this.refs.slice();\n            }\n\n            return copy;\n        }\n\n        // Clean up the custom parse method possibly defined in the base class.\n        parse( raw : any ) : Record[] {\n            return raw;\n        }\n\n        resolve( collection : Collection ) : this {\n            if( collection && collection.length ){\n                this.resolvedWith = collection;\n\n                if( this.refs ){\n                    this.reset( this.refs, { silent : true } );\n                    this.refs = null;\n                }\n            }\n\n            return this;\n        }\n\n        getModelIds() : RecordsIds { return this.toJSON(); }\n\n        toggle( modelOrId : any, val : boolean ) : boolean {\n            return super.toggle( this.resolvedWith.get( modelOrId ), val );\n        }\n\n        addAll() : Record[] {\n            if( this.resolvedWith ){\n                this.set( this.resolvedWith.models );\n                return this.models;\n            }\n\n            throw new Error( \"Cannot add elemens because the subset collection is not resolved yet.\" );\n        }\n\n        toggleAll() : Record[] {\n            return this.length ? this.reset() : this.addAll();\n        }\n    }\n\n    // Clean up all custom item events to prevent memory leaks.\n    SubsetOfCollection.prototype._itemEvents = void 0;\n\n    return SubsetOfCollection;\n}\n\nfunction resolveRefs( master, elements ){\n    const records = [];\n    \n    for( let el of elements ){\n        const record = master.get( el );\n        if( record ) records.push( record );\n    }\n\n    return records;\n}\n\nfunction delaySet( collection, elements, options ) : void {\n    if( tools.notEqual( collection.refs, elements ) ){\n        const isRoot = transactionApi.begin( collection );\n\n        // Save elements to resolve in future...\n        collection.refs = elements.slice();\n\n        transactionApi.markAsDirty( collection, options );\n        \n        // And throw the 'changes' event.\n        isRoot && transactionApi.commit( collection );\n    }\n}\n\nfunction toArray( elements ){\n    return elements ? ( \n        Array.isArray( elements ) ? elements : [ elements ]\n    ) : [];\n}","import { Record } from '../record';\nimport { Transactional } from '../transactions';\n\nlet _store : Store = null;\n\nexport class Store extends Record {\n    getStore() : Store { return this; }\n \n    // delegate item lookup to owner, and to the global store if undefined\n    get( name : string ) : any {\n        // Lookup for resource in the current store. \n        let local = this[ name ];\n\n        // If something is found or it's the global store, return result.\n        if( local || this === this._defaultStore ) return local;\n\n        // Forward failed lookup to owner or global store.\n        return this._owner ? this._owner.get( name ) : this._defaultStore.get( name ); \n    }\n\n    static get global(){ return _store; }\n    static set global( store : Store ){\n        if( _store ){\n          _store.dispose();\n        }\n\n        Transactional.prototype._defaultStore = _store = store;\n    }\n}\n\nStore.global = new Store();","// Dummy polyfill to prevent exception in IE.\nif( typeof Symbol === 'undefined' ){\n    Object.defineProperty( window, 'Symbol', { value : { iterator : 'Symbol.iterator' }, configurable : true  });\n}\n\nimport { define, Events, Mixable as Class } from './object-plus/';\n// Define synonims for NestedTypes backward compatibility.\nimport { ChainableAttributeSpec, Record as Model } from './record';\n\n/**\n * Export everything \n */\nexport * from './collection';\nexport * from './io-tools';\nexport * from './object-plus';\nexport * from './record';\nexport * from './relations';\nexport * from './transactions';\nexport { Model, Class };\n\n\nexport const { on, off, trigger, once, listenTo, stopListening, listenToOnce } = <any>Events;\n\n\n\nexport function attributes( attrDefs ) : typeof Model {\n    @define class DefaultRecord extends Model {\n        static attributes = attrDefs;\n    }\n\n    return DefaultRecord;\n}\n\n/** Wrap model or collection method in transaction. */\nexport function transaction< F extends Function >( method : F ) : F {\n    return <any>function( ...args ){\n        let result;\n        \n        this.transaction( () => {\n            result = method.apply( this, args );\n        });\n        \n        return result;\n    }\n}"],"names":["once","_once","tslib_1.__extends","strings","on","off","trigger5","trigger2","trigger3","ItemsBehavior","definitions","getOwnerEndpoint","notEqual","assign","tools.isValidJSON","logger","free","aquire","_.transform","_.defaults","eventsApi.EventMap","value","isEmpty","defaults","tools.transform","keys","commit","begin","markAsDirty","_reallocate","shared","tslib_1.__assign","tools.notEqual","Model"],"mappings":"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"}