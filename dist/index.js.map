{"version":3,"file":"index.js","sources":["../node_modules/tslib/tslib.es6.js","../src/object-plus/tools.ts","../src/object-plus/mixins.ts","../src/object-plus/eventsource.ts","../src/object-plus/events.ts","../src/traversable.ts","../src/io-tools.ts","../src/transactions.ts","../src/record/attributes/updates.ts","../src/record/attributes/any.ts","../src/record/attributes/attrDef.ts","../src/record/attributes/date.ts","../src/record/attributes/basic.ts","../src/record/attributes/shared.ts","../src/record/attributes/index.ts","../src/record/record.ts","../src/record/index.ts","../src/collection/commons.ts","../src/collection/add.ts","../src/collection/set.ts","../src/collection/remove.ts","../src/collection/index.ts","../src/relations/commons.ts","../src/relations/subsetOf.ts","../src/object-plus/index.ts","../src/validation.ts","../src/record/attributes/owned.ts","../src/record/io-mixin.ts","../src/relations/from.ts","../src/relations/store.ts","../src/index.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/**\n * Simple overridable logging stubs, writing to `console` by default.\n * Node.js users might want to redirect logging somewhere.\n * \n * This is the singleton avaliable globally through `Object.log` or \n * exported [[log]] variable.\n */\n\n /** Similar to underscore `_.defaults` */\nexport function defaults< T >( dest : T, ...sources : Object[] ) : T\nexport function defaults< T >( dest : T, source : Object ) : T {\n    for( var name in source ) {\n        if( source.hasOwnProperty( name ) && !dest.hasOwnProperty( name ) ) {\n            dest[ name ] = source[ name ];\n        }\n    }\n\n    if( arguments.length > 2 ){\n        for( let i = 2; i < arguments.length; i++ ){\n            const other = arguments[ i ];\n            other && defaults( dest, other );\n        }\n    }\n\n    return dest;\n}\n\n// Logger is the function.\nexport type Logger = ( level : LogLevel, error : string, props? : object ) => void;\n\nexport type LogLevel = 'none' | 'error' | 'warn' | 'info' | 'debug' | 'log';\n\nconst levelToNumber = {\n    none : 0, error : 1, warn : 2, info : 3, log : 4, debug : 5\n}\n\nexport interface Log extends Logger {\n    level : number\n    throw : number\n    stop : number\n    logger : Logger\n}\n\nexport const log : Log = <any>function( a_level : LogLevel, a_msg : string, a_props : object ){\n    let levelAsNumber = levelToNumber[ a_level ], msg, props, level;\n\n    if( levelAsNumber === void 0 && !a_props ){\n        levelAsNumber = 4;\n        msg = a_level;\n        props = a_msg;\n        level = 'log';\n    }\n    else{\n        msg = a_msg, level = a_level, props = a_props;\n    }\n\n    if( levelAsNumber <= log.level ){\n        if( levelAsNumber <= log.throw || !log.logger ){\n            const error = new Error( msg );\n            (error as any).props = props;\n            throw error;\n        }\n        else{\n            log.logger( level, msg, props );\n            \n            if( levelAsNumber <= log.stop ){\n                debugger;\n            }\n        }\n    }\n}\n\ndeclare var process: any;\n\nlog.level = typeof process !== 'undefined' && process.env && process.env.NODE_ENV === 'production' ? 1 : 2;\nlog.throw = 0;\nlog.stop = 0;\n\n\nlet toString = typeof window === 'undefined' ? \n    function toString( something ){\n        if( something && typeof something === 'object' ){\n            const value = something.__inner_state__ || something,\n                isTransactional = Boolean( something.__inner_state__ ),\n                isArray = Array.isArray( value );\n\n            const keys = Object.keys( value ).join( ', ' ),\n                  body = isArray ? `[ length = ${ value.length } ]` : `{ ${ keys } }`;\n\n            return something.constructor.name + ' ' + body;\n        }\n\n        return something;\n    } : function toString( x ){ return x; };\n\nif( typeof console !== 'undefined' ) {\n    log.logger = function _console( level : LogLevel, error : string, props : object ){\n        const args = [ error ];\n        for( let name in props ){\n            args.push( `\\n\\t${name}:`, toString( props[ name ] ) );\n        }\n\n        console[ level ].apply( console, args );\n    }\n}\n\n/** Check if value is raw JSON */\nexport function isValidJSON( value : any ) : boolean {\n    if( value === null ){\n        return true;\n    }\n\n    switch( typeof value ){\n    case 'number' :\n    case 'string' :\n    case 'boolean' :\n        return true;\n\n    case 'object':\n        var proto = Object.getPrototypeOf( value );\n\n        if( proto === Object.prototype || proto === Array.prototype ){\n            return every( value, isValidJSON );\n        }\n    }\n\n    return false;\n}\n\n/** Get the base class constructor function.\n * @param Class Subclass constructor function.\n * @returns Base class constructor function.\n */\nexport function getBaseClass( Class : Function ) {\n    return Object.getPrototypeOf( Class.prototype ).constructor\n}\n\nexport function assignToClassProto<T, K extends keyof T>( Class, definition : T, ...names : K[] ) : void {\n    for( let name of names ){\n        const value = definition[ name ];\n        value === void 0 || ( Class.prototype[ name ] = value );\n    }\n}\n\n/** Checks whenever given object is an empty hash `{}` */\nexport function isEmpty( obj : {} ) : boolean {\n    if( obj ){\n        for( let key in obj ){\n            if( obj.hasOwnProperty( key ) ){\n                return false;\n            }\n        }\n    }\n\n    return true;\n}\n\nexport type Iteratee = ( value : any, key? : string | number ) => any;\n\n/** @hidden */\nfunction someArray( arr : any[], fun : Iteratee ) : any {\n    let result;\n\n    for( let i = 0; i < arr.length; i++ ){\n        if( result = fun( arr[ i ], i ) ){\n            return result;\n        }\n    }\n}\n\n/** @hidden */\nfunction someObject( obj : {}, fun : Iteratee ) : any {\n    let result;\n\n    for( let key in obj ){\n        if( obj.hasOwnProperty( key ) ){\n            if( result = fun( obj[ key ], key ) ){\n                return result;\n            }\n        }\n    }\n}\n\n/** Similar to underscore `_.some` */\nexport function some( obj, fun : Iteratee ) : any {\n    if( Object.getPrototypeOf( obj ) === ArrayProto ){\n        return someArray( obj, fun );\n    }\n    else{\n        return someObject( obj, fun );\n    }\n}\n\n/** Similar to underscore `_.every` */\nexport function every( obj : { }, predicate : Iteratee ) : boolean {\n    return !some( obj, x => !predicate( x ) );\n}\n\n/** Similar to `getOwnPropertyDescriptor`, but traverse the whole prototype chain. */\nexport function getPropertyDescriptor( obj : {}, prop : string ) : PropertyDescriptor {\n    let desc : PropertyDescriptor;\n\n    for( let proto = obj; !desc && proto; proto = Object.getPrototypeOf( proto ) ) {\n        desc = Object.getOwnPropertyDescriptor( proto, prop );\n    }\n\n    return desc;\n}\n\n/** Similar to underscore `_.omit` */\nexport function omit( source : {}, ...rest : string[] ) : {}\nexport function omit( source ) : {} {\n    const dest = {}, discard = {};\n\n    for( let i = 1; i < arguments.length; i ++ ){\n        discard[ arguments[ i ] ] = true;\n    }\n\n    for( var name in source ) {\n        if( !discard.hasOwnProperty( name ) && source.hasOwnProperty( name ) ) {\n            dest[ name ] = source[ name ];\n        }\n    }\n\n    return dest;\n}\n\n/** map `source` object properties with a given function, and assign the result to the `dest` object.\n * When `fun` returns `undefined`, skip this value. \n */\nexport function transform< A, B >( dest : { [ key : string ] : A }, source : { [ key : string ] : B }, fun : ( value : B, key : string ) => A | void ) : { [ key : string ] : A } {\n    for( var name in source ) {\n        if( source.hasOwnProperty( name ) ) {\n            var value = fun( source[ name ], name );\n            value === void 0 || ( dest[ name ] = < A >value );\n        }\n    }\n\n    return dest;\n}\n\n/** @hidden */\nexport function fastAssign< A >( dest : A, source : {} ) : A {\n    for( var name in source ) {\n        dest[ name ] = source[ name ];\n    }\n\n    return dest;\n}\n\n/** @hidden */\nexport function fastDefaults< A >( dest : A, source : {} ) : A {\n    for( var name in source ) {\n        if( dest[ name ] === void 0 ){\n            dest[ name ] = source[ name ];\n        }\n    }\n\n    return dest;\n}\n\n/** Similar to underscore `_.extend` and `Object.assign` */\nexport function assign< T >( dest : T, ...sources : Object[] ) : T\nexport function assign< T >( dest : T, source : Object ) : T {\n    for( var name in source ) {\n        if( source.hasOwnProperty( name ) ) {\n            dest[ name ] = source[ name ];\n        }\n    }\n\n    if( arguments.length > 2 ){\n        for( let i = 2; i < arguments.length; i++ ){\n            const other = arguments[ i ];\n            other && assign( dest, other );\n        }\n    }\n\n    return dest;\n}\n\n/** Similar to underscore `_.keys` */\nexport function keys( o : any ) : string[]{\n    return o ? Object.keys( o ) : [];\n}\n\n/** Similar to underscore `_.once` */\nexport function once( func : Function ) : Function {\n    var memo, first = true;\n    return function() {\n        if ( first ) {\n            first = false;\n            memo = func.apply(this, arguments);\n            func = null;\n        }\n        return memo;\n    };\n}\n\n/** @hidden */\nconst ArrayProto = Array.prototype,\n      DateProto = Date.prototype,\n      ObjectProto = Object.prototype;\n\n/**\n * Determine whenever two values are not equal, deeply traversing \n * arrays and plain JS objects (hashes). Dates are compared by enclosed timestamps, all other\n * values are compared with strict comparison.\n */\nexport function notEqual( a : any, b : any) : boolean {\n    if( a === b ) return false;\n\n    if( a && b && typeof a == 'object' && typeof b == 'object' ) {\n        const protoA = Object.getPrototypeOf( a );\n\n        if( protoA !== Object.getPrototypeOf( b ) ) return true;\n\n        switch( protoA ){\n            case DateProto   : return +a !== +b;\n            case ArrayProto  : return arraysNotEqual( a, b );\n            case ObjectProto :\n            case null:\n                return objectsNotEqual( a, b );\n        }\n    }\n\n    return true;\n}\n\n/** @hidden */\nfunction objectsNotEqual( a, b ) {\n    const keysA = Object.keys( a );\n\n    if( keysA.length !== Object.keys( b ).length ) return true;\n\n    for( let i = 0; i < keysA.length; i++ ) {\n        const key = keysA[ i ];\n\n        if( !b.hasOwnProperty( key ) || notEqual( a[ key ], b[ key ] ) ) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\n/** @hidden */\nfunction arraysNotEqual( a, b ) {\n    if( a.length !== b.length ) return true;\n\n    for( let i = 0; i < a.length; i++ ) {\n        if( notEqual( a[ i ], b[ i ] ) ) return true;\n    }\n\n    return false;\n}\n\n/**\n * Create an object without Object prototype members except hasOwnProperty.\n * @param obj - optional parameter to populate the hash map from.\n */\nconst HashProto = Object.create( null );\nHashProto.hasOwnProperty = ObjectProto.hasOwnProperty;\n\nexport function hashMap( obj? ){\n    const hash = Object.create( HashProto );\n    return obj ? assign( hash, obj ) : hash;\n}","/*****************************************************************\n * Mixins engine and @define metaprogramming class extensions\n *\n * Vlad Balin & Volicon, (c) 2016-2017\n */\nimport { log, assign, omit, hashMap, getPropertyDescriptor, getBaseClass, defaults, transform } from './tools'\nimport { __extends } from 'tslib'\n\nexport interface Subclass< T > extends MixableConstructor {\n    new ( ...args ) : T\n    prototype : T\n}\n\nexport interface MixableConstructor extends Function{\n    __super__? : object;\n    mixins? : MixinsState;\n    onExtend? : ( BaseClass : Function ) => void;\n    onDefine? : ( definition : object, BaseClass : Function ) => void;\n    define? : ( definition? : object, statics? : object ) => MixableConstructor;\n    extend? : <T extends object>( definition? : T, statics? : object ) => Subclass<T>;\n}\n\nexport interface MixableDefinition {\n    mixins? : Mixin[]\n}\n\n/**\n * Base class, holding metaprogramming class extensions.\n * Supports mixins and Class.define metaprogramming method.\n */\nexport class Mixable {\n    static onExtend : ( BaseClass : Function ) => void;\n    static onDefine : ( definition : object, BaseClass : Function ) => object;    \n    static __super__ : object\n    static mixins : MixinsState;\n\n    /** \n     *  Must be called after inheritance and before 'define'.\n     */\n    static define( protoProps : MixableDefinition = {}, staticProps? : object ) : MixableConstructor {\n        const BaseClass : MixableConstructor = getBaseClass( this );\n\n        // Assign statics.\n        staticProps && assign( this, staticProps );\n\n        // Extract and apply mixins from the definition.\n        const { mixins, ...defineMixin } = protoProps;\n        mixins && this.mixins.merge( mixins );\n\n        // Unshift definition to the the prototype.\n        this.mixins.mergeObject( this.prototype, defineMixin, true );\n\n        // Unshift definition from statics to the prototype.\n        this.mixins.mergeObject( this.prototype, this.mixins.getStaticDefinitions( BaseClass ), true );\n\n        // Call onDefine hook, if it's present.\n        this.onDefine && this.onDefine( this.mixins.definitions, BaseClass );\n        \n        // Apply merge rules to inherited members. No mixins can be added after this point.\n        this.mixins.mergeInheritedMembers( BaseClass );\n\n        return this;\n    }\n\n    /** Backbone-compatible extend method to be used in ES5 and for backward compatibility */\n    static extend< T extends object>(spec? : T, statics? : {} ) : Subclass< T > {\n        let TheSubclass : Subclass< T >;\n\n        // 1. Create the subclass (ES5 compatibility shim).\n        // If constructor function is given...\n        if( spec && spec.hasOwnProperty( 'constructor' ) ){\n            // ...we need to manually call internal TypeScript __extend function. Hack! Hack!\n            TheSubclass = spec.constructor as any;\n            __extends( TheSubclass, this );\n        }\n        // Otherwise, create the subclall in usual way.\n        else{\n            TheSubclass = class Subclass extends this {} as any;\n        }\n\n        predefine( TheSubclass );\n        spec && TheSubclass.define( spec, statics );\n\n        return TheSubclass;\n    }\n}\n\n/** @decorator `@predefine` for forward definitions. Can be used with [[Mixable]] classes only.\n * Forwards the call to the [[Mixable.predefine]];\n */\nexport function predefine( Constructor : MixableConstructor ) : void {\n    const BaseClass : MixableConstructor = getBaseClass( Constructor );\n\n    // Legacy systems support\n    Constructor.__super__ = BaseClass.prototype;\n    \n    // Initialize mixins structures...\n    Constructor.define || MixinsState.get( Mixable ).populate( Constructor );\n\n    // Make sure Ctor.mixins are ready before the callback...\n    MixinsState.get( Constructor );\n\n    // Call extend hook.\n    Constructor.onExtend && Constructor.onExtend( BaseClass );\n}\n\n/** @decorator `@define` for metaprogramming magic. Can be used with [[Mixable]] classes only.\n *  Forwards the call to [[Mixable.define]].\n */\nexport function define( ClassOrDefinition : Function ) : void;\nexport function define( ClassOrDefinition : object ) : ClassDecorator;\nexport function define( ClassOrDefinition : object | MixableConstructor ){\n    // @define class\n    if( typeof ClassOrDefinition === 'function' ){\n        predefine( ClassOrDefinition );\n        ClassOrDefinition.define();\n    }\n    // @define({ prop : val, ... }) class\n    else{\n        return function( Ctor : MixableConstructor ){\n            predefine( Ctor );\n            Ctor.define( ClassOrDefinition );\n        }\n    }\n}\n\nexport function definitions( rules : MixinMergeRules ) : ClassDecorator {\n    return ( Class : Function ) => {\n        const mixins = MixinsState.get( Class );\n        mixins.definitionRules = defaults( hashMap(), rules, mixins.definitionRules );\n    }\n}\n\n// Create simple property list decorator\nexport function propertyListDecorator( listName: string ) : PropertyDecorator {\n    return function propList(proto, name : string) {\n        const list = proto.hasOwnProperty( listName ) ?\n            proto[ listName ] : (proto[ listName ] = (proto[ listName ] || []).slice());  \n\n        list.push(name);\n    }\n}\n\nexport function definitionDecorator( definitionKey, value ){\n    return ( proto : object, name : string ) => {\n        MixinsState\n            .get( proto.constructor )\n            .mergeObject( proto, {\n                [ definitionKey ] : {\n                    [ name ] : value\n                }\n            });\n    }\n}\n\nexport class MixinsState {\n    mergeRules : MixinMergeRules;\n    definitionRules : MixinMergeRules;\n    definitions : object = {};\n    appliedMixins : Mixin[];\n\n    // Return mixins state for the class. Initialize if it's not exist.\n    static get( Class ) : MixinsState {\n        const { mixins } = Class;\n    \n        return mixins && Class === mixins.Class ? mixins :\n             Class.mixins = new MixinsState( Class );\n    }\n\n    constructor( public Class : MixableConstructor ){\n        const { mixins } = getBaseClass( Class );\n\n        this.mergeRules = ( mixins && mixins.mergeRules ) || hashMap();\n        this.definitionRules = ( mixins && mixins.definitionRules ) || hashMap();\n        this.appliedMixins = ( mixins && mixins.appliedMixins ) || [];\n    }\n\n    getStaticDefinitions( BaseClass : Function ){\n        const definitions = hashMap(),\n            { Class } = this;\n\n        return transform( definitions, this.definitionRules, ( rule, name ) =>{\n            if( BaseClass[ name ] !== Class[ name ]){\n                return Class[ name ];\n            }\n        });\n    }\n\n    merge( mixins : Mixin[] ){\n        const proto      = this.Class.prototype,\n            { mergeRules } = this;\n\n        // Copy applied mixins array as it's going to be updated.\n        const appliedMixins = this.appliedMixins = this.appliedMixins.slice();\n\n        // Apply mixins in sequence...\n        for( let mixin of mixins ) {\n            // Mixins array should be flattened.\n            if( Array.isArray( mixin ) ) {\n                this.merge( mixin );\n            }\n            // Don't apply mixins twice.\n            else if( appliedMixins.indexOf( mixin ) < 0 ){\n                appliedMixins.push( mixin );\n\n                // For constructors, merge _both_ static and prototype members.\n                if( typeof mixin === 'function' ){\n                    // Merge static members\n                    this.mergeObject( this.Class, mixin );\n\n                    // merge definitionRules and mergeRules\n                    const sourceMixins = ( mixin as any ).mixins;\n                    if( sourceMixins ){\n                        this.mergeRules = defaults( hashMap(), this.mergeRules, sourceMixins.mergeRules );\n                        this.definitionRules = defaults( hashMap(), this.definitionRules, sourceMixins.definitionRules );\n                        this.appliedMixins = this.appliedMixins.concat( sourceMixins.appliedMixins );\n                    }\n\n                    // Prototypes are merged according with rules.\n                    this.mergeObject( proto, mixin.prototype );\n                }\n                // Handle plain object mixins.\n                else {\n                    this.mergeObject( proto, mixin );\n                }\n            }\n        }\n    }\n\n    populate( ...ctors : Function[] ){\n        for( let Ctor of ctors ) {\n            MixinsState.get( Ctor ).merge([ this.Class ]);\n        }\n    }\n\n    mergeObject( dest : object, source : object, unshift? : boolean ) {\n        forEachOwnProp( source, name => {\n            const sourceProp = Object.getOwnPropertyDescriptor( source, name );\n            let rule : MixinMergeRule;\n\n            if( rule = this.definitionRules[ name ] ){\n                assignProperty( this.definitions, name, sourceProp, rule, unshift );\n            }\n\n            if( !rule || rule === mixinRules.protoValue  ){\n                assignProperty( dest, name, sourceProp, this.mergeRules[ name ], unshift );\n            }\n        });\n    }\n\n    mergeInheritedMembers( BaseClass : Function ){\n        const { mergeRules, Class } = this;\n\n        if( mergeRules ){\n            const proto = Class.prototype,\n                baseProto = BaseClass.prototype;\n\n            for( let name in mergeRules ) {\n                const rule = mergeRules[ name ];\n\n                if( proto.hasOwnProperty( name ) && name in baseProto ){\n                    proto[ name ] = resolveRule( proto[ name ], baseProto[ name ], rule );\n                }\n            }\n        }\n    }\n}\n\nconst dontMix = {\n    function : hashMap({\n        length : true,\n        prototype : true,\n        caller : true,\n        arguments : true,\n        name : true,\n        __super__ : true\n    }),\n    \n    object : hashMap({\n        constructor : true\n    })    \n}\n\nfunction forEachOwnProp( object : object, fun : ( name : string ) => void ){\n    const ignore = dontMix[ typeof object ];\n\n    for( let name of Object.keys( object ) ) {\n        ignore[ name ] || fun( name );\n    }\n}\n\nexport interface MixinMergeRules {\n    [ name : string ] : MixinMergeRule\n}\n\nexport type MixinMergeRule = ( a : any, b : any ) => any\nexport type Mixin = { [ key : string ] : any } | Function\n\n// @mixins( A, B, ... ) decorator.\nexport interface MixinRulesDecorator {\n    ( rules : MixinMergeRules ) : ClassDecorator\n    value( a : object, b : object) : object;\n    protoValue( a : object, b : object) : object;\n    merge( a : object, b : object ) : object;\n    pipe( a: Function, b : Function ) : Function;\n    defaults( a: Function, b : Function ) : Function;\n    classFirst( a: Function, b : Function ) : Function;\n    classLast( a: Function, b : Function ) : Function;\n    every( a: Function, b : Function ) : Function;\n    some( a: Function, b : Function ) : Function;\n}\n\nexport const mixins = ( ...list : Mixin[] ) => (\n    ( Class : Function ) => MixinsState.get( Class ).merge( list )\n);\n\n// @mixinRules({ name : rule, ... }) decorator.\nexport const mixinRules = ( ( rules : MixinMergeRules ) => (\n    ( Class : Function ) => {\n        const mixins = MixinsState.get( Class );\n        mixins.mergeRules = defaults( rules, mixins.mergeRules );\n    }\n) ) as MixinRulesDecorator;\n\n// Pre-defined mixin merge rules\n\nmixinRules.value = ( a, b ) => a;\n\nmixinRules.protoValue = ( a, b ) => a;\n\n// Recursively merge members\nmixinRules.merge = ( a, b ) => defaults( {}, a, b );\n\n    // Execute methods in pipe, with the class method executed last.\nmixinRules.pipe = ( a, b ) => (\n    function( x : any ) : any {\n        return a.call( this, b.call( this, x ) );\n    }\n);\n\n    // Assume methods return an object, and merge results with defaults (class method executed first)\nmixinRules.defaults = ( a : Function, b : Function ) => (\n    function() : object {\n        return defaults( a.apply( this, arguments ), b.apply( this, arguments ) );\n    }\n);\n\n// Execute methods in sequence staring with the class method.\nmixinRules.classFirst = ( a : Function, b : Function ) => (\n    function() : void {\n        a.apply( this, arguments );\n        b.apply( this, arguments );\n    }\n);\n\n    // Execute methods in sequence ending with the class method.\nmixinRules.classLast = ( a : Function, b : Function ) => (\n    function() : void {\n        b.apply( this, arguments );\n        a.apply( this, arguments );\n    }\n)\n\n    // Execute methods in sequence returning the first falsy result.\nmixinRules.every = ( a : Function, b : Function ) =>(\n    function() : any {\n        return a.apply( this, arguments ) && b.apply( this, arguments );\n    }\n);\n    // Execute methods in sequence returning the first truthy result.\nmixinRules.some = ( a : Function, b : Function ) =>(\n    function() : any {\n        return a.apply( this, arguments ) || b.apply( this, arguments );\n    }\n);\n\n/**\n * Helpers\n */\n\nfunction assignProperty( dest : object, name : string, sourceProp : PropertyDescriptor, rule : MixinMergeRule, unshift? : boolean ){\n// Destination prop is defined, thus the merge rules must be applied.\n    if( dest.hasOwnProperty( name ) ){\n        const destProp = Object.getOwnPropertyDescriptor( dest, name );\n\n        if( destProp.configurable && 'value' in destProp ){\n            dest[ name ] = unshift ?\n                resolveRule( sourceProp.value, destProp.value, rule ) :\n                resolveRule( destProp.value, sourceProp.value, rule ) ;\n        }\n    }\n    // If destination is empty, just copy the prop over.\n    else{\n        Object.defineProperty( dest, name, sourceProp );\n    }\n}\n\nfunction resolveRule( dest, source, rule : MixinMergeRule ){\n    // When destination is empty, take the source.\n    if( dest === void 0 ) return source;\n\n    // In these cases we take non-empty destination:\n    if( !rule || source === void 0 ) return dest;\n\n    // In other cases we must merge values.\n    return rule( dest, source );\n}","import { once as _once } from './tools'\n\n/*******************\n * Prebuilt events map, used for optimized bulk event subscriptions.\n *\n * const events = new EventMap({\n *      'change' : true, // Resend this event from self as it is.\n *      'change:attr' : 'localTargetFunction',\n *      'executedInTargetContext' : function(){ ... }\n *      'executedInNativeContext' : '^props.handler'\n * })\n */\n/** @hidden */\nexport interface EventsDefinition {\n    [ events : string ] : Function | string | boolean\n}\n\n/** @hidden */\nexport class EventMap {\n    handlers : EventDescriptor[] = [];\n\n    constructor( map? : EventsDefinition | EventMap ){\n        if( map ){\n            if( map instanceof EventMap ){\n                this.handlers = map.handlers.slice();\n            }\n            else{\n                map && this.addEventsMap( map );\n            }\n        }\n    }\n\n    merge( map : EventMap ){\n        this.handlers = this.handlers.concat( map.handlers );\n    }\n\n    addEventsMap( map : EventsDefinition ){\n        for( let names in map ){\n            this.addEvent( names, map[ names ] )\n        }\n    }\n\n    bubbleEvents( names : string ){\n        for( let name of names.split( eventSplitter ) ){\n            this.addEvent( name, getBubblingHandler( name ) );\n        }\n    }\n\n    addEvent( names : string, callback : Function | string | boolean ){\n        const { handlers } = this;\n\n        for( let name of names.split( eventSplitter ) ){\n            handlers.push( new EventDescriptor( name, callback ) );\n        }\n    }\n\n    subscribe( target : {}, source : EventSource ){\n        for( let event of this.handlers ){\n            on( source, event.name, event.callback, target );\n        }\n    }\n\n    unsubscribe( target : {}, source : EventSource ){\n        for( let event of this.handlers ){\n            off( source, event.name, event.callback, target );\n        }\n    }\n}\n\n/** @hidden */\nexport class EventDescriptor {\n    callback : Function\n\n    constructor(\n        public name : string,\n        callback : Function | string | boolean\n    ){\n        if( callback === true ){\n            this.callback = getBubblingHandler( name );\n        }\n        else if( typeof callback === 'string' ){\n            this.callback =\n                function localCallback(){\n                    const handler = this[ callback ];\n                    handler && handler.apply( this, arguments );\n                };\n        }\n        else{\n            this.callback = <Function>callback;\n        }\n    }\n}\n\n/** @hidden */\nconst _bubblingHandlers = {};\n\n/** @hidden */\nfunction getBubblingHandler( event : string ){\n    return _bubblingHandlers[ event ] || (\n        _bubblingHandlers[ event ] = function( a?, b?, c?, d?, e? ){\n            if( d !== void 0 || e !== void 0 ) trigger5( this, event, a, b, c, d, e );\n            if( c !== void 0 ) trigger3( this, event, a, b, c );\n            else trigger2( this, event, a, b );\n        }\n    );\n}\n\n/** @hidden */\nexport interface HandlersByEvent {\n    [ name : string ] : EventHandler\n}\n\n/** @hidden */\nexport class EventHandler {\n    constructor( public callback : Callback, public context : any, public next = null ){}\n}\n\n/** @hidden */\nfunction listOff( _events : HandlersByEvent, name : string, callback : Callback, context : any ){\n    const head = _events[ name ];\n\n    let filteredHead, prev;\n\n    for( let ev = head; ev; ev = ev.next ){\n        // Element must be kept\n        if( ( callback && callback !== ev.callback && callback !== ev.callback._callback ) ||\n            ( context && context !== ev.context ) ){\n            \n            prev = ev;\n            filteredHead || ( filteredHead = ev );\n        }\n        // Element must be skipped\n        else{\n            if( prev ) prev.next = ev.next;\n        }\n    }\n\n    if( head !== filteredHead ) _events[ name ] = filteredHead;\n}\n\n/** @hidden */\nfunction listSend2( head : EventHandler, a, b ){\n    for( let ev = head; ev; ev = ev.next ) ev.callback.call( ev.context, a, b );\n}\n\n/** @hidden */\nfunction listSend3( head : EventHandler, a, b, c ){\n    for( let ev = head; ev; ev = ev.next ) ev.callback.call( ev.context, a, b, c );\n}\n\n/** @hidden */\nfunction listSend4( head : EventHandler, a, b, c, d ){\n    for( let ev = head; ev; ev = ev.next ) ev.callback.call( ev.context, a, b, c, d );\n}\n\n/** @hidden */\nfunction listSend5( head : EventHandler, a, b, c, d, e ){\n    for( let ev = head; ev; ev = ev.next ) ev.callback.call( ev.context, a, b, c, d, e );\n}\n\n/** @hidden */\nfunction listSend6( head : EventHandler, a, b, c, d, e, f ){\n    for( let ev = head; ev; ev = ev.next ) ev.callback.call( ev.context, a, b, c, d, e, f );\n}\n\n/** @hidden */\nexport interface Callback extends Function {\n    _callback? : Function\n}\n\n/** @hidden */\nexport function on( source : EventSource, name : string, callback : Callback, context? : any ) : void {\n    if( callback ){\n        const _events = source._events || ( source._events = Object.create( null ) );\n        _events[ name ] = new EventHandler( callback, context, _events[ name ] );\n    }\n}\n\n/** @hidden */\nexport function once( source : EventSource, name : string, callback : Callback, context? : any ) : void {\n    if( callback ){\n        const once : Callback = _once( function(){\n            off( source, name, once );\n            callback.apply(this, arguments);\n        });\n\n        once._callback = callback;\n        on( source, name, once, context );\n    }\n}\n\n/** @hidden */\nexport function off( source : EventSource, name? : string, callback? : Callback, context? : any ) : void {\n    const { _events } = source;\n    if( _events ){\n        if( callback || context ) {\n            if( name ){\n                listOff( _events, name, callback, context );\n            }\n            else{\n                for( let name in _events ){\n                    listOff( _events, name, callback, context );\n                }\n            }\n        }\n        else if( name ){\n            _events[ name ] = void 0;\n        }\n        else{\n            source._events = void 0;\n        }\n    }\n}\n\n/** @hidden */\nexport interface EventSource {\n    _events : HandlersByEvent\n}\n\n/** @hidden */\nconst eventSplitter = /\\s+/;\n\n/** @hidden */\nexport function strings( api : ApiEntry, source : EventSource, events : string, callback : Callback, context ){\n    if( eventSplitter.test( events ) ){\n        const names = events.split( eventSplitter );\n        for( let name of names ) api( source, name, callback, context );\n    }\n    else api( source, events, callback, context );\n}\n\n/** @hidden */\nexport type ApiEntry = ( source : EventSource, event : string, callback : Callback, context? : any ) => void\n\n/*********************************\n * Event-triggering API\n */\n\n/** @hidden */\nexport function trigger2( self : EventSource, name : string, a, b ) : void {\n    const { _events } = self;\n    if( _events ){\n        const queue = _events[ name ],\n            { all } = _events;\n\n        listSend2( queue, a, b );\n        listSend3( all, name, a, b );\n    }\n};\n\n/** @hidden */\nexport function trigger3( self : EventSource, name : string, a, b, c ) : void{\n    const { _events } = self;\n    if( _events ){\n        const queue = _events[ name ],\n            { all } = _events;\n\n        listSend3( queue, a, b, c );\n        listSend4( all, name, a, b, c );\n    }\n};\n\n/** @hidden */\nexport function trigger5( self : EventSource, name : string, a, b, c, d, e ) : void{\n    const { _events } = self;\n    if( _events ){\n        const queue = _events[ name ],\n            { all } = _events;\n\n        listSend5( queue, a, b, c, d, e );\n        listSend6( all, name, a, b, c, d, e );\n    }\n};","import { define, mixins, Mixable, Mixin, MixableConstructor, MixinsState, mixinRules, definitions, MixinMergeRules } from './mixins'\nimport { omit, transform } from './tools'\nimport { EventMap, EventsDefinition, EventSource, HandlersByEvent } from './eventsource'\nimport * as _eventsApi from './eventsource'\n\nconst { EventHandler, strings, on, off, once, trigger5, trigger2, trigger3 } = _eventsApi;\n\n/** @hidden */\nconst eventSplitter = /\\s+/;\n\n/** @hidden */\nlet _idCount = 0;\n\n/** @hidden */\nfunction uniqueId() : string {\n    return 'l' + _idCount++;\n}\n\nexport { EventMap, EventsDefinition }\n\nexport interface MessengerDefinition {\n    _localEvents? : EventMap\n    localEvents? : EventsDefinition\n    properties? : PropertyMap\n    [ name : string ] : any\n}\n\nexport interface PropertyMap {\n    [ name : string ] : Property\n}\n\nexport type Property = PropertyDescriptor | ( () => any )\n\n/** @hidden */\nexport interface MessengersByCid {\n    [ cid : string ] : Messenger\n}\n\n/** @hidden */\nexport type CallbacksByEvents = { [ events : string ] : Function }\n\n/*************************\n * Messenger is mixable class with capabilities of sending and receiving synchronous events.\n * This class itself can serve as both mixin and base class.\n */\n\n@define\n@definitions({\n    properties : mixinRules.merge,\n    localEvents : mixinRules.merge\n})\nexport abstract class Messenger implements Mixable, EventSource {\n    // Define extendable mixin static properties.\n    static __super__ : object;\n    static mixins : MixinsState;\n    static onExtend : ( BaseClass : Function ) => void;\n    static define : ( definition? : MessengerDefinition, statics? : object ) => MixableConstructor;\n    static extend : ( definition? : MessengerDefinition, statics? : object ) => MixableConstructor;\n    static onDefine({ localEvents, _localEvents, properties } : MessengerDefinition, BaseClass? : typeof Mixable ){\n        // Handle localEvents definition\n        if( localEvents || _localEvents ){\n            const eventsMap = new EventMap( this.prototype._localEvents );\n\n            localEvents && eventsMap.addEventsMap( localEvents );\n            _localEvents && eventsMap.merge( _localEvents );\n            \n            this.prototype._localEvents = eventsMap;\n        }\n\n        // Handle properties definitions...\n        if( properties ){\n            Object.defineProperties( this.prototype, transform( {}, <PropertyMap>properties, toPropertyDescriptor ) );\n        }\n    }\n\n    /** @hidden */ \n    _events : HandlersByEvent = void 0;\n\n    /** @hidden */ \n    _listeningTo : MessengersByCid = void 0\n\n    /** Unique client-only id. */\n    cid : string\n\n    /** @hidden Prototype-only property to manage automatic local events subscription */ \n    _localEvents : EventMap\n\n    /** @hidden */ \n    constructor(){\n        this.cid = uniqueId();\n        this.initialize.apply( this, arguments );\n\n        // TODO: local events subscribe?\n    }\n\n    /** Method is called at the end of the constructor */\n    initialize() : void {}\n    \n    on( events : string | CallbacksByEvents, callback, context? ) : this {\n        if( typeof events === 'string' ) strings( on, this, events, callback, context );\n        else for( let name in events ) strings( on, this, name, events[ name ], context || callback );\n\n        return this;\n    }\n\n    once( events : string | CallbacksByEvents, callback, context? ) : this {\n        if( typeof events === 'string' ) strings( once, this, events, callback, context );\n        else for( let name in events ) strings( once, this, name, events[ name ], context || callback );\n\n        return this;\n    }\n\n    off( events? : string | CallbacksByEvents, callback?, context? ) : this {\n        if( !events ) off( this, void 0, callback, context );\n        else if( typeof events === 'string' ) strings( off, this, events, callback, context );\n        else for( let name in events ) strings( off, this, name, events[ name ], context || callback );\n\n        return this;\n    }\n\n    // Trigger one or many events, firing all bound callbacks. Callbacks are\n    // passed the same arguments as `trigger` is, apart from the event name\n    // (unless you're listening on `\"all\"`, which will cause your callback to\n    // receive the true name of the event as the first argument).\n    trigger(name : string, a?, b?, c?, d?, e? ) : this {\n        if( d !== void 0 || e !== void 0 ) trigger5( this, name, a, b, c, d, e );\n        else if( c !== void 0 ) trigger3( this, name, a, b, c );\n        else trigger2( this, name, a, b );\n        return this;\n    }\n\n    listenTo( source : Messenger, a : string | CallbacksByEvents, b? : Function ) : this {\n        if( source ){\n            addReference( this, source );\n            source.on( a, !b && typeof a === 'object' ? this : b, this );\n        }\n\n        return this;\n    }\n\n    listenToOnce( source : Messenger, a : string | CallbacksByEvents, b? : Function ) : this {\n        if( source ){\n            addReference( this, source );\n            source.once( a, !b && typeof a === 'object' ? this : b, this );\n        }\n\n        return this;\n    }\n\n    stopListening( a_source? : Messenger, a? : string | CallbacksByEvents, b? : Function ) : this {\n        const { _listeningTo } = this;\n        if( _listeningTo ){\n            const removeAll = !( a || b ),\n                  second = !b && typeof a === 'object' ? this : b;\n\n            if( a_source ){\n                const source = _listeningTo[ a_source.cid ];\n                if( source ){\n                    if( removeAll ) delete _listeningTo[ a_source.cid ];\n                    source.off( a, second, this );\n                }\n            }\n            else if( a_source == null ){\n                for( let cid in _listeningTo ) _listeningTo[ cid ].off( a, second, this );\n\n                if( removeAll ) ( this._listeningTo = void 0 );\n            }\n        }\n\n        return this;\n    }\n\n    /**\n     * Destructor. Stops messenger from listening to all objects,\n     * and stop others from listening to the messenger. \n     */\n    _disposed : boolean\n\n    dispose() : void {\n        if( this._disposed ) return;\n\n        this.stopListening();\n        this.off();\n\n        this._disposed = true;\n    }\n}\n\n/**\n * Backbone 1.2 API conformant Events mixin.\n */\nexport const Events : Messenger = <Messenger> omit( Messenger.prototype, 'constructor', 'initialize' );\n\n/**\n * Messenger Private Helpers \n */\n\nfunction toPropertyDescriptor( x : Property ) : PropertyDescriptor {\n    if( x ){\n        return typeof x === 'function' ? { get : < () => any >x } : <PropertyDescriptor> x;\n    }\n}\n\n/** @hidden */\nfunction addReference( listener : Messenger, source : Messenger ){\n      const listeningTo = listener._listeningTo || (listener._listeningTo = Object.create( null ) ),\n            cid = source.cid || ( source.cid = uniqueId() );\n\n      listeningTo[ cid ] = source;\n}","/**\n * Some sketches for reference resolution.\n *\n * \n * a : Model.from( '~collection' )\n * \n * We need two functions. One for get, and one for compile. \n */\nexport interface Traversable {\n    getStore() : Traversable\n    getOwner() : Traversable\n    get( key : string ) : any \n}\n\nconst referenceMask =  /\\^|(store\\.[^.]+)|([^.]+)/g;\n\n// Compile reference to function\nexport type ResolveReference = ( root : Traversable ) => any;  \n\nexport class CompiledReference {\n    resolve : ResolveReference\n    tail : string\n    local : boolean\n\n    constructor( reference : string, splitTail : boolean = false ){\n        const path = reference\n                        .match( referenceMask )\n                        .map( key => {\n                            if( key === '^' || key === 'owner' ) return 'getOwner()';\n\n                            if( key[ 0 ] === '~' ) return `getStore().get(\"${ key.substr( 1 ) }\")`;\n\n                            if( key.indexOf( 'store.' ) === 0 ) return `getStore().get(\"${ key.substr( 6 ) }\")`;\n                            \n                            return key;\n                        } );\n               \n        this.tail = splitTail && path.pop();\n        this.local = !path.length;\n        \n        this.resolve = <any> new Function( 'self', `\n            var v = self.${ path.shift() };\n                           \n            ${ path.map( x => `\n                v = v && v.${ x };\n            `).join('')}\n\n            return v;\n        ` );\n    }\n}\n\nexport function resolveReference( root : Traversable, reference : string, action : ( object, key : string ) => any ) : any {\n    const path = reference.match( referenceMask ),\n          skip = path.length - 1;\n    \n    let self = root;\n\n    for( var i = 0; i < skip; i++ ){\n        const key = path[ i ];\n        switch( key ){\n            case '~' : self = self.getStore(); break;\n            case '^' : self = self.getOwner(); break;\n            default  : self = self.get( key );\n        }\n\n        // Do nothing if object on the path doesn't exist.\n        if( !self ) return;\n    }\n\n    return action( self, path[ skip ] );\n}","export interface IONode {\n    _endpoint : IOEndpoint\n    _ioPromise : IOPromise< this >\n}\n\nexport interface IOPromise<T> extends Promise<T> {\n    abort? : () => void\n}\n\nexport interface IOEndpoint {\n    list( options : IOOptions, collection? ) : IOPromise<any>\n    create( json : any, options : IOOptions, record? ) : IOPromise<any>\n    update( id : string | number, json :any, options : IOOptions, record? ) : IOPromise<any>\n    read( id : string | number, options : IOOptions, record? ) : IOPromise<any>\n    destroy( id : string | number, options : IOOptions, record? ) : IOPromise<any>\n    subscribe( events : IOEvents, collection? ) : IOPromise<any>\n    unsubscribe( events : IOEvents, collection? ) : void\n}\n\nexport interface IOOptions {\n    ioUpdate? : boolean\n}\n\nexport interface IOEvents {\n    updated? : ( json : any ) => void\n    removed? : ( json : any ) => void\n}\n\nexport function getOwnerEndpoint( self ) : IOEndpoint {\n    // Check if we are the member of the collection...\n    const { collection } = self;\n    if( collection ){\n        return getOwnerEndpoint( collection );\n    }\n\n    // Now, if we're the member of the model...\n    if( self._owner ){\n        const { _endpoints } = self._owner;\n        return _endpoints && _endpoints[ self._ownerKey ];\n    }\n}\n\n/**\n * Create abortable promise.\n * Adds `promise.abort()` function which rejects the promise by default\n * initialize() function takes third optional argument `abort : ( resolve, reject ) => void`,\n * which can be used to add custom abort handling.\n */\ndeclare var Promise: PromiseConstructorLike;\n\nexport function createIOPromise( initialize : InitIOPromise ) : IOPromise<any>{\n    let resolve, reject, onAbort;\n\n    function abort( fn ){\n        onAbort = fn;\n    }\n\n    const promise : IOPromise<any> = new Promise( ( a_resolve, a_reject ) =>{\n        reject = a_reject;\n        resolve = a_resolve;\n        initialize( resolve, reject, abort );\n    }) as IOPromise<any>;\n\n    promise.abort = () => {\n        onAbort ? onAbort( resolve, reject ) : reject( new Error( \"I/O Aborted\" ) );\n    }\n\n    return promise;\n}\n\nexport type InitIOPromise = ( resolve : ( x? : any ) => void, reject : ( x? : any ) => void, abort? : ( fn : Function ) => void ) => void;\n\nexport function startIO( self : IONode, promise : IOPromise<any>, options : IOOptions, thenDo : ( json : any ) => any ) : IOPromise<any> {\n    // Stop pending I/O first...\n    abortIO( self );\n\n    // Mark future update transaction as IO transaction.\n    options.ioUpdate = true;\n\n    self._ioPromise = promise\n        .then( resp => {\n            self._ioPromise = null;\n    \n            const result = thenDo ? thenDo( resp ) : resp;\n                \n            triggerAndBubble( self, 'sync', self, resp, options );\n                \n            return result;\n        } )  \n        .catch( err => {\n            self._ioPromise = null;\n\n            console.error( err );\n            \n            triggerAndBubble( self, 'error', self, err, options );\n            \n            throw err;\n        } ) as IOPromise<any>;\n\n    self._ioPromise.abort = promise.abort;\n\n    return self._ioPromise;\n}\n\nexport function abortIO( self : IONode ){\n    if( self._ioPromise && self._ioPromise.abort ){\n        self._ioPromise.abort();\n        self._ioPromise = null;\n    }\n}\n\nexport function triggerAndBubble( eventSource, ...args ){\n    eventSource.trigger.apply( eventSource, args );\n    const { collection } = eventSource;\n    collection && collection.trigger.apply( collection, args ); \n}","import { Messenger, CallbacksByEvents, MessengersByCid, MixinsState, MixinMergeRules, MessengerDefinition, tools, mixins, mixinRules, definitions, eventsApi, define, Subclass } from './object-plus'\nimport { ValidationError, Validatable, ChildrenErrors } from './validation'\nimport { Traversable, resolveReference } from './traversable'\nimport { IOEndpoint, IOPromise, IONode, abortIO } from './io-tools'\n\nconst { assign } = tools,\n      { trigger2, trigger3, on, off } = eventsApi;\n/***\n * Abstract class implementing ownership tree, tho-phase transactions, and validation. \n * 1. createTransaction() - apply changes to an object tree, and if there are some events to send, transaction object is created.\n * 2. transaction.commit() - send and process all change events, and close transaction.\n */\n\n/** @private */\nexport interface TransactionalDefinition extends MessengerDefinition {\n    endpoint? : IOEndpoint\n}\n\nexport enum ItemsBehavior {\n    share       = 0b0001,\n    listen      = 0b0010,\n    persistent  = 0b0100\n}\n\n// Transactional object interface\n@define\n@definitions({\n    endpoint : mixinRules.value\n})\n@mixins( Messenger )\nexport abstract class Transactional implements Messenger, IONode, Validatable, Traversable {\n    // Mixins are hard in TypeScript. We need to copy type signatures over...\n    // Here goes 'Mixable' mixin.\n    static endpoint : IOEndpoint;\n    static __super__ : object;\n    static mixins : MixinsState;\n    static define : ( definition? : TransactionalDefinition, statics? : object ) => typeof Transactional;\n    static extend : <T extends TransactionalDefinition>( definition? : T, statics? : object ) => any;\n\n    static onDefine( definitions : TransactionalDefinition, BaseClass : typeof Transactional ){\n        if( definitions.endpoint ) this.prototype._endpoint = definitions.endpoint;\n        Messenger.onDefine.call( this, definitions, BaseClass );\n    };\n\n    static onExtend( BaseClass : typeof Transactional ) : void {\n        // Make sure we don't inherit class factories.\n        if( BaseClass.create === this.create ) {\n            this.create = Transactional.create;\n        }\n    }\n\n    // Define extendable mixin static properties.\n    static create( a : any, b? : any ) : Transactional {\n        return new (this as any)( a, b );\n    }\n\n    /** Generic class factory. May be overridden for abstract classes. Not inherited. */\n    on : ( events : string | CallbacksByEvents, callback, context? ) => this\n    once : ( events : string | CallbacksByEvents, callback, context? ) => this\n    off : ( events? : string | CallbacksByEvents, callback?, context? ) => this\n    trigger      : (name : string, a?, b?, c?, d?, e? ) => this\n\n    stopListening : ( source? : Messenger, a? : string | CallbacksByEvents, b? : Function ) => this\n    listenTo : ( source : Messenger, a : string | CallbacksByEvents, b? : Function ) => this\n    listenToOnce : ( source : Messenger, a : string | CallbacksByEvents, b? : Function ) => this\n    \n    _disposed : boolean;\n\n    // State accessor. \n    readonly __inner_state__ : any;\n\n    // Shared modifier (used by collections of shared models)\n    _shared? : number; \n    \n    dispose() : void {\n        if( this._disposed ) return;\n        \n        abortIO( this );\n        this._owner = void 0;\n        this._ownerKey = void 0;\n        this.off();\n        this.stopListening();\n        this._disposed = true;\n    }\n\n    // Must be called at the end of the constructor in the subclass.\n    initialize() : void {}\n\n    /** @private */\n    _events : eventsApi.HandlersByEvent = void 0;\n\n    /** @private */\n    _listeningTo : MessengersByCid\n\n    /** @private */\n    _localEvents : eventsApi.EventMap\n\n    cid : string\n    cidPrefix : string\n\n    static shared : any;\n\n    // Unique version token replaced on change\n    /** @private */\n    _changeToken : {} = {}\n\n    // true while inside of the transaction\n    /** @private */\n    _transaction : boolean = false;\n\n    // Holds current transaction's options, when in the middle of transaction and there're changes but is an unsent change event\n    /** @private */\n    _isDirty  : TransactionOptions = null;\n\n    // Backreference set by owner (Record, Collection, or other object)\n    /** @private */\n    _owner : Owner = void 0;\n\n    // Key supplied by owner. Used by record to identify attribute key.\n    // Only collections doesn't set the key, which is used to distinguish collections.\n    /** @private */  \n    _ownerKey : string = void 0;\n\n    // Name of the change event\n    /** @private */\n    _changeEventName : string\n\n    /**\n     * Subsribe for the changes.\n     */\n    onChanges( handler : Function, target? : Messenger ){\n        on( this, this._changeEventName, handler, target );\n    }\n\n    /**\n     * Unsubscribe from changes.\n     */\n    offChanges( handler? : Function, target? : Messenger ){\n        off( this, this._changeEventName, handler, target );\n    }\n\n    /**\n     * Listen to changes event. \n     */\n    listenToChanges( target : Transactional, handler ){\n        this.listenTo( target, target._changeEventName, handler );\n    }\n\n    constructor( cid : string | number ){\n        this.cid = this.cidPrefix + cid;\n    }\n\n    // Deeply clone ownership subtree\n    abstract clone( options? : CloneOptions ) : this\n    \n    // Execute given function in the scope of ad-hoc transaction.\n    transaction( fun : ( self : this ) => void, options : TransactionOptions = {} ) : void{\n        const isRoot = transactionApi.begin( this );\n        const update = fun.call( this, this );\n        update && this.set( update );\n        isRoot && transactionApi.commit( this );\n    }\n\n    // Loop through the members in the scope of transaction.\n    // Transactional version of each()\n    updateEach( iteratee : ( val : any, key : string | number ) => void, options? : TransactionOptions ){\n        const isRoot = transactionApi.begin( this );\n        this.each( iteratee );\n        isRoot && transactionApi.commit( this );\n    }\n\n    // Apply bulk in-place object update in scope of ad-hoc transaction \n    set( values : any, options? : TransactionOptions ) : this {\n        if( values ){ \n            const transaction = this._createTransaction( values, options );\n            transaction && transaction.commit();\n        } \n\n        return this;\n    }\n\n    // Assign transactional object \"by value\", copying aggregated items.\n    assignFrom( source : Transactional | Object ) : this {\n        // Need to delay change events until change token willl by synced.\n        this.transaction( () =>{\n            this.set( ( <any>source ).__inner_state__ || source, { merge : true } );\n\n            // Synchronize change tokens\n            const { _changeToken } = source as any;\n    \n            if( _changeToken ){\n                this._changeToken = _changeToken;\n            }    \n        });\n\n        return this;\n    }\n\n    // Apply bulk object update without any notifications, and return open transaction.\n    // Used internally to implement two-phase commit.\n    // Returns null if there are no any changes.\n    /** @private */  \n    abstract _createTransaction( values : any, options? : TransactionOptions ) : Transaction | void\n    \n    // Parse function applied when 'parse' option is set for transaction.\n    parse( data : any, options? : TransactionOptions ) : any { return data }\n\n    // Convert object to the serializable JSON structure\n    abstract toJSON( options? : object ) : {}\n\n    /*******************\n     * Traversals and member access\n     */\n    \n    // Get object member by its key.\n    abstract get( key : string ) : any\n\n    // Get object member by symbolic reference.\n    deepGet( reference : string ) : any {\n        return resolveReference( this, reference, ( object, key ) => object.get ? object.get( key ) : object[ key ] );\n    }\n\n    //_isCollection : boolean\n\n    // Return owner skipping collections.\n    getOwner() : Owner {\n        return this._owner;\n    }\n\n    // Store used when owner chain store lookup failed. Static value in the prototype. \n    /** @private */\n    _defaultStore : Transactional\n\n    // Locate the closest store. Store object stops traversal by overriding this method. \n    getStore() : Transactional {\n        const { _owner } = this;\n        return _owner ? <Transactional> _owner.getStore() : this._defaultStore;\n    }\n\n\n    /***************************************************\n     * Iteration API\n     */\n\n    // Loop through the members. Must be efficiently implemented in container class.\n    abstract each( iteratee : ( val : any, key : string | number ) => void, context? : any )\n\n    // Map members to an array\n    map<T>( iteratee : ( val : any, key : string | number ) => T, context? : any ) : T[]{\n        const arr : T[] = [],\n              fun = context !== void 0 ? ( v, k ) => iteratee.call( context, v, k ) : iteratee;\n        \n        this.each( ( val, key ) => {\n            const result = fun( val, key );\n            if( result !== void 0 ) arr.push( result );\n        } );\n\n        return arr;\n    }\n\n    _endpoint : IOEndpoint\n    _ioPromise : IOPromise<this>\n\n    hasPendingIO() : IOPromise<this> { return this._ioPromise; }\n\n    fetch( options? : object ) : IOPromise<this> { throw new Error( \"Not implemented\" ); }\n\n    getEndpoint() : IOEndpoint {\n        return getOwnerEndpoint( this ) || this._endpoint;\n    }\n\n    // Map members to an object\n    mapObject<T>( iteratee : ( val : any, key : string | number ) => T, context? : any ) : { [ key : string ] : T }{\n        const obj : { [ key : string ] : T } = {},\n            fun = context !== void 0 ? ( v, k ) => iteratee.call( context, v, k ) : iteratee;\n        \n        this.each( ( val, key ) => {\n            const result = iteratee( val, key );\n            if( result !== void 0 ) obj[ key ] = result;\n        } );\n\n        return obj;\n    }\n    \n    /*********************************\n     * Validation API\n     */\n\n    // Lazily evaluated validation error\n    /** @private */\n    _validationError : ValidationError = void 0\n\n    // Validate ownership tree and return valudation error \n    get validationError() : ValidationError {\n        const error = this._validationError || ( this._validationError = new ValidationError( this ) );\n        return error.length ? error : null; \n    }\n\n    // Validate nested members. Returns errors count.\n    /** @private */\n    abstract _validateNested( errors : ChildrenErrors ) : number\n\n    // Object-level validator. Returns validation error.\n    validate( obj? : Transactional ) : any {}\n\n    // Return validation error (or undefined) for nested object with the given key. \n    getValidationError( key : string ) : any {\n        var error = this.validationError;\n        return ( key ? error && error.nested[ key ] : error ) || null;\n    }\n\n    // Get validation error for the given symbolic reference.\n    deepValidationError( reference : string ) : any {\n        return resolveReference( this, reference, ( object, key ) => object.getValidationError( key ) );\n    }\n\n    // Iterate through all validation errors across the ownership tree.\n    eachValidationError( iteratee : ( error : any, key : string, object : Transactional ) => void ) : void {\n        const { validationError } = this;\n        validationError && validationError.eachError( iteratee, this );\n    }\n\n    // Check whenever member with a given key is valid. \n    isValid( key : string ) : boolean {\n        return !this.getValidationError( key );\n    }\n\n    valueOf() : Object { return this.cid; }\n    toString(){ return this.cid; }\n\n    // Get class name for an object instance. Works fine with ES6 classes definitions (not in IE).\n    getClassName() : string {\n        const { name } = <any>this.constructor;\n        if( name !== 'Subclass' ) return name;\n    }\n\n    // Logging interface for run time errors and warnings.\n    abstract _log( level : string, text : string, value : any ) : void;\n}\n\nexport interface CloneOptions {\n    // 'Pin store' shall assign this._defaultStore = this.getStore();\n    pinStore? : boolean\n}\n\n// Owner must accept children update events. It's an only way children communicates with an owner.\n/** @private */\nexport interface Owner extends Traversable, Messenger {\n    _onChildrenChange( child : Transactional, options : TransactionOptions ) : void;\n    getOwner() : Owner\n    getStore() : Transactional\n}\n\n// Transaction object used for two-phase commit protocol.\n// Must be implemented by subclasses.\n// Transaction must be created if there are actual changes and when markIsDirty returns true.\n/** @private */ \nexport interface Transaction {\n    // Object transaction is being made on.\n    object : Transactional\n\n    // Send out change events, process update triggers, and close transaction.\n    // Nested transactions must be marked with isNested flag (it suppress owner notification).\n    commit( initiator? : Transactional )\n}\n\n// Options for distributed transaction  \nexport interface TransactionOptions {\n    // Invoke parsing \n    parse? : boolean\n\n    // Suppress change notifications and update triggers\n    silent? : boolean\n\n    // Update existing transactional members in place, or skip the update (ignored by models)\n    merge? : boolean // =true\n\n    // Should collections remove elements in set (ignored by models)  \n    remove? : boolean // =true\n\n    // Always replace enclosed objects with new instances\n    reset? : boolean // = false\n\n    // Do not dispose aggregated members\n    unset? : boolean\n\n    validate? : boolean\n\n    // `true` if the transaction is initiated as a result of IO operation\n    ioUpdate? : boolean\n\n    // The hint for IOEndpoint\n    // If `true`, `record.save()` will behave as \"upsert\" operation for the records having id.\n    upsert? : boolean\n}\n\n/**\n * Low-level transactions API. Must be used like this:\n * const isRoot = begin( record );\n * ...\n * isRoot && commit( record, options );\n * \n * When committing nested transaction, the flag must be set to true. \n * commit( object, options, isNested ) \n */\n\nexport const transactionApi = {\n    // Start transaction. Return true if it's the root one.\n    /** @private */\n    begin( object : Transactional ) : boolean {\n        return object._transaction ? false : ( object._transaction = true );  \n    },\n\n    // Mark object having changes inside of the current transaction.\n    // Returns true whenever there notifications are required.\n    /** @private */\n    markAsDirty( object : Transactional, options : TransactionOptions ) : boolean {\n        // If silent option is in effect, don't set isDirty flag.\n        const dirty = !options.silent;\n        if( dirty ) object._isDirty = options;\n        \n        // Reset version token.\n        object._changeToken = {};\n\n        // Object is changed, so validation must happen again. Clear the cache.\n        object._validationError = void 0;\n\n        return dirty;\n    },\n\n    // Commit transaction. Send out change event and notify owner. Returns true if there were changes.\n    // Must be executed for the root transaction only.\n    /** @private */\n    commit( object : Transactional, initiator? : Transactional ){\n        let originalOptions = object._isDirty;\n\n        if( originalOptions ){\n            // Send the sequence of change events, handling chained handlers.\n            while( object._isDirty ){\n                const options = object._isDirty;\n                object._isDirty = null; \n                trigger3( object, object._changeEventName, object, options, initiator );\n            }\n            \n            // Mark transaction as closed.\n            object._transaction = false;\n\n            // Notify owner on changes out of transaction scope.  \n            const { _owner } = object;  \n            if( _owner && _owner !== <any> initiator ){ // If it's the nested transaction, owner is already aware there are some changes.\n                _owner._onChildrenChange( object, originalOptions );\n            }\n        }\n        else{\n            // No changes. Silently close transaction.\n            object._isDirty = null;\n            object._transaction = false;\n        }\n    },\n\n    /************************************\n     * Ownership management\n     */\n\n    // Add reference to the record.\n    /** @private */\n    aquire( owner : Owner, child : Transactional, key? : string ) : boolean {\n        if( !child._owner ){\n            child._owner = owner;\n            child._ownerKey = key;\n            return true;\n        }\n\n        return child._owner === owner;\n    },\n\n    // Remove reference to the record.\n    /** @private */\n    free( owner : Owner, child : Transactional ) : void {\n        if( owner === child._owner ){\n            child._owner = void 0;\n            child._ownerKey = void 0;\n        }\n    }\n}\n\nfunction getOwnerEndpoint( self : Transactional ) : IOEndpoint {\n    // Check if we are the member of the collection...\n    const { collection } = self as any;\n    if( collection ){\n        return getOwnerEndpoint( collection );\n    }\n\n    // Now, if we're the member of the model...\n    if( self._owner ){\n        const { _endpoints } = self._owner as any;\n        return _endpoints && _endpoints[ self._ownerKey ];\n    }\n}\n","import { Transactional, Transaction, TransactionOptions, Owner, transactionApi } from \"../../transactions\"\nconst { begin : _begin, markAsDirty : _markAsDirty, commit } = transactionApi;\n\nimport { eventsApi } from '../../object-plus'\nconst { trigger3 } = eventsApi;\n\nexport interface ConstructorsMixin {\n    Attributes : AttributesConstructor\n    AttributesCopy : AttributesCopyConstructor\n}\n\nexport interface ConstructorOptions extends TransactionOptions{\n    clone? : boolean\n}\n\nexport type AttributesConstructor = new ( record : AttributesContainer, values : object, options : TransactionOptions ) => AttributesValues;\nexport type AttributesCopyConstructor = new ( values : object ) => AttributesValues;\n\nexport interface AttributesContainer extends Transactional, Owner, ConstructorsMixin {\n    // Attribute descriptors.\n    _attributes : AttributesDescriptors\n\n    // Attribute values.\n    attributes : AttributesValues\n\n    // Previous attribute values.\n    _previousAttributes : AttributesValues\n\n    // Changed attributes cache. \n    _changedAttributes : AttributesValues\n}\n\nexport interface AttributesValues {\n    [ name : string ] : any\n}\n\nexport interface AttributesDescriptors {\n    [ name : string ] : AttributeUpdatePipeline\n}\n\nexport interface AttributeUpdatePipeline{\n    doUpdate( value, record : AttributesContainer, options : TransactionOptions, nested? : Transaction[] ) : boolean\n}\n\n // Optimized single attribute transactional update. To be called from attributes setters\n // options.silent === false, parse === false. \nexport function setAttribute( record : AttributesContainer, name : string, value : any ) : void {\n    // Open the transaction.\n    const isRoot  = begin( record ),\n          options = {};\n\n    // Update attribute.      \n    if( record._attributes[ name ].doUpdate( value, record, options ) ){\n        // Notify listeners on changes.\n        markAsDirty( record, options );\n        trigger3( record, 'change:' + name, record, record.attributes[ name ], options );\n    }\n\n    // Close the transaction.\n    isRoot && commit( record );\n}\n\nfunction begin( record : AttributesContainer ){\n    if( _begin( record ) ){\n        record._previousAttributes = new record.AttributesCopy( record.attributes );\n        record._changedAttributes = null;\n        return true;\n    }\n    \n    return false;\n}\n\nfunction markAsDirty( record : AttributesContainer, options : TransactionOptions ){\n    // Need to recalculate changed attributes, when we have nested set in change:attr handler\n    if( record._changedAttributes ){\n        record._changedAttributes = null;\n    }\n\n    return _markAsDirty( record, options );\n}\n\n/**\n * TODO: There's an opportunity to create an optimized pipeline for primitive types and Date, which makes the majority\n * of attributes. It might create the major speedup.\n * \n * Create the dedicated pipeline for owned and shared attributes as well.\n * \n * Three elements of the pipeline:\n * - from constructor\n * - from assignment\n * - from `set`\n */\n\nexport const UpdateRecordMixin = {\n// Need to override it here, since begin/end transaction brackets are overriden. \n    transaction( this : AttributesContainer, fun : ( self : AttributesContainer ) => void, options : TransactionOptions = {} ) : void{\n        const isRoot = begin( this );\n        fun.call( this, this );\n        isRoot && commit( this );\n    },\n            \n    // Handle nested changes. TODO: propagateChanges == false, same in transaction.\n    _onChildrenChange( child : Transactional, options : TransactionOptions ) : void {\n        const { _ownerKey } = child,\n              attribute = this._attributes[ _ownerKey ];\n\n        if( !attribute /* TODO: Must be an opposite, likely the bug */ || attribute.propagateChanges ) this.forceAttributeChange( _ownerKey, options );\n    },\n\n    // Simulate attribute change \n    forceAttributeChange( key : string, options : TransactionOptions = {} ){\n        // Touch an attribute in bounds of transaction\n        const isRoot = begin( this );\n\n        if( markAsDirty( this, options ) ){\n            trigger3( this, 'change:' + key, this, this.attributes[ key ], options );\n        }\n        \n        isRoot && commit( this );\n    },\n\n    _createTransaction( this : AttributesContainer, a_values : {}, options : TransactionOptions = {} ) : Transaction {\n        const isRoot = begin( this ),\n                changes : string[] = [],\n                nested : RecordTransaction[]= [],\n                { _attributes } = this,\n                values = options.parse ? this.parse( a_values, options ) : a_values;\n\n        let unknown;\n\n        if( shouldBeAnObject( this, values ) ){\n            for( let name in values ){\n                const spec = _attributes[ name ];\n\n                if( spec ){\n                    if( spec.doUpdate( values[ name ], this, options, nested ) ){\n                        changes.push( name );\n                    }\n                }\n                else{\n                    unknown || ( unknown = [] );\n                    unknown.push( `'${ name }'` );\n                }\n            }\n\n            if( unknown ){\n                // this._log( 'warn', `Undefined attributes ${ unknown.join(', ')} are ignored!`, values );\n            }\n        }\n        \n        if( changes.length && markAsDirty( this, options ) ){\n            return new RecordTransaction( this, isRoot, nested, changes );\n        }\n        \n        // No changes, but there might be silent attributes with open transactions.\n        for( let pendingTransaction of nested ){\n            pendingTransaction.commit( this );\n        }\n\n        isRoot && commit( this );\n    }\n};\n\n// One of the main performance tricks of Type-R.\n// Create loop unrolled constructors for internal attribute hash,\n// so the hidden class JIT optimization will be engaged and they will become static structs.\n// It dramatically improves record performance.\nexport function constructorsMixin( attrDefs : AttributesDescriptors ) : ConstructorsMixin {\n    const attrs = Object.keys( attrDefs );\n\n    const AttributesCopy : AttributesCopyConstructor = new Function( 'values', `\n        ${ attrs.map( attr =>`\n            this.${ attr } = values.${ attr };\n        `).join( '' ) }\n    `) as any;\n\n    AttributesCopy.prototype = Object.prototype;\n\n    const Attributes : AttributesConstructor = new Function( 'record', 'values', 'options', `\n        var _attrs = record._attributes;\n\n        ${ attrs.map( attr =>`\n            this.${ attr } = _attrs.${ attr }.doInit( values.${ attr }, record, options );\n        `).join( '' ) }\n    `) as any;\n\n    Attributes.prototype = Object.prototype;\n\n    return { Attributes, AttributesCopy };\n}\n\nexport function shouldBeAnObject( record : AttributesContainer, values : object ){\n    if( values && values.constructor === Object ) return true;\n\n    record._log( 'warn', 'update with non-object is ignored!', { values } );\n    return false;\n}\n\n// Transaction class. Implements two-phase transactions on object's tree. \n// Transaction must be created if there are actual changes and when markIsDirty returns true. \nexport class RecordTransaction implements Transaction {\n    // open transaction\n    constructor( public object : AttributesContainer,\n                 public isRoot : boolean,\n                 public nested : Transaction[],\n                 public changes : string[] ){}\n\n    // commit transaction\n    commit( initiator? : AttributesContainer ) : void {\n        const { nested, object, changes } = this;\n\n        // Commit all pending nested transactions...\n        for( let transaction of nested ){ \n            transaction.commit( object );\n        }\n\n        // Notify listeners on attribute changes...\n        // Transaction is never created when silent option is set, so just send events out.\n        const { attributes, _isDirty } = object;\n        for( let key of changes ){\n            trigger3( object, 'change:' + key, object, attributes[ key ], _isDirty );\n        }\n\n        this.isRoot && commit( object, initiator );\n    }\n}","import { setAttribute, AttributesContainer, AttributeUpdatePipeline, RecordTransaction } from './updates'\nimport { tools } from '../../object-plus'\nimport { Owner, Transactional, TransactionOptions } from '../../transactions'\nimport { IOEndpoint } from '../../io-tools'\n\nconst { notEqual, assign} = tools;\n\ndeclare global {\n    interface Function {\n        _attribute : typeof AnyType\n    }\n}\n\nexport type Transform = ( this : AnyType, next : any, prev : any, record : AttributesContainer, options : TransactionOptions ) => any;\nexport type ChangeHandler = ( this : AnyType, next : any, prev : any, record : AttributesContainer, options : TransactionOptions ) => void;\n\nexport interface AttributeOptions {\n    _attribute? : typeof AnyType\n    validate? : ( record : AttributesContainer, value : any, key : string ) => any\n    isRequired? : boolean\n    changeEvents? : boolean\n\n    endpoint? : IOEndpoint\n\n    type? : Function\n    value? : any\n    hasCustomDefault? : boolean\n\n    parse? : Parse\n    toJSON? : AttributeToJSON\n   \n    getHooks? : GetHook[]\n    transforms? : Transform[]\n    changeHandlers? : ChangeHandler[]\n\n    _onChange? : ChangeAttrHandler\n}\n\nexport type Parse = ( value : any, key : string ) => any;\nexport type GetHook = ( value : any, key : string ) => any;\nexport type AttributeToJSON = ( value : any, key : string ) => any\nexport type AttributeParse = ( value : any, key : string ) => any\nexport type ChangeAttrHandler = ( ( value : any, attr : string ) => void ) | string;\n\n// TODO: interface differs from options, do something obout it\nconst emptyOptions : TransactionOptions = {};\n\n/**\n * Typeless attribute. Is the base class for all other attributes.\n */\nexport class AnyType implements AttributeUpdatePipeline {\n    // Factory method to create attribute from options \n    static create( options : AttributeOptions, name : string ) : AnyType {\n        const type = options.type,\n              AttributeCtor = options._attribute || ( type ? type._attribute : AnyType );\n\n        return new AttributeCtor( name, options );\n    }\n    /**\n     * Update pipeline functions\n     * =========================\n     *\n     * Stage 0. canBeUpdated( value )\n     * - presence of this function implies attribute's ability to update in place.\n     */\n    canBeUpdated( prev, next, options : TransactionOptions ) : any {}\n\n    /**\n     * Stage 1. Transform stage\n     */\n    transform( next : any, prev : any, model : AttributesContainer, options : TransactionOptions ) : any { return next; }\n\n    // convert attribute type to `this.type`.\n    convert( next : any, prev : any, model : AttributesContainer, options : TransactionOptions ) : any { return next; }\n\n    /**\n     * Stage 2. Check if attr value is changed\n     */\n    isChanged( a : any, b : any ) : boolean {\n        return notEqual( a, b );\n    }\n\n    /**\n     * Stage 3. Handle attribute change\n     */\n    handleChange( next : any, prev : any, model : AttributesContainer, options : TransactionOptions ) {}\n\n    /**\n     * End update pipeline definitions.\n     */\n\n    // create empty object passing backbone options to constructor...\n    create() { return void 0; }\n\n    // generic clone function for typeless attributes\n    // Must be overriden in sublass\n    clone( value : any, record : AttributesContainer ) {\n        return value;\n    }\n\n    dispose( record : AttributesContainer, value : any ) : void {\n        this.handleChange( void 0, value, record, emptyOptions );\n    }\n\n    validate( record : AttributesContainer, value : any, key : string ){}\n\n    toJSON( value, key, options? : object ) {\n        return value && value.toJSON ? value.toJSON( options ) : value;\n    }\n\n    createPropertyDescriptor() : PropertyDescriptor | void {\n        const { name, getHook } = this;\n\n        if( name !== 'id' ){\n            return {\n                // call to optimized set function for single argument.\n                set( value ){\n                    setAttribute( this, name, value );\n                },\n\n                // attach get hook to the getter function, if it present\n                get : (\n                    getHook ?\n                        function() {\n                            return getHook.call( this, this.attributes[ name ], name );\n                        } :\n                        function() { return this.attributes[ name ]; }\n                )\n            }\n        }\n    }\n\n    value : any\n\n    // Used as global default value for the given metatype\n    static defaultValue : any;\n\n    type : Function\n\n    initialize( name : string, options : TransactionOptions ){}\n\n    options : AttributeOptions\n\n    doInit( value, record : AttributesContainer, options : TransactionOptions ){\n        const v = value === void 0 ? this.defaultValue() : value,\n            x = this.transform( v, void 0, record, options );\n            \n        this.handleChange( x, void 0, record, options );\n        return x;\n    }\n\n    doUpdate( value, record : AttributesContainer, options : TransactionOptions, nested? : RecordTransaction[] ){\n        const { name } = this,\n            { attributes } = record,\n              prev = attributes[ name ];\n\n        const next = this.transform( value, prev, record, options );\n        attributes[ name ] = next;\n\n        if( this.isChanged( next, prev ) ) {\n            // Do the rest of the job after assignment\n            this.handleChange( next, prev, record, options );\n            return true;\n        }\n\n        return false;\n    }\n\n    propagateChanges : boolean\n\n    _log( level : tools.LogLevel, text : string, value, record : AttributesContainer ){\n        tools.log( level, `[Attribute Update Error] ${ record.getClassName() }.${ this.name }: ` + text, {\n            'Record' : record,\n            'Attribute definition' : this,\n            'Prev. value' : record.attributes[ this.name ],\n            'New value' : value\n        });\n    }\n\n    defaultValue(){\n        return this.value;\n    }\n\n    constructor( public name : string, a_options : AttributeOptions ) {        \n        // Save original options...\n        this.options = a_options;\n\n        // Clone options.\n        const options : AttributeOptions = assign( { getHooks : [], transforms : [], changeHandlers : [] }, a_options );\n        options.getHooks = options.getHooks.slice();\n        options.transforms = options.transforms.slice();\n        options.changeHandlers = options.changeHandlers.slice();\n\n        const {\n                  value, type, parse, toJSON, changeEvents,\n                  validate, getHooks, transforms, changeHandlers\n              } = options;\n\n        // Initialize default value...\n        this.value = value;\n        this.type  = type;\n\n        // TODO: An opportunity to optimize for attribute subtype.\n        if( !options.hasCustomDefault && type ){\n            this.defaultValue = this.create;\n        }\n        else if( tools.isValidJSON( value ) ){ \n            // JSON literals must be deep copied.\n            this.defaultValue = new Function( `return ${ JSON.stringify( value ) };` ) as any;\n        }\n        else{\n            this.defaultValue = this.defaultValue;\n        }\n\n        // Changes must be bubbled when they are not disabled for an attribute and transactional object.\n        this.propagateChanges = changeEvents !== false;\n\n        this.toJSON = toJSON === void 0 ? this.toJSON : toJSON;\n\n        this.validate = validate || this.validate;\n        \n        if( options.isRequired ){\n            this.validate = wrapIsRequired( this.validate );\n        }\n\n        /**\n         * Assemble pipelines...\n         */\n\n        // `convert` is default transform, which is always present...\n        transforms.unshift( this.convert );\n\n        // Get hook from the attribute will be used first...\n        if( this.get ) getHooks.unshift( this.get );\n\n        // let subclasses configure the pipeline...\n        this.initialize.call( this, options );\n\n        // let attribute spec configure the pipeline...\n        if( getHooks.length ){\n            const getHook = this.getHook = getHooks.reduce( chainGetHooks );\n\n            const { validate } = this;\n            this.validate = function( record : AttributesContainer, value : any, key : string ){\n                return validate.call( this, record, getHook.call( record, value, key ), key );\n            }\n        }\n        \n        this.transform = transforms.length ? transforms.reduce( chainTransforms ) : this.transform;\n        \n        this.handleChange = changeHandlers.length ? changeHandlers.reduce( chainChangeHandlers ) : this.handleChange;\n\n        // Attribute-level parse transform are attached as update hooks modifiers...\n        const { doInit, doUpdate } = this;\n        this.doInit = parse ? function( value, record : AttributesContainer, options : TransactionOptions ){\n            return doInit.call( this, options.parse && value !== void 0 ? parse.call( record, value, this.name ) : value, record, options );\n        } : doInit;\n\n        this.doUpdate = parse ? function( value, record : AttributesContainer, options : TransactionOptions, nested? : RecordTransaction[] ){\n            return doUpdate.call( this, options.parse && value !== void 0 ? parse.call( record, value, this.name ) : value, record, options, nested );\n        } : doUpdate;\n    }\n\n    getHook : ( value, key : string ) => any = null\n    get : ( value, key : string ) => any\n}\n\n\nfunction chainGetHooks( prevHook : GetHook, nextHook : GetHook ) : GetHook {\n    return function( value, name ) {\n        return nextHook.call( this, prevHook.call( this, value, name ), name );\n    }\n}\n\nfunction chainTransforms( prevTransform : Transform, nextTransform : Transform ) : Transform {\n    return function( next, prev, record, options ) {\n        return nextTransform.call( this, prevTransform.call( this, next, prev, record, options ), prev, record, options );\n    }\n}\n\nfunction chainChangeHandlers( prevHandler : ChangeHandler, nextHandler : ChangeHandler ) : ChangeHandler {\n    return function( next, prev, record, options ) {\n        prevHandler.call( this, next, prev, record, options );\n        nextHandler.call( this, next, prev, record, options );\n    }\n}\n\nfunction wrapIsRequired( validate ){\n    return function( record : AttributesContainer, value : any, key : string ){\n        return value ? validate.call( this, record, value, key ) : 'Required';\n    }\n}","/**\n * Type spec engine. Declare attributes using chainable syntax,\n * and returns object with spec.\n */\nimport { Transactional } from '../../transactions'\nimport { ChangeAttrHandler, AttributeOptions, Parse } from './any'\nimport {  AttributesContainer } from './updates'\nimport { EventMap, EventsDefinition, definitionDecorator, tools } from '../../object-plus'\nimport { IOEndpoint } from '../../io-tools'\n\nconst { assign } = tools;\n\nexport interface AttributeCheck {\n    ( value : any, key : string ) : boolean\n    error? : any\n}\n\nexport class ChainableAttributeSpec {\n    options : AttributeOptions;\n\n    constructor( options : AttributeOptions ) {\n        // Shallow copy options, fill it with defaults.\n        this.options = { getHooks : [], transforms : [], changeHandlers : []};\n        if( options ) assign( this.options, options );\n    }\n\n    check( check : AttributeCheck, error : any ) : ChainableAttributeSpec {\n        function validate( model, value, name ){\n            if( !check.call( model, value, name ) ){\n                const msg = error || check.error || name + ' is not valid';\n                return typeof msg === 'function' ? msg.call( model, name ) : msg;\n            }\n        }\n\n        const prev = this.options.validate;\n\n        return this.metadata({\n            validate : prev ? (\n                            function( model, value, name ){\n                                return prev( model, value, name ) || validate( model, value, name );\n                            }\n                       ) : validate\n        });\n    }\n\n    get asProp(){\n        return definitionDecorator( 'attributes', this );\n    }\n\n    get as(){ return this.asProp; }\n\n    get isRequired() : ChainableAttributeSpec {\n        return this.metadata({ isRequired : true }); \n    }\n\n    endpoint( endpoint : IOEndpoint ){\n        return this.metadata({ endpoint });\n    }\n\n    watcher( ref : string | ( ( value : any, key : string ) => void ) ) : ChainableAttributeSpec {\n        return this.metadata({ _onChange : ref });\n    }\n\n    // Attribute-specific parse transform\n    parse( fun : Parse ) : ChainableAttributeSpec {\n        return this.metadata({ parse : fun });\n    }\n\n    toJSON( fun ) : ChainableAttributeSpec {\n        return this.metadata({\n            toJSON : typeof fun === 'function' ? fun : ( fun ? ( x, k, o ) => x && x.toJSON( o ) : emptyFunction ) \n        });\n    }\n\n    // Attribute get hook.\n    get( fun ) : ChainableAttributeSpec {\n        return this.metadata({\n            getHooks : this.options.getHooks.concat( fun )\n        });\n    }\n\n    // Attribute set hook.\n    set( fun ) : ChainableAttributeSpec {\n        function handleSetHook( next, prev, record : AttributesContainer, options ) {\n            if( this.isChanged( next, prev ) ) {\n                const changed = fun.call( record, next, this.name );\n                return changed === void 0 ? prev : this.convert( changed, prev, record, options );\n            }\n\n            return prev;\n        }\n\n        return this.metadata({\n            transforms : this.options.transforms.concat( handleSetHook )\n        });\n    }\n\n    changeEvents( events : boolean ) : ChainableAttributeSpec {\n        return this.metadata({ changeEvents : events });\n    }\n\n    // Subsribe to events from an attribute.\n    events( map : EventsDefinition ) : ChainableAttributeSpec {\n        const eventMap = new EventMap( map );\n\n        function handleEventsSubscribtion( next, prev, record : AttributesContainer ){\n            prev && prev.trigger && eventMap.unsubscribe( record, prev );\n\n            next && next.trigger && eventMap.subscribe( record, next );\n        }\n\n        return this.metadata({\n            changeHandlers : this.options.changeHandlers.concat( handleEventsSubscribtion )\n        });\n    }\n\n    // Creates a copy of the spec.\n    get has() : ChainableAttributeSpec {\n        return this;\n    }\n\n    metadata( options : AttributeOptions ) : ChainableAttributeSpec {\n        const cloned = new ChainableAttributeSpec( this.options );\n        assign( cloned.options, options );\n        return cloned;\n    }\n\n    value( x ) : ChainableAttributeSpec {\n        return this.metadata({ value : x, hasCustomDefault : true });\n    }\n\n    static from( spec : any ) : ChainableAttributeSpec {\n        let attrSpec : ChainableAttributeSpec;\n\n        if( typeof spec === 'function' ) {\n            attrSpec = spec.has;\n        }\n        else if( spec && spec instanceof ChainableAttributeSpec ) {\n            attrSpec = spec;\n        }\n        else{\n            // Infer type from value.\n            const type = inferType( spec );\n    \n            // Transactional types inferred from values must have shared type. \n            if( type && type.prototype instanceof Transactional ){\n                attrSpec = (<any>type).shared.value( spec );\n            }\n            // All others will be created in regular way.\n            else{\n                attrSpec = new ChainableAttributeSpec({ type : type, value : spec, hasCustomDefault : true });\n            }\n        }\n    \n        return attrSpec;\n    }\n}\n\nfunction emptyFunction(){}\n\nexport function type( this : void, spec : ChainableAttributeSpec | Function ) : ChainableAttributeSpec {\n    return spec instanceof ChainableAttributeSpec ? spec : new ChainableAttributeSpec( {\n        type : spec,\n        value : spec._attribute.defaultValue,\n        hasCustomDefault : spec._attribute.defaultValue !== void 0\n    } );;\n}\n\ndeclare global {\n    interface Function{\n        value : ( x : any ) => ChainableAttributeSpec;\n        isRequired : ChainableAttributeSpec;\n        asProp : PropertyDecorator\n        has : ChainableAttributeSpec;\n    }\n}\n\nFunction.prototype.value = function( x ) {\n    return new ChainableAttributeSpec( { type : this, value : x, hasCustomDefault : true } );\n};\n\nObject.defineProperty( Function.prototype, 'isRequired', {\n    get() { return this._isRequired || this.has.isRequired; },\n    set( x ){ this._isRequired = x; }\n});\n\nObject.defineProperty( Function.prototype, 'asProp', {\n    get() { return this.has.asProp; },\n});\n\nObject.defineProperty( Function.prototype, 'has', {\n    get() {\n        // workaround for sinon.js and other libraries overriding 'has'\n        return this._has || type( this );\n    },\n\n    set( value ) { this._has = value; }\n} );\n\nfunction inferType( value : {} ) : Function {\n    switch( typeof value ) {\n        case 'number' :\n            return Number;\n        case 'string' :\n            return String;\n        case 'boolean' :\n            return Boolean;\n        case 'undefined' :\n            return void 0;\n        case 'object' :\n            return value ? <any> value.constructor : void 0;\n    }\n}\n","/**\n * Date attribute type.\n * \n * Implements validation, cross-browser compatibility fixes, variety of Date serialization formats,\n * and optimized update pipeline.\n */\nimport { AnyType } from './any'\nimport { tools } from '../../object-plus'\nimport { AttributesContainer } from './updates'\nimport { TransactionOptions } from '../../transactions'\nimport { ChainableAttributeSpec } from './attrDef'\n\nconst DateProto = Date.prototype;\n\n// Date Attribute\n/** @private */\nexport class DateType extends AnyType {\n    create(){\n        return new Date();\n    }\n    \n    convert( next : any, a, record ){\n        if( next == null || next instanceof Date ) return next;\n\n        const date = new Date( next ),\n              timestamp = date.getTime();\n\n        if( timestamp !== timestamp ){\n            this._log( 'warn', 'assigned with Invalid Date', next, record );\n        }\n\n        return date;\n    }\n\n    validate( model, value, name ) {\n        if( value != null ){\n            const timestamp = value.getTime(); \n            if( timestamp !== timestamp ) return name + ' is Invalid Date';\n        }\n    }\n\n    toJSON( value ) { return value && value.toISOString(); }\n\n    isChanged( a, b ) { return ( a && a.getTime() ) !== ( b && b.getTime() ); }\n\n    doInit( value, record : AttributesContainer, options : TransactionOptions ){\n        // Date don't have handleChanges step.\n        return this.transform( value === void 0 ? this.defaultValue() : value, void 0, record, options );\n    }\n\n    doUpdate( value, record, options, nested ){\n        const   { name } = this,\n                { attributes } = record,\n                prev = attributes[ name ];\n        \n        // Date don't have handleChanges step.\n        return this.isChanged( prev , attributes[ name ] = this.transform( value, prev, record, options ) );\n    }\n\n    clone( value ) { return value && new Date( value.getTime() ); }\n    dispose(){}\n}\n\nDate._attribute = DateType;\n\nconst msDatePattern  = /\\/Date\\(([0-9]+)\\)\\//;\n\nexport class MSDateType extends DateType {\n    convert( next ) {\n        if( typeof next === 'string' ){\n            const msDate = msDatePattern.exec( next );\n            if( msDate ){\n                return new Date( Number( msDate[ 1 ] ) );\n            }\n        }\n\n        return DateType.prototype.convert.apply( this, arguments );\n    }\n\n    toJSON( value ) { return value && `/Date(${ value.getTime() })/`; }\n}\n\nexport class TimestampType extends DateType {\n    toJSON( value ) { return value && value.getTime(); }\n}\n\ndeclare global {\n    interface DateConstructor {\n        microsoft : ChainableAttributeSpec\n        timestamp :  ChainableAttributeSpec\n    }\n}\n\nObject.defineProperties( Date, {\n    microsoft : {\n        get(){\n            return new ChainableAttributeSpec({\n                type : Date,\n                _attribute : MSDateType\n            })\n        }\n    },\n\n    timestamp : {\n        get(){\n            return new ChainableAttributeSpec({\n                type : Date,\n                _attribute : TimestampType\n            })\n        }\n    }\n});\n\n// If ISO date is not supported by date constructor (such as in Safari), polyfill it.\nfunction supportsDate( date ){\n    return !isNaN( ( new Date( date ) ).getTime() );\n}\n\nif( !supportsDate('2011-11-29T15:52:30.5') ||\n    !supportsDate('2011-11-29T15:52:30.52') ||\n    !supportsDate('2011-11-29T15:52:18.867') ||\n    !supportsDate('2011-11-29T15:52:18.867Z') ||\n    !supportsDate('2011-11-29T15:52:18.867-03:30') ){\n\n    DateType.prototype.convert = function( value ){\n        return value == null || value instanceof Date ? value : new Date( safeParseDate( value ) );\n    }\n}\n\nconst numericKeys    = [ 1, 4, 5, 6, 7, 10, 11 ],\n      isoDatePattern = /^(\\d{4}|[+\\-]\\d{6})(?:-(\\d{2})(?:-(\\d{2}))?)?(?:T(\\d{2}):(\\d{2})(?::(\\d{2})(?:\\.(\\d{3}))?)?(?:(Z)|([+\\-])(\\d{2})(?::(\\d{2}))?)?)?$/;\n\nfunction safeParseDate( date : string ) : number {\n    var timestamp, struct : any[], minutesOffset = 0;\n\n    if( ( struct = isoDatePattern.exec( date )) ) {\n        // avoid NaN timestamps caused by undefined values being passed to Date.UTC\n        for( var i = 0, k; ( k = numericKeys[ i ] ); ++i ) {\n            struct[ k ] = +struct[ k ] || 0;\n        }\n\n        // allow undefined days and months\n        struct[ 2 ] = (+struct[ 2 ] || 1) - 1;\n        struct[ 3 ] = +struct[ 3 ] || 1;\n\n        if( struct[ 8 ] !== 'Z' && struct[ 9 ] !== undefined ) {\n            minutesOffset = struct[ 10 ] * 60 + struct[ 11 ];\n\n            if( struct[ 9 ] === '+' ) {\n                minutesOffset = 0 - minutesOffset;\n            }\n        }\n\n        timestamp =\n            Date.UTC( struct[ 1 ], struct[ 2 ], struct[ 3 ], struct[ 4 ], struct[ 5 ] + minutesOffset, struct[ 6 ],\n                    struct[ 7 ] );\n    }\n    else {\n        timestamp = Date.parse( date );\n    }\n\n    return timestamp;\n}","/**\n * Built-in JSON types attributes: Object, Array, Number, String, Boolean, and immutable class.\n * \n * Adds type assertions, default validation, and optimized update pipeline.\n */\n\nimport { AnyType } from './any'\nimport { tools } from '../../object-plus'\nimport { AttributesContainer } from './updates'\nimport { TransactionOptions } from '../../transactions'\n\n/**\n * Custom class must be immutable class which implements toJSON() method\n * with a constructor taking json.\n */\nclass ImmutableClassType extends AnyType {\n    type : new ( value? : any ) => {}\n\n    create(){\n        return new this.type();\n    }\n\n    convert( next : any ) : any {\n        return next == null || next instanceof this.type ? next : new this.type( next );\n    }\n\n    toJSON( value, key? : string, options? : object ){\n        return value && value.toJSON ? value.toJSON( options ) : value;\n    }\n\n    clone( value ) {\n        return new this.type( this.toJSON( value ) );\n    }\n\n    isChanged( a, b ){\n        return a !== b;\n    }\n}\n\nFunction.prototype._attribute = ImmutableClassType;\n\n/**\n * Optimized attribute of primitive type.\n * \n * Primitives has specialized simplified pipeline.\n */\nexport class PrimitiveType extends AnyType {\n    type : NumberConstructor | StringConstructor | BooleanConstructor\n\n    dispose(){}\n    create() { return this.type(); }\n\n    toJSON( value ) { return value; }\n\n    convert( next ) { return next == null ? next : this.type( next ); }\n\n    isChanged( a, b ) { return a !== b; }\n\n    clone( value ) { return value; }\n\n    doInit( value, record : AttributesContainer, options : TransactionOptions ){\n        return this.transform( value === void 0 ? this.value : value, void 0, record, options );\n    }\n\n    doUpdate( value, record, options, nested ){\n        const   { name } = this,\n                { attributes } = record,\n                prev = attributes[ name ];\n        \n        return prev !== ( attributes[ name ] = this.transform( value, prev, record, options ) );\n    }\n\n    initialize(){\n        if( !this.options.hasCustomDefault ){\n            this.value = this.type();\n        }\n    }\n}\n\nBoolean._attribute = String._attribute = PrimitiveType;\n\n// Number type with special validation algothim.\n/** @private */ \nexport class NumericType extends PrimitiveType {\n    type : NumberConstructor\n\n    create(){\n        return 0;\n    }\n\n    convert( next, prev?, record? ) {\n        const num = next == null ? next : this.type( next );\n\n        if( num !== num ){\n            this._log( 'warn', 'assigned with Invalid Number', next, record );\n        }\n        \n        return num;\n    }\n\n    validate( model, value, name ) {\n        // Whatever is not symmetrically serializable to JSON, is not valid by default.\n        if( value != null && !isFinite( value ) ) {\n            return name + ' is not valid number';\n        }\n    }\n}\n\nNumber._attribute = NumericType;\n\n/**\n * Add Number.integer attrubute type\n */\ndeclare global {\n    interface NumberConstructor {\n        integer : Function\n    }\n\n    interface Window {\n        Integer : Function;\n    }\n}\n\nfunction Integer( x ){\n    return x ? Math.round( x ) : 0;\n}\nInteger._attribute = NumericType;\nNumber.integer = Integer;\n\n\nif( typeof window !== 'undefined' ){\n    window.Integer = Number.integer;\n}\n\n/**\n * Compatibility wrapper for Array type.\n * @private\n */ \nexport class ArrayType extends AnyType {\n    toJSON( value ) { return value; }\n    dispose(){}\n    create(){ return []; }\n\n    convert( next, prev, record ) {\n        // Fix incompatible constructor behaviour of Array...\n        if( next == null || Array.isArray( next ) ) return next;\n\n        this._log( 'warn', 'assignment of non-array to Array attribute is ignored', next, record );\n\n        return [];\n    }\n\n    clone( value ){\n        return value && value.slice();\n    }\n}\n\nArray._attribute = ArrayType;\n\nexport class ObjectType extends AnyType {\n    create(){ return {}; }\n\n    convert( next, prev, record ) {\n        if( next == null || typeof next === 'object' ) return next;\n                \n        this._log( 'warn', 'assignment of non-object to Object attribute is ignored', next, record );\n        return {};\n    }\n}\n\nObject._attribute = ObjectType;\n\nexport function doNothing(){}\n\nexport class FunctionType extends AnyType {\n    // Functions are not serialized.\n    toJSON( value ) { return void 0; }\n    create(){ return doNothing; }\n    dispose(){}\n\n    convert( next, prev, record ) {\n        // Fix incompatible constructor behaviour of Function...\n        if( next == null || typeof next === 'function' ) return next;\n\n        this._log( 'warn', 'assigned with non-function', next, record );\n\n        return doNothing;\n    }\n\n    // Functions are not cloned.\n    clone( value ){ return value; }\n}\n\nFunction._attribute = FunctionType;","import { AnyType } from './any'\nimport { AttributesContainer, ConstructorOptions } from './updates'\nimport { ItemsBehavior, Owner, transactionApi, Transactional, TransactionOptions } from '../../transactions' \nimport { tools, eventsApi } from '../../object-plus'\n\nconst { on, off } = eventsApi,\n    { free, aquire } = transactionApi;\n\n/************************\n * Shared attribute definition.\n * - Not serialized.\n * - Listening to the changes.\n * - Doesn't take ownership when assigned with object of proper type.\n * - Takes ownership on objects which are converted.\n */\n\nconst shareAndListen = ItemsBehavior.listen | ItemsBehavior.share;\n\n/** @private */\nexport class SharedType extends AnyType {\n    type : typeof Transactional\n\n     doInit( value, record : AttributesContainer, options : ConstructorOptions ){\n        const v = options.clone ? this.clone( value, record ) : (\n            value === void 0 ? this.defaultValue() : value\n        );\n\n        const x = this.transform( v, void 0, record, options );\n        this.handleChange( x, void 0, record, options );\n        return x;\n    }\n\n    doUpdate( value, record, options, nested : any[] ){ // Last to things can be wrapped to an object, either transaction or ad-hoc\n        const key = this.name, { attributes } = record; \n        const prev = attributes[ key ];\n        let update;\n\n        // This can be moved to transactional attribute. And chained with the rest.\n        if( update = this.canBeUpdated( prev, value, options ) ) { // todo - skip empty updates.\n            const nestedTransaction = prev._createTransaction( update, options );\n            if( nestedTransaction ){\n                if( nested ){\n                    nested.push( nestedTransaction );\n                }\n                else{\n                    nestedTransaction.commit( record );\n                }\n\n                if( this.propagateChanges ) return true;\n            }\n\n            return false;\n        }\n\n        const next = this.transform( value, prev, record, options );\n        attributes[ key ] = next;\n\n        if( this.isChanged( next, prev ) ) { // Primitives and nested comparison can be inlined.\n            // Do the rest of the job after assignment\n            this.handleChange( next, prev, record, options );\n\n            return true;\n        }\n\n        return false;\n    }\n\n    clone( value : Transactional, record : AttributesContainer ) : Transactional {\n        // References are not cloned.\n        if( !value || value._owner !== record ) return value;\n\n        // Implicitly created objects are cloned.\n        const clone = value.clone();\n        aquire( record, clone, this.name );\n        return clone;\n    }\n\n    // Do not serialize by default.\n    toJSON(){}\n\n    canBeUpdated( prev : Transactional, next : any, options : TransactionOptions ) : any {\n        // If an object already exists, and new value is of incompatible type, let object handle the update.\n        if( prev && next != null && !( next instanceof this.type ) ){\n            return next;\n        }\n    }\n\n    convert( next : any, prev : any, record : AttributesContainer, options : TransactionOptions ) : Transactional {\n        if( next == null || next instanceof this.type ) return next;\n\n        // Convert type using implicitly created rtransactional object.\n        const implicitObject = new ( this.type as any )( next, options, shareAndListen );\n\n        // To prevent a leak, we need to take an ownership on it.\n        aquire( record, implicitObject, this.name );\n\n        return implicitObject;\n    }\n\n    // Refs are always valid.\n    validate( model, value, name ){}\n\n    // They are always created as null.\n    create() : Transactional {\n        return null;\n    }\n\n    // Listening to the change events\n    _handleChange( next : Transactional, prev : Transactional, record : AttributesContainer, options ){\n        if( prev ){\n            // If there was an implicitly created object, remove an ownership.\n            if( prev._owner === record ){\n                free( record, prev );\n                options.unset || prev.dispose();\n            }\n            else{\n                off( prev, prev._changeEventName, this._onChange, record );\n            }\n        }  \n \n        if( next ){\n            // No need to take an ownership for an implicit object - already done in convert or clone.\n            if( next._owner !== record ){\n                on( next, next._changeEventName, this._onChange, record );\n            }\n        } \n    }\n\n    dispose( record : AttributesContainer, value : Transactional ){\n        if( value ){\n            this.handleChange( void 0, value, record, {} );\n        }\n    }\n\n    _onChange : ( child : Transactional, options : TransactionOptions, initiator : Transactional ) => void \n\n    initialize( options ){\n        // Create change event handler which knows current attribute name. \n        const attribute = this;\n        this._onChange = this.propagateChanges ? function( child, options, initiator ){\n            this === initiator || this.forceAttributeChange( attribute.name, options );\n        } : ignore;\n\n        options.changeHandlers.unshift( this._handleChange );\n    }\n}\n\nfunction ignore(){}","import { tools as _, eventsApi } from '../../object-plus'\n\nexport * from './any'\nexport * from './owned'\nexport * from './date'\nexport * from './basic'\nexport * from './shared'\nexport * from './updates'\nexport * from './attrDef'\n\nimport { AnyType } from './any'\nimport { ConstructorsMixin, constructorsMixin } from './updates'\nimport { ChainableAttributeSpec } from './attrDef'\nimport { CompiledReference } from '../../traversable'\nimport { IOEndpoint } from '../../io-tools'\n\nexport interface RecordAttributesMixin extends ConstructorsMixin {\n    // Attributes descriptors\n    _attributes : AttributeDescriptors\n    _attributesArray : AnyType[]\n    \n    // Attribute's property descriptors\n    properties : PropertyDescriptorMap\n\n    // Event map for record's local events.\n    _localEvents? : eventsApi.EventMap,\n\n    _endpoints : { [ name : string ] : IOEndpoint }\n}\n\nexport interface AttributeDescriptors {\n    [ name : string ] : AnyType\n}\n\n// Create record mixin from the given record's attributes definition\nexport default function( attributesDefinition : object, baseClassAttributes : AttributeDescriptors ) : RecordAttributesMixin {\n    const myAttributes = _.transform( {} as AttributeDescriptors, attributesDefinition, createAttribute ),\n          allAttributes = _.defaults( {} as AttributeDescriptors, myAttributes, baseClassAttributes );\n\n    const ConstructorsMixin = constructorsMixin( allAttributes );\n\n    return {\n        ...ConstructorsMixin,\n        _attributes : new ConstructorsMixin.AttributesCopy( allAttributes ),\n        _attributesArray : Object.keys( allAttributes ).map( key => allAttributes[ key ] ),\n        properties : _.transform( <PropertyDescriptorMap>{}, myAttributes, x => x.createPropertyDescriptor() ),\n        ...localEventsMixin( myAttributes ),\n        _endpoints : _.transform( {}, allAttributes, attrDef => attrDef.options.endpoint )\n    }            \n}\n\n// Create attribute from the type spec.\nexport function createAttribute( spec : any, name : string ) : AnyType {\n    return AnyType.create( ChainableAttributeSpec.from( spec ).options, name );\n}\n\nexport function createSharedTypeSpec( Constructor : Function, Attribute : typeof AnyType ){\n    if( !Constructor.hasOwnProperty( 'shared' ) ){\n        Object.defineProperty( Constructor, 'shared', {\n            get(){\n                return new ChainableAttributeSpec({\n                    value : null,\n                    type : Constructor,\n                    _attribute : Attribute\n                });\n            }\n        });\n    }\n}\n\ninterface LocalEventsMixin {\n    _localEvents? : eventsApi.EventMap\n}\n\nfunction localEventsMixin( attrSpecs : AttributeDescriptors ) : LocalEventsMixin {\n    let _localEvents : eventsApi.EventMap;\n\n    for( var key in attrSpecs ){\n        const attribute = attrSpecs[ key ],\n            { _onChange } = attribute.options; \n\n        if( _onChange ){\n            _localEvents || ( _localEvents = new eventsApi.EventMap() );\n\n            _localEvents.addEvent( 'change:' + key,\n                typeof _onChange === 'string' ?\n                    createWatcherFromRef( _onChange, key ) : \n                    wrapWatcher( _onChange, key ) );\n        }\n    }\n\n    return _localEvents ? { _localEvents } : {};\n}\n\nfunction wrapWatcher( watcher, key ){\n    return function( record, value ){\n        watcher.call( record, value, key );\n    } \n}\n\nfunction createWatcherFromRef( ref : string, key : string ){\n    const { local, resolve, tail } = new CompiledReference( ref, true );\n    return local ?\n        function( record, value ){\n            record[ tail ]( value, key );\n        } :\n        function( record, value ){\n            resolve( record )[ tail ]( value, key );\n        }\n}","/**\n * Record core implementing transactional updates.\n * The root of all definitions. \n */\n\nimport { tools, eventsApi, Mixable, definitions, mixins,  mixinRules, define } from '../object-plus'\n\nimport { CloneOptions, Transactional, TransactionalDefinition, Transaction, TransactionOptions, Owner } from '../transactions'\nimport { ChildrenErrors } from '../validation'\n\nimport { Collection } from '../collection'\n\nimport { AnyType, AggregatedType, setAttribute, UpdateRecordMixin, \n    AttributesValues, AttributesContainer,\n    ConstructorsMixin, AttributesConstructor, AttributesCopyConstructor } from './attributes'\n\nimport { IORecord, IORecordMixin } from './io-mixin'\nimport { IOPromise, IOEndpoint } from '../io-tools'\n\nconst { assign, isEmpty, log } = tools;\n\n/*******************************************************\n * Record core implementation\n */\n\nexport interface ConstructorOptions extends TransactionOptions{\n    clone? : boolean\n}\n\n// Client unique id counter\nlet _cidCounter : number = 0;\n\n/***************************************************************\n * Record Definition as accepted by Record.define( definition )\n */\nexport interface RecordDefinition extends TransactionalDefinition {\n    idAttribute? : string\n    attributes? : AttributesValues\n    collection? : object\n    Collection? : typeof Transactional\n}\n\n@define({\n    // Default client id prefix \n    cidPrefix : 'm',\n\n    // Name of the change event\n    _changeEventName : 'change',\n\n    // Default id attribute name\n    idAttribute : 'id'\n})\n@definitions({\n    defaults : mixinRules.merge,\n    attributes : mixinRules.merge,\n    collection : mixinRules.merge,\n    Collection : mixinRules.value,\n    idAttribute : mixinRules.protoValue\n})\nexport class Record extends Transactional implements IORecord, AttributesContainer {\n    // Hack\n    static onDefine( definition, BaseClass ){}\n\n    static Collection : typeof Collection;\n    static DefaultCollection : typeof Collection;\n\n    static from : ( collectionReference : any ) => any;\n    \n    static defaults( attrs : AttributesValues ) : typeof Record {\n        return <any>this.extend({ attributes : attrs });\n    }\n    \n    static attributes : AttributesValues\n\n    /********************\n     * IO Methods\n     */\n     _endpoints : { [ name : string ] : IOEndpoint }\n\n     // Save record\n     save( options? : object ) : IOPromise<this> { throw new Error( 'Implemented by mixin' ); }\n\n     // Destroy record\n     destroy( options? : object ) : IOPromise<this> { throw new Error( 'Implemented by mixin' ); }\n\n    /***********************************\n     * Core Members\n     */\n    // Previous attributes\n    _previousAttributes : {}\n\n    previousAttributes(){ return new this.AttributesCopy( this._previousAttributes ); } \n\n    // Current attributes    \n    attributes : AttributesValues\n\n    // Polymorphic accessor for aggregated attribute's canBeUpdated().\n    get __inner_state__(){ return this.attributes; }\n\n    // Lazily evaluated changed attributes hash\n    _changedAttributes : AttributesValues\n\n    get changed(){\n        let changed = this._changedAttributes;\n\n        if( !changed ){\n            const prev = this._previousAttributes;\n            changed = {};\n\n            const { _attributes, attributes } = this;\n\n            for( let attr of this._attributesArray ){\n                const key = attr.name,\n                    value = attributes[ key ];\n\n                if( attr.isChanged( value, prev[ key ] ) ){\n                    changed[ key ] = value;\n                }\n            }\n\n            this._changedAttributes = changed;\n        }\n\n        return changed;    \n    }\n\n    changedAttributes( diff? : {} ) : boolean | {} {\n        if( !diff ) return this.hasChanged() ? assign( {}, this.changed ) : false;\n\n        var val, changed : {} | boolean = false,\n            old          = this._transaction ? this._previousAttributes : this.attributes,\n            attrSpecs    = this._attributes;\n\n        for( var attr in diff ){\n            if( !attrSpecs[ attr ].isChanged( old[ attr ], ( val = diff[ attr ] ) ) ) continue;\n            (changed || (changed = {}))[ attr ] = val;\n        }\n\n        return changed;        \n    }\n\n    hasChanged( key? : string ) : boolean {\n        const { _previousAttributes } = this;\n        if( !_previousAttributes ) return false;\n\n        return key ?\n                this._attributes[ key ].isChanged( this.attributes[ key ], _previousAttributes[ key ] ) :\n                !isEmpty( this.changed );\n    }\n\n    previous( key : string ) : any {\n        if( key ){\n            const { _previousAttributes } = this;\n            if( _previousAttributes ) return _previousAttributes[ key ];\n        }\n        \n        return null;\n    }\n\n    isNew() : boolean {\n        return this.id == null;\n    }\n\n    has( key : string ) : boolean {\n        return this[ key ] != void 0;\n    }\n\n    // Return attribute value, setting an attribute to undefined.\n    // TODO: If attribute was aggregated, don't dispose it.\n    unset( key : string, options? ) : any {\n        const value = this[ key ];\n        this.set({ [ key ] : void 0 }, { unset : true, ...options });\n        return value;\n    }\n\n    // Undocumented. Move to NestedTypes?\n    clear( options? ) : this {\n        const nullify = options && options.nullify;\n\n        this.transaction( () =>{\n            this.forEachAttr( this.attributes, ( value, key ) => this[ key ] = nullify ? null : void 0 );\n        }, options );\n\n        return this;\n    }\n\n    // Returns Record owner skipping collections. TODO: Move out\n    getOwner() : Owner {\n        const owner : any = this._owner;\n\n        // If there are no key, owner must be transactional object, and it's the collection.\n        // We don't expect that collection can be the member of collection, so we're skipping just one level up. An optimization.\n        return this._ownerKey ? owner : owner && owner._owner;\n    }\n\n    /***********************************\n     * Identity managements\n     */\n\n    // Id attribute name ('id' by default)\n    idAttribute : string;\n\n    // Fixed 'id' property pointing to id attribute\n    get id() : string | number { return this.attributes[ this.idAttribute ]; }\n    set id( x : string | number ){ setAttribute( this, this.idAttribute, x ); }\n\n    /***********************************\n     * Dynamically compiled stuff\n     */\n\n    // Attributes specifications \n    _attributes : { [ key : string ] : AnyType }\n    _attributesArray : AnyType[]\n\n    // Attributes object copy constructor\n    Attributes : AttributesConstructor\n    AttributesCopy : AttributesCopyConstructor\n\n    // forEach function for traversing through attributes, with protective default implementation\n    // Overriden by dynamically compiled loop unrolled function in define.ts\n    forEachAttr( attrs : {}, iteratee : ( value : any, key? : string, spec? : AnyType ) => void ) : void {\n        const { _attributes } = this;\n        let unknown : string[];\n\n        for( let name in attrs ){\n            const spec = _attributes[ name ];\n\n            if( spec ){\n                iteratee( attrs[ name ], name, spec );\n            }\n            else{\n                unknown || ( unknown = [] );\n                unknown.push( `'${ name }'` );\n            }\n        }\n\n        if( unknown ){\n            this._log( 'warn', `attributes ${ unknown.join(', ')} are not defined`,{\n                attributes : attrs\n            } );\n        }\n    }\n\n    each( iteratee : ( value? : any, key? : string ) => void, context? : any ){\n        const fun = context !== void 0 ? ( v, k ) => iteratee.call( context, v, k ) : iteratee,\n            { attributes } = this;\n\n        for( const key in this.attributes ){\n            const value = attributes[ key ];\n            if( value !== void 0 ) fun( value, key );\n        }\n    }\n\n    // Get array of attribute keys (Record) or record ids (Collection) \n    keys() : string[] {\n        const keys : string[] = [];\n\n        this.each( ( value, key ) => value === void 0 || keys.push( key ) );\n\n        return keys;\n    }\n\n    // Get array of attribute values (Record) or records (Collection)\n    values() : any[] {\n        return this.map( value => value );\n    }\n\n    // Create record default values, optionally augmenting given values.\n    defaults( values = {} ){\n        const defaults = {},\n            { _attributesArray } = this;\n\n        for( let attr of _attributesArray ){\n            const key = attr.name,\n            value = values[ key ];\n\n            defaults[ key ] = value === void 0 ? attr.defaultValue() : value;\n        }\n\n        return defaults;\n    }\n\n    /***************************************************\n     * Record construction\n     */\n    // Create record, optionally setting an owner\n    constructor( a_values? : {}, a_options? : ConstructorOptions ){\n        super( _cidCounter++ );\n        this.attributes = {};\n        \n        const options = a_options || {},\n              values = ( options.parse ? this.parse( a_values, options ) :  a_values ) || {};\n\n        if( log.level > 1 ) typeCheck( this, values );\n\n        this._previousAttributes = this.attributes = new this.Attributes( this, values, options );\n\n        this.initialize( a_values, a_options );\n\n        if( this._localEvents ) this._localEvents.subscribe( this, this );\n    }\n\n    // Initialization callback, to be overriden by the subclasses \n    initialize( values?, options? ){}\n\n    // Deeply clone record, optionally setting new owner.\n    clone( options : CloneOptions = {} ) : this {\n        const copy : this = new (<any>this.constructor)( this.attributes, { clone : true } );\n        \n        if( options.pinStore ) copy._defaultStore = this.getStore();\n\n        return copy;\n    }\n\n    // Deprecated, every clone is the deep one now.\n    deepClone() : this { return this.clone() };\n\n    // Validate attributes.\n    _validateNested( errors : ChildrenErrors ) : number {\n        var length    = 0;\n\n        this.forEachAttr( this.attributes, ( value, name, attribute ) => {\n            const error = attribute.validate( this, value, name );\n\n            if( error ){\n                errors[ name ] = error;\n                length++;\n            }\n        } );\n\n        return length;\n    }\n\n    // Get attribute by key\n    get( key : string ) : any {\n        return this[ key ];\n    }\n\n    /**\n     * Serialization control\n     */\n\n    // Default record-level serializer, to be overriden by subclasses \n    toJSON( options? : object ) : any {\n        const json = {};\n\n        this.forEachAttr( this.attributes, ( value, key : string, { toJSON } ) =>{\n            // If attribute serialization is not disabled, and its value is not undefined...\n            if( value !== void 0 ){\n                // ...serialize it according to its spec.\n                const asJson = toJSON.call( this, value, key, options );\n\n                // ...skipping undefined values. Such an attributes are excluded.\n                if( asJson !== void 0 ) json[ key ] = asJson; \n            }\n        });\n\n        return json;\n    }\n    \n    // Default record-level parser, to be overriden by the subclasses.\n    parse( data, options? : TransactionOptions ){\n        return data;\n    }\n\n    // DEPRECATED: Attributes-level parse. Is moved to attribute descriptors.\n    _parse( data ){ return data; }\n\n    /**\n     * Transactional control\n     */\n\n    deepSet( name : string, value : any, options? ){\n        // Operation might involve series of nested object updates, thus it's wrapped in transaction.\n        this.transaction( () => {\n            const path  = name.split( '.' ),\n                l     = path.length - 1,\n                attr  = path[ l ];\n\n            let model = this;\n\n            // Locate the model, traversing the path.\n            for( let i = 0; i < l; i++ ){\n                const key = path[ i ];\n\n                // There might be collections in path, so use `get`.\n                let next    = model.get ? model.get( key ) : model[ key ];\n\n                // Create models, if they are not exist.\n                if( !next ){\n                    const attrSpecs = model._attributes;\n                    if( attrSpecs ){\n                        // If current object is model, create default attribute\n                        var newModel = attrSpecs[ key ].create();\n\n                        // If created object is model, nullify attributes when requested\n                        if( options && options.nullify && newModel._attributes ){\n                            newModel.clear( options );\n                        }\n\n                        model[ key ] = next = newModel;\n                    }\n                    // Silently fail in other case.\n                    else return;\n                }\n                \n                model = next;\n            }\n\n            // Set model attribute.\n            if( model.set ){\n                model.set({ [ attr ] : value }, options );\n            }\n            else{\n                model[ attr ] = value;\n            }\n        });\n\n        return this;\n    }\n            \n    // Returns owner without the key (usually it's collection)\n    get collection() : any {\n        return this._ownerKey ? null : this._owner;\n    }\n\n    // Dispose object and all childrens\n    dispose(){\n        if( this._disposed ) return;\n        \n        this.forEachAttr( this.attributes, ( value, key, attribute ) => {\n            attribute.dispose( this, value );\n        });\n\n        super.dispose();\n    }\n\n    _log( level : tools.LogLevel, text : string, props : object ) : void {\n        tools.log( level, '[Record] ' + text, {\n            'Record' : this,\n            'Attributes definition:' : this._attributes,\n            ...props\n        });\n    }\n\n    getClassName() : string {\n        return super.getClassName() || 'Record';\n    }\n\n    // Dummies to \n    _createTransaction( values : object, options : TransactionOptions ) : Transaction { return void 0; }\n    // Simulate attribute change \n    forceAttributeChange : ( key : string, options : TransactionOptions ) => void\n    _onChildrenChange : ( child : Transactional, options : TransactionOptions ) => void\n};\n\nassign( Record.prototype, UpdateRecordMixin, IORecordMixin );\n\n/***********************************************\n * Helper functions\n */\n\nclass BaseRecordAttributes {\n    id : string | number\n\n    constructor( record : Record, x : AttributesValues, options : TransactionOptions ) {\n        this.id = x.id;\n    }\n}\n\nRecord.prototype.Attributes = BaseRecordAttributes;\n\nclass BaseRecordAttributesCopy {\n    id : string | number\n\n    constructor( x : AttributesValues ) {\n        this.id = x.id;\n    }\n}\n\nRecord.prototype.AttributesCopy = BaseRecordAttributesCopy;\n\nconst IdAttribute = AnyType.create({ value : void 0 }, 'id' );\nRecord.prototype._attributes = { id : IdAttribute };\nRecord.prototype._attributesArray = [ IdAttribute ];\nRecord._attribute = AggregatedType;\n\nimport { shouldBeAnObject } from './attributes'\n\nfunction typeCheck( record : Record, values : object ){\n    if( shouldBeAnObject( record, values ) ){\n        const { _attributes } = record;\n        let unknown : string[];\n\n        for( let name in values ){\n            if( !_attributes[ name ] ){\n                unknown || ( unknown = [] );\n                unknown.push( `'${ name }'` );\n            }\n        }\n\n        if( unknown ){\n            record._log( 'warn', `undefined attributes ${ unknown.join(', ')} are ignored.`, { values } );\n        }\n    }\n}","import { Record, RecordDefinition } from './record'\nimport { Mixable, tools, predefine, define, MixinsState } from '../object-plus'\nimport compile, { ChainableAttributeSpec } from './attributes'\nimport { Transactional } from '../transactions'\n\nimport { createSharedTypeSpec, AggregatedType, MSDateType, TimestampType, NumericType, SharedType } from './attributes'\n\nexport * from './attributes'\nexport { Record }\n\nconst { assign, defaults, omit, getBaseClass } = tools;\n\nRecord.onExtend = function( this : typeof Record, BaseClass : typeof Record ){\n    Transactional.onExtend.call( this, BaseClass );\n\n    // Create the default collection\n    const Class = this;\n\n    @predefine class DefaultCollection extends BaseClass.Collection<any> {\n        static model = Class;\n    }\n\n    this.DefaultCollection = DefaultCollection;\n\n    // If there are no collection defined in statics, use the default collection.\n    // It will appear in onDefine's definition, overriding all other settings.\n    if( Class.Collection === BaseClass.Collection ){\n        this.Collection = DefaultCollection;\n    }\n\n    // Create Class.shared modifier\n    createSharedTypeSpec( this, SharedType );\n}\n\nRecord.onDefine = function( definition : RecordDefinition, BaseClass : typeof Record ){\n    const baseProto : Record = BaseClass.prototype;\n\n    // Compile attributes spec, creating definition mixin.\n    const { properties, _localEvents, ...dynamicMixin } = compile( this.attributes = getAttributes( definition ), baseProto._attributes );\n    assign( this.prototype, dynamicMixin );\n    \n    definition.properties = defaults( definition.properties || {}, properties );\n    definition._localEvents = _localEvents;\n    \n    Transactional.onDefine.call( this, definition, BaseClass );\n\n    // Finalize the definition of the default collection.\n    this.DefaultCollection.define( definition.collection || {} );\n\n    // assign collection from the definition.\n    this.Collection = definition.Collection;\n    this.Collection.prototype.model = this;\n\n    if( definition.endpoint ) this.Collection.prototype._endpoint = definition.endpoint;    \n}\n\nRecord._attribute = AggregatedType;\ncreateSharedTypeSpec( Record, SharedType );\n\nfunction getAttributes({ defaults, attributes, idAttribute } : RecordDefinition ) {\n    const definition = attributes || defaults || {};\n    \n    // If there is an undeclared idAttribute, add its definition as untyped generic attribute.\n    if( idAttribute && !( idAttribute in definition ) ){\n        definition[ idAttribute ] = void 0;\n    }\n\n    return definition;\n}\n\ndeclare var Reflect;\n\nexport function attr( proto : object, attrName : string ) : void;\nexport function attr( spec : any ) : PropertyDecorator;\nexport function attr( proto, attrName? : string ) : any {\n    if( attrName ){\n        // Called without the spec. Extract the type.\n        if( typeof Reflect !== 'undefined' && Reflect.getMetadata ){\n            Reflect\n                .getMetadata( \"design:type\", proto, attrName )\n                .asProp( proto, attrName );\n        }\n        else{\n            proto._log( 'error', 'Add import \"reflect-metadata\"; as the first line of your app.' );\n        }\n    }\n    else{\n        return ChainableAttributeSpec.from( proto ).asProp;\n    }\n}\n\nexport function prop( spec ) : any {\n    return spec.asProp;\n}","import { Record } from '../record'\nimport { Owner, Transaction, ItemsBehavior,\n        TransactionOptions, Transactional, transactionApi } from '../transactions'\n\nimport { eventsApi, tools } from '../object-plus'\n\nconst { EventMap, trigger2, trigger3, on, off } = eventsApi,\n      { commit, markAsDirty } = transactionApi,\n      _aquire = transactionApi.aquire, _free = transactionApi.free;\n\n/** @private */\nexport interface CollectionCore extends Transactional, Owner {\n    _byId : IdIndex\n    models : Record[]\n    model : typeof Record\n    idAttribute : string // TODO: Refactor inconsistent idAttribute usage\n    _comparator : Comparator\n    get( objOrId : string | Record | Object ) : Record    \n    _itemEvents? : eventsApi.EventMap\n    _shared : number\n    _aggregationError : Record[]\n\n    _log( level : string, text : string, value : any ) : void\n}\n\n// Collection's manipulation methods elements\nexport type Elements = ( Object | Record )[];\n\nexport interface CollectionOptions extends TransactionOptions {\n    sort? : boolean\n}\n\nexport type Comparator = ( a : Record, b : Record ) => number;  \n\n/** @private */\nexport function dispose( collection : CollectionCore ) : Record[]{\n    const { models } = collection;\n\n    collection.models = [];\n    collection._byId  = {};\n\n    freeAll( collection, models );\n    return models;\n}\n\n/** @private */\nexport function convertAndAquire( collection : CollectionCore, attrs : {} | Record, options : CollectionOptions ){\n    const { model } = collection;\n    \n    let record : Record;\n\n    if( collection._shared ){\n        record = attrs instanceof model ? attrs : <Record>model.create( attrs, options );\n\n        if( collection._shared & ItemsBehavior.listen ){\n            on( record, record._changeEventName, collection._onChildrenChange, collection );\n        }\n    }\n    else{\n        record = attrs instanceof model ? ( options.merge ? attrs.clone() : attrs ) : <Record>model.create( attrs, options );\n\n        if( !_aquire( collection, record ) ){\n            const errors = collection._aggregationError || ( collection._aggregationError = [] );\n            errors.push( record );\n        }\n    }    \n\n    // Subscribe for events...\n    const { _itemEvents } = collection;\n    _itemEvents && _itemEvents.subscribe( collection, record );\n\n    return record;\n}\n\n/** @private */\nexport function free( owner : CollectionCore, child : Record, unset? : boolean ) : void {\n    if( owner._shared ){\n        if( owner._shared & ItemsBehavior.listen ){\n            off( child, child._changeEventName, owner._onChildrenChange, owner );\n        }\n    }\n    else{\n        _free( owner, child );\n        unset || child.dispose();\n    }\n\n    const { _itemEvents } = owner;\n    _itemEvents && _itemEvents.unsubscribe( owner, child );\n}\n\n/** @private */\nexport function freeAll( collection : CollectionCore, children : Record[] ) : Record[] {\n    for( let child of children ){\n        free( collection, child );\n    }\n\n    return children;\n}\n\n/**\n * Silently sort collection, if its required. Returns true if sort happened.\n * @private\n */   \nexport function sortElements( collection : CollectionCore, options : CollectionOptions ) : boolean {\n    let { _comparator } = collection;\n    if( _comparator && options.sort !== false ){\n        collection.models.sort( _comparator );\n        return true;\n    }\n\n    return false;\n}\n\n/**********************************\n * Collection Index\n * @private \n */\nexport interface IdIndex {\n    [ id : string ] : Record\n}\n\n/** @private Add record */ \nexport function addIndex( index : IdIndex, model : Record ) : void {\n    index[ model.cid ] = model;\n    var id             = model.id;\n    \n    if( id || id === 0 ){\n        index[ id ] = model;\n    }\n}\n\n/** @private Remove record */ \nexport function removeIndex( index : IdIndex, model : Record ) : void {\n    delete index[ model.cid ];\n    var id = model.id;\n    if( id || id === 0 ){\n        delete index[ id ];\n    }\n}\n\nexport function updateIndex( index : IdIndex, model : Record ){\n    delete index[ model.previous( model.idAttribute ) ];\n\n    const { id } = model;\n    id == null || ( index[ id ] = model );\n}\n\n/***\n * In Collections, transactions appears only when\n * add remove or change events might be emitted.\n * reset doesn't require transaction.\n * \n * Transaction holds information regarding events, and knows how to emit them.\n * \n * Two major optimization cases.\n * 1) Population of an empty collection\n * 2) Update of the collection (no or little changes) - it's crucial to reject empty transactions.\n */\n\n\n// Transaction class. Implements two-phase transactions on object's tree.\n/** @private */ \nexport class CollectionTransaction implements Transaction {\n    // open transaction\n    constructor(    public object : CollectionCore,\n                    public isRoot : boolean,\n                    public added : Record[],\n                    public removed : Record[],\n                    public nested : Transaction[],\n                    public sorted : boolean ){}\n\n    // commit transaction\n    commit( initiator? : Transactional ){\n        const { nested, object } = this,\n              { _isDirty } = object;\n\n        // Commit all nested transactions...\n        for( let transaction of nested ){\n            transaction.commit( object );\n        }\n\n        if( object._aggregationError ){\n            logAggregationError( object );\n        }\n\n        // Just trigger 'change' on collection, it must be already triggered for models during nested commits.\n        // ??? TODO: do it in nested transactions loop? This way appears to be more correct. \n        for( let transaction of nested ){\n            trigger2( object, 'change', transaction.object, _isDirty );\n        }\n\n        // Notify listeners on attribute changes...\n        const { added, removed } = this;\n\n        // Trigger `add` events for both model and collection.\n        for( let record of added ){\n            trigger3( record, 'add', record, object, _isDirty );\n            trigger3( object, 'add', record, object, _isDirty );\n        }\n\n        // Trigger `remove` events for both model and collection.\n        for( let record of removed ){\n            trigger3( record, 'remove', record, object, _isDirty );\n            trigger3( object, 'remove', record, object, _isDirty );\n        }\n\n        if( this.sorted ){\n            trigger2( object, 'sort', object, _isDirty );\n        }\n\n        if( added.length || removed.length ){\n            trigger2( object, 'update', object, _isDirty );\n        }\n\n        this.isRoot && commit( object, initiator );\n    }\n}\n\nexport function logAggregationError( collection : CollectionCore ){\n    collection._log( 'error', 'added records already have an owner', collection._aggregationError );\n    collection._aggregationError = void 0;\n}","import { Transaction, transactionApi } from '../transactions'\nimport { CollectionTransaction, logAggregationError, sortElements, convertAndAquire, free, CollectionOptions, addIndex, updateIndex, CollectionCore } from './commons'\nimport { Record } from '../record'\n\nconst { begin, commit, markAsDirty } = transactionApi;\n\nexport interface AddOptions extends CollectionOptions {\n    at? : number \n}\n\n/** @private */\nexport function addTransaction( collection : CollectionCore, items : any[], options : AddOptions, merge? : boolean ){\n    const isRoot = begin( collection ),\n          nested : Transaction[]= [];\n\n    var added = appendElements( collection, items, nested, options, merge );\n\n    if( added.length || nested.length ){\n        let needSort = sortOrMoveElements( collection, added, options );\n        if( markAsDirty( collection, options ) ){\n            return new CollectionTransaction( collection, isRoot, added, [], nested, needSort );\n        }\n\n        if( collection._aggregationError ) logAggregationError( collection );\n    }\n\n    // No changes...\n    isRoot && commit( collection );\n};\n\n// Handle sort or insert at options for add operation. Reurns true if sort happened.\n/** @private */ \nfunction sortOrMoveElements( collection : CollectionCore, added : Record[], options : AddOptions ) : boolean {\n    let at = options.at;\n\n    // if `at` option is given, it overrides sorting option...\n    if( at != null ){\n        // Take an original collection's length. \n        const length = collection.models.length - added.length;\n\n        // Crazy Backbone rules about `at` index. I don't know what that guys smoke.\n        at = Number( at );\n        if( at < 0 ) at += length + 1;\n        if( at < 0 ) at = 0;\n        if( at > length ) at = length;\n\n        // Move added elements to desired position. In place.\n        moveElements( collection.models, at, added );\n        return false;\n    }\n\n    return sortElements( collection, options );\n}\n\n/** @private */\nfunction moveElements( source : any[], at : number, added : any[] ) : void {\n    for( var j = source.length - 1, i = j - added.length; i >= at; i--, j-- ){\n        source[ j ] = source[ i ];\n    }\n\n    for( i = 0, j = at; i < added.length; i++, j++ ){\n        source[ j ] = added[ i ];\n    }\n}\n\n// append data to model and index\n/** @private */\nfunction appendElements( collection : CollectionCore, a_items : any[], nested : Transaction[], a_options : AddOptions, forceMerge : boolean ){\n    var { _byId, models } = collection,\n        merge       = ( forceMerge || a_options.merge ) && !collection._shared,\n        parse       = a_options.parse,\n        idAttribute = collection.model.prototype.idAttribute,\n        prevLength = models.length;\n\n    for( const item of a_items ){\n        let model = item ? _byId[ item[ idAttribute ] ] || _byId[ item.cid ] : null;\n\n        if( model ){\n            if( merge && item !== model ){\n                var attrs = item.attributes || item;\n                const transaction = model._createTransaction( attrs, a_options );\n                transaction && nested.push( transaction );\n\n                if( model.hasChanged( idAttribute ) ){\n                    updateIndex( _byId, model );\n                }\n            }\n        }\n        else{\n            model = convertAndAquire( collection, item, a_options );\n            models.push( model );\n            addIndex( _byId, model );\n        }\n    }\n\n    return models.slice( prevLength );\n}\n","import { Transaction, transactionApi } from '../transactions'\nimport { CollectionTransaction, logAggregationError, IdIndex, convertAndAquire, free, sortElements, CollectionOptions, addIndex, CollectionCore, Elements, freeAll } from './commons'\nimport { Record } from '../record'\n\nconst { begin, commit, markAsDirty } = transactionApi;\n\n/** @private */\nconst silentOptions = { silent : true };\n\n/** @private */\nexport function emptySetTransaction( collection : CollectionCore, items : Elements, options : CollectionOptions, silent? : boolean ){\n    const isRoot = begin( collection );\n\n    const added = _reallocateEmpty( collection, items, options );\n\n    if( added.length ){\n        const needSort = sortElements( collection, options );\n\n        if( markAsDirty( collection, silent ? silentOptions : options ) ){\n            // 'added' is the reference to this.models. Need to copy it.\n            return new CollectionTransaction( collection, isRoot, added.slice(), [], [], needSort );\n        }\n\n        if( collection._aggregationError ) logAggregationError( collection );\n    }\n\n    // No changes...\n    isRoot && commit( collection );\n};\n\n/** @private */\nexport function setTransaction( collection, items, options ){\n    const isRoot = begin( collection ),\n          nested = [];\n\n    var previous = collection.models,\n        added    = _reallocate( collection, items, nested, options );\n\n    const reusedCount = collection.models.length - added.length,\n          removed = reusedCount < previous.length ? (\n                        reusedCount ? _garbageCollect( collection, previous ) :\n                                        freeAll( collection, previous )\n                    ) : [];                    \n    \n    const addedOrChanged = nested.length || added.length,\n          // As we are reallocating models array, it needs to be sorted even if there are no changes.\n          sorted = ( sortElements( collection, options ) && addedOrChanged ) || added.length || options.sorted;\n\n    if( addedOrChanged || removed.length || sorted ){\n        if( markAsDirty( collection, options ) ){ \n            return new CollectionTransaction( collection, isRoot, added, removed, nested, sorted );\n        }\n\n        if( collection._aggregationError ) logAggregationError( collection );\n    }\n\n    isRoot && commit( collection );\n};\n\n// Remove references to all previous elements, which are not present in collection.\n// Returns an array with removed elements.\n/** @private */\nfunction _garbageCollect( collection : CollectionCore, previous : Record[] ) : Record[]{\n    const { _byId }  = collection,\n          removed = [];\n\n    // Filter out removed models and remove them from the index...\n    for( let record of previous ){\n        if( !_byId[ record.cid ] ){\n            removed.push( record );\n            free( collection, record );\n        }\n    }\n\n    return removed;\n}\n\n// reallocate model and index\n/** @private */\nfunction _reallocate( collection : CollectionCore, source : any[], nested : Transaction[], options ){\n    var models      = Array( source.length ),\n        _byId : IdIndex = {},\n        merge       = ( options.merge == null ? true : options.merge ) && !collection._shared,\n        _prevById   = collection._byId,\n        prevModels  = collection.models, \n        idAttribute = collection.model.prototype.idAttribute,\n        toAdd       = [],\n        orderKept   = true;\n\n    // for each item in source set...\n    for( var i = 0, j = 0; i < source.length; i++ ){\n        var item  = source[ i ],\n            model : Record = null;\n\n        if( item ){\n            var id  = item[ idAttribute ],\n                cid = item.cid;\n\n            if( _byId[ id ] || _byId[ cid ] ) continue;\n\n            model = _prevById[ id ] || _prevById[ cid ];\n        }\n\n        if( model ){\n            if( merge && item !== model ){\n                if( orderKept && prevModels[ j ] !== model ) orderKept = false;\n\n                var attrs = item.attributes || item;\n                const transaction = model._createTransaction( attrs, options );\n                transaction && nested.push( transaction );\n            }\n        }\n        else{\n            model = convertAndAquire( collection, item, options );\n            toAdd.push( model );\n        }\n\n        models[ j++ ] = model;\n        addIndex( _byId, model );\n    }\n\n    models.length = j;\n    collection.models   = models;\n    collection._byId    = _byId;\n\n    if( !orderKept ) options.sorted = true;\n\n    return toAdd;\n}\n\n/** @private */\nfunction _reallocateEmpty( self, source, options ){\n    var len         = source ? source.length : 0,\n        models      = Array( len ),\n        _byId : IdIndex = {},\n        idAttribute = self.model.prototype.idAttribute;\n\n    for( var i = 0, j = 0; i < len; i++ ){\n        var src = source[ i ];\n\n        if( src && ( _byId[ src[ idAttribute ] ] || _byId[ src.cid ] ) ){\n            continue;\n        }\n\n        var model = convertAndAquire( self, src, options );\n        models[ j++ ] = model;\n        addIndex( _byId, model );\n    }\n\n    models.length = j;\n    self._byId    = _byId;\n\n    return self.models = models;\n}","/*************\n * Remove items from collections.\n * \n * Cannot be a part of two-phase transaction on object tree.\n * Can be executed in the scope of ad-hoc transaction or from the trigger, though.\n *\n * Implemented with low-level API. \n * Most frequent operation - single element remove. Thus, it have the fast-path.\n */\n\nimport { Record } from '../record'\nimport { free, CollectionCore, CollectionTransaction, removeIndex } from './commons'\nimport { eventsApi } from '../object-plus'\nimport { TransactionOptions, transactionApi } from '../transactions' \n\nconst { trigger2, trigger3 } = eventsApi,\n    { markAsDirty, begin, commit } = transactionApi;\n\n/** @private */\nexport function removeOne( collection : CollectionCore, el : Record | {} | string, options : TransactionOptions ) : Record {\n    var model : Record = collection.get( el );\n\n    if( model ){\n        const isRoot = begin( collection ),\n              models = collection.models;\n\n        // Remove model form the collection. \n        models.splice( models.indexOf( model ), 1 );\n        removeIndex( collection._byId, model );\n        \n        // Mark transaction as dirty. \n        const notify = markAsDirty( collection, options );\n\n        // Send out events.\n        if( notify ){\n            trigger3( model, 'remove', model, collection, options );\n            trigger3( collection, 'remove', model, collection, options );\n        } \n\n        free( collection, model, options.unset );\n\n        notify && trigger2( collection, 'update', collection, options );\n\n        // Commit transaction.\n        isRoot && commit( collection );\n\n        return model;\n    }\n};\n\n/** Optimized for removing many elements\n * 1. Remove elements from the index, checking for duplicates\n * 2. Create new models array matching index\n * 3. Send notifications and remove references\n */\n\n/** @private */\nexport function removeMany( collection : CollectionCore, toRemove : any[], options ){\n    const removed = _removeFromIndex( collection, toRemove, options.unset );\n    if( removed.length ){\n        const isRoot = begin( collection );\n\n        _reallocate( collection, removed.length );\n\n        if( markAsDirty( collection, options ) ){\n            const transaction = new CollectionTransaction( collection, isRoot, [], removed, [], false );\n            transaction.commit();\n        }\n        else{\n            // Commit transaction.\n            isRoot && commit( collection );\n        }\n    }\n\n    return removed;\n};\n\n// remove models from the index...\n/** @private */\nfunction _removeFromIndex( collection, toRemove, unset : boolean ){\n    var removed = Array( toRemove.length ),\n        _byId   = collection._byId;\n\n    for( var i = 0, j = 0; i < toRemove.length; i++ ){\n        var model = collection.get( toRemove[ i ] );\n        if( model ){\n            removed[ j++ ] = model;\n            removeIndex( _byId, model );\n            free( collection, model, unset );\n        }\n    }\n\n    removed.length = j;\n\n    return removed;\n}\n\n// Allocate new models array removing models not present in the index.\n/** @private */\nfunction _reallocate( collection, removed ){\n    var prev   = collection.models,\n        models = collection.models = Array( prev.length - removed ),\n        _byId = collection._byId;\n\n    for( var i = 0, j = 0; i < prev.length; i++ ){\n        var model = prev[ i ];\n\n        if( _byId[ model.cid ] ){\n            models[ j++ ] = model;\n        }\n    }\n\n    models.length = j;\n}","import { define, tools, eventsApi, EventMap, definitions, mixinRules, EventsDefinition, Mixable } from '../object-plus'\nimport { ItemsBehavior, transactionApi, Transactional, CloneOptions, Transaction, TransactionOptions, TransactionalDefinition, Owner } from '../transactions'\nimport { Record, SharedType, AggregatedType, createSharedTypeSpec } from '../record'\n\nimport { IdIndex, free, sortElements, dispose, Elements, CollectionCore, addIndex, removeIndex, updateIndex, Comparator, CollectionTransaction } from './commons'\nimport { addTransaction, AddOptions } from './add'\nimport { setTransaction, emptySetTransaction } from './set'\nimport { removeOne, removeMany } from './remove'\nimport { IOPromise, startIO } from '../io-tools'\n\nconst { trigger2, on, off } = eventsApi,\n    { begin, commit, markAsDirty } = transactionApi,\n    { omit, log, assign, defaults, assignToClassProto } = tools;\n\nlet _count = 0;\n\nexport type GenericComparator = string | ( ( x : Record ) => number ) | ( ( a : Record, b : Record ) => number ); \n\nexport interface CollectionOptions extends TransactionOptions {\n    comparator? : GenericComparator\n    model? : typeof Record\n}\n\nexport type Predicate<R> = ( val : R, key : number ) => boolean | object;\n\nexport interface CollectionDefinition extends TransactionalDefinition {\n    model? : typeof Record,\n    itemEvents? : EventsDefinition\n    _itemEvents? : EventMap\n}\n\nconst slice = Array.prototype.slice;\n\nclass CollectionRefsType extends SharedType {\n    static defaultValue = [];\n}\n\n@define({\n    // Default client id prefix \n    cidPrefix : 'c',\n    model : Record,\n    _changeEventName : 'changes',\n    _aggregationError : null\n})\n@definitions({\n    comparator : mixinRules.value,\n    model : mixinRules.protoValue,\n    itemEvents : mixinRules.merge\n})\nexport class Collection< R extends Record = Record> extends Transactional implements CollectionCore {\n    _shared : number\n    _aggregationError : R[]\n\n    static Subset : typeof Collection\n    static Refs : typeof Collection\n    static _SubsetOf : typeof Collection\n    \n    createSubset( models : ElementsArg, options ){\n        const SubsetOf = (<any>this.constructor).subsetOf( this ).options.type,\n            subset   = new SubsetOf( models, options );\n            \n        subset.resolve( this );\n        return subset;\n    }\n\n    static onExtend( BaseClass : typeof Transactional ){\n        // Cached subset collection must not be inherited.\n        const Ctor = this;\n        this._SubsetOf = null;\n\n        function RefsCollection( a, b, listen? ){\n            Ctor.call( this, a, b, ItemsBehavior.share | ( listen ? ItemsBehavior.listen : 0 ) );\n        }\n\n        Mixable.mixins.populate( RefsCollection );\n        \n        RefsCollection.prototype = this.prototype;\n        RefsCollection._attribute = CollectionRefsType;\n\n        this.Refs = this.Subset = <any>RefsCollection;\n\n        Transactional.onExtend.call( this, BaseClass );\n        createSharedTypeSpec( this, SharedType );\n    }\n    \n    static onDefine( definition : CollectionDefinition, BaseClass : any ){\n        if( definition.itemEvents ){\n            const eventsMap = new EventMap( BaseClass.prototype._itemEvents );\n            eventsMap.addEventsMap( definition.itemEvents );\n            this.prototype._itemEvents = eventsMap;\n        }\n\n        if( definition.comparator !== void 0 ) this.prototype.comparator = definition.comparator;\n\n        Transactional.onDefine.call( this, definition );\n    }\n\n    static subsetOf : ( collectionReference : any ) => any;\n    \n    _itemEvents : EventMap\n\n    /***********************************\n     * Core Members\n     */\n    // Array of the records\n    models : R[]\n\n    // Polymorphic accessor for aggregated attribute's canBeUpdated().\n    get __inner_state__(){ return this.models; }\n\n    // Index by id and cid\n    _byId : { [ id : string ] : R }\n\n    set comparator( x : GenericComparator ){\n        let compare;\n\n        switch( typeof x ){\n            case 'string' :\n                this._comparator = ( a, b ) => {\n                    const aa = a[ <string>x ], bb = b[ <string>x ];\n                    if( aa === bb ) return 0;\n                    return aa < bb ? -1 : + 1;\n                } \n                break;\n            case 'function' :\n                if( x.length === 1 ){\n                    this._comparator = ( a, b ) => {\n                        const aa = (<any>x).call( this, a ), bb = (<any>x).call( this, b );\n                        if( aa === bb ) return 0;\n                        return aa < bb ? -1 : + 1;\n                    }\n                }\n                else{\n                    this._comparator = ( a, b ) => (<any>x).call( this, a, b );\n                }\n                break;\n                \n            default :\n                this._comparator = null;\n        }\n    }\n    \n    // TODO: Improve typing\n    getStore() : Transactional {\n        return this._store || ( this._store = this._owner ? this._owner.getStore() : this._defaultStore );\n    }\n\n    _store : Transactional\n\n    get comparator(){ return this._comparator; }\n    _comparator : ( a : R, b : R ) => number\n\n    _onChildrenChange( record : R, options : TransactionOptions = {}, initiator? : Transactional ){\n        // Ignore updates from nested transactions.\n        if( initiator === this ) return;\n\n        const { idAttribute } = this;\n\n        if( record.hasChanged( idAttribute ) ){\n            updateIndex( this._byId, record );\n        }\n\n        const isRoot = begin( this );\n\n        if( markAsDirty( this, options ) ){\n            // Forward change event from the record.\n            trigger2( this, 'change', record, options )\n        }\n\n        isRoot && commit( this );\n    }\n\n    get( objOrId : string | R | Object ) : R {\n        if( objOrId == null ) return;\n\n        if( typeof objOrId === 'object' ){\n            const id = objOrId[ this.idAttribute ];\n            return ( id !== void 0 && this._byId[ id ] ) || this._byId[ (<R>objOrId).cid ];\n        }\n        else{\n            return this._byId[ objOrId ];\n        }        \n    }\n\n    each( iteratee : ( val : R, key : number ) => void, context? : any ){\n        const fun = bindContext( iteratee, context ),\n            { models } = this;\n\n        for( let i = 0; i < models.length; i++ ){\n            fun( models[ i ], i ); \n        }\n    }\n\n    forEach( iteratee : ( val : R, key? : number ) => void, context? : any ){\n        return this.each( iteratee, context );\n    }\n\n    every( iteratee : Predicate<R>, context? : any ) : boolean {\n        const fun = toPredicateFunction( iteratee, context ),\n            { models } = this;\n\n        for( let i = 0; i < models.length; i++ ){\n            if( !fun( models[ i ], i ) ) return false;\n        }\n\n        return true;\n    }\n\n    filter( iteratee : Predicate<R>, context? : any ) : R[] {\n        const fun = toPredicateFunction( iteratee, context ),\n            { models } = this;\n\n        return this.map( ( x, i ) => fun( x, i ) ? x : void 0 );\n    }\n\n    find( iteratee : Predicate<R>, context? : any ) : R {\n        const fun = toPredicateFunction( iteratee, context ),\n        { models } = this;\n\n        for( let i = 0; i < models.length; i++ ){\n            if( fun( models[ i ], i ) ) return models[ i ];\n        }\n\n        return null;\n    }\n\n    some( iteratee : Predicate<R>, context? : any ) : boolean {\n        return Boolean( this.find( iteratee, context ) );\n    }\n\n    map< T >( iteratee : ( val : R, key : number ) => T, context? : any ) : T[]{\n        const fun = bindContext( iteratee, context ),\n            { models } = this,\n            mapped = Array( models.length );\n\n        let j = 0;\n\n        for( let i = 0; i < models.length; i++ ){\n            const x = fun( models[ i ], i );\n            x === void 0 || ( mapped[ j++ ] = x ); \n        }\n\n        mapped.length = j;\n\n        return mapped;\n    }\n\n    _validateNested( errors : {} ) : number {\n        // Don't validate if not aggregated.\n        if( this._shared ) return 0;\n\n        let count = 0;\n\n        this.each( record => {\n            const error = record.validationError;\n            if( error ){\n                errors[ record.cid ] = error;\n                count++;\n            }\n        });\n\n        return count;\n    }\n\n    model : typeof Record\n\n    // idAttribute extracted from the model type.\n    idAttribute : string\n\n    constructor( records? : ( R | {} )[], options : CollectionOptions = {}, shared? : number ){\n        super( _count++ );\n        this.models = [];\n        this._byId = {};\n        \n        this.comparator  = this.comparator;\n\n        if( options.comparator !== void 0 ){\n            this.comparator = options.comparator;\n            options.comparator = void 0;\n        }\n        \n        this.model       = this.model;\n        \n        if( options.model ){\n            this.model = options.model;\n            options.model = void 0;\n        }\n\n        this.idAttribute = this.model.prototype.idAttribute; //TODO: Remove?\n\n        this._shared = shared || 0;\n\n        if( records ){\n            const elements = toElements( this, records, options );\n            emptySetTransaction( this, elements, options, true );\n        }\n\n        this.initialize.apply( this, arguments );\n\n        if( this._localEvents ) this._localEvents.subscribe( this, this );\n    }\n\n    initialize(){}\n\n    get length() : number { return this.models.length; }\n    first() : R { return this.models[ 0 ]; }\n    last() : R { return this.models[ this.models.length - 1 ]; }\n    at( a_index : number ) : R {\n        const index = a_index < 0 ? a_index + this.models.length : a_index;    \n        return this.models[ index ];\n    }\n\n    // Deeply clone collection, optionally setting new owner.\n    clone( options : CloneOptions = {} ) : this {\n        const models = this._shared & ItemsBehavior.share ? this.models : this.map( model => model.clone() ),\n              copy : this = new (<any>this.constructor)( models, { model : this.model, comparator : this.comparator }, this._shared );\n        \n        if( options.pinStore ) copy._defaultStore = this.getStore();\n        \n        return copy;\n    }\n\n    toJSON( options? : object ) : any {\n        return this.models.map( model => model.toJSON( options ) );\n    }\n\n    // Apply bulk in-place object update in scope of ad-hoc transaction \n    set( elements : ElementsArg = [], options : TransactionOptions = {} ) : this {\n        if( (<any>options).add !== void 0 ){\n            this._log( 'warn', \"Collection.set doesn't support 'add' option, behaving as if options.add === true.\", options );\n        }\n\n        // Handle reset option here - no way it will be populated from the top as nested transaction.\n        if( options.reset ){\n            this.reset( elements, options )\n        }\n        else{\n            const transaction = this._createTransaction( elements, options );\n            transaction && transaction.commit();\n        } \n\n        return this;    \n    }\n\n        /**\n     * Enable or disable live updates.\n     * \n     * `true` enables full collection synchronization.\n     * `false` cancel live updates.\n     * `json => true | false` - filter updates\n     */\n    liveUpdates( enabled : LiveUpdatesOption ) : IOPromise<this> {\n        if( enabled ){\n            this.liveUpdates( false );\n\n            const filter = typeof enabled === 'function' ? enabled : () => true;\n\n            this._liveUpdates = {\n                updated : json => {\n                    filter( json ) && this.add( json, { parse : true, merge : true } );\n                },\n\n                removed : id => this.remove( id )\n            };\n\n            return this.getEndpoint().subscribe( this._liveUpdates, this ).then( () => this );\n        }\n        else{\n            if( this._liveUpdates ){\n                this.getEndpoint().unsubscribe( this._liveUpdates, this );\n                this._liveUpdates = null;\n            }\n        }\n    }\n\n    _liveUpdates : object\n\n    fetch( a_options : { liveUpdates? : LiveUpdatesOption } & TransactionOptions = {} ) : IOPromise<this> {\n        const options = { parse : true, ...a_options },\n            endpoint = this.getEndpoint();\n\n        return startIO(\n            this,\n            endpoint.list( options, this ),\n            options,\n\n            json => {\n                let result : any = this.set( json, { parse : true, ...options } as TransactionOptions );\n                \n                if( options.liveUpdates ){\n                    result = this.liveUpdates( options.liveUpdates );\n                }\n\n                return result;\n            }\n        );\n    }\n\n    dispose() : void {\n        if( this._disposed ) return;\n\n        const aggregated = !this._shared;\n\n        for( let record of this.models ){\n            free( this, record );\n\n            if( aggregated ) record.dispose();\n        }\n\n        this.liveUpdates( false );\n\n        super.dispose();\n    }\n\n    reset( a_elements? : ElementsArg, options : TransactionOptions = {} ) : R[] {\n        const isRoot = begin( this ),\n              previousModels = this.models;\n\n        // Make all changes required, but be silent.\n        if( a_elements ){            \n            emptySetTransaction( this, toElements( this, a_elements, options ), options, true );\n        }\n        else{\n            this._byId = {};\n            this.models = [];\n        }\n\n        markAsDirty( this, options );\n\n        options.silent || trigger2( this, 'reset', this, defaults( { previousModels : previousModels }, options ) );\n\n        // Dispose models which are not in the updated collection.\n        const { _byId } = this;\n        \n        for( let toDispose of previousModels ){\n            _byId[ toDispose.cid ] || free( this, toDispose );\n        }\n\n        isRoot && commit( this );\n        return this.models;\n    }\n\n    // Add elements to collection.\n    add( a_elements : ElementsArg , options : AddOptions = {} ){\n        const elements = toElements( this, a_elements, options ),\n              transaction = this.models.length ?\n                    addTransaction( this, elements, options ) :\n                    emptySetTransaction( this, elements, options );\n\n        if( transaction ){\n            transaction.commit();\n            return transaction.added;\n        }\n    }\n\n    // Remove elements. \n    remove( recordsOrIds : any, options : CollectionOptions = {} ) : R[] | R {\n        if( recordsOrIds ){\n            return Array.isArray( recordsOrIds ) ?\n                        removeMany( this, recordsOrIds, options ) as R[]:\n                        removeOne( this, recordsOrIds, options ) as R;\n        }\n\n        return [];\n    }\n\n    // Apply bulk object update without any notifications, and return open transaction.\n    // Used internally to implement two-phase commit.   \n    _createTransaction( a_elements : ElementsArg, options : TransactionOptions = {} ) : CollectionTransaction | void {\n        const elements = toElements( this, a_elements, options );\n\n        if( this.models.length ){\n            return options.remove === false ?\n                        addTransaction( this, elements, options, true ) :\n                        setTransaction( this, elements, options );\n        }\n        else{\n            return emptySetTransaction( this, elements, options );\n        }\n    }\n\n    static _attribute = AggregatedType;\n\n    /***********************************\n     * Collection manipulation methods\n     */\n\n    pluck( key : keyof R ) : any[] {\n        return this.models.map( model => model[ key ] );\n    }\n\n    sort( options : TransactionOptions = {} ) : this {\n        if( sortElements( this, options ) ){\n            const isRoot = begin( this );\n            \n            if( markAsDirty( this, options ) ){\n                trigger2( this, 'sort', this, options );\n            }\n\n            isRoot && commit( this );\n        }\n\n        return this;\n    }\n\n    // Add a model to the end of the collection.\n    push(model : ElementsArg, options : CollectionOptions ) {\n      return this.add(model, assign({at: this.length}, options));\n    }\n\n    // Remove a model from the end of the collection.\n    pop( options : CollectionOptions ) : R {\n      var model = this.at(this.length - 1);\n      this.remove(model, { unset : true, ...options });\n      return model;\n    }\n\n    // Remove and return given model.\n    // TODO: do not dispose the model for aggregated collection.\n    unset( modelOrId : R | string, options? ) : R {\n        const value = this.get( modelOrId );\n        this.remove( modelOrId, { unset : true, ...options } );\n        return value;\n    }\n\n    // Add a model to the beginning of the collection.\n    unshift(model : ElementsArg, options : CollectionOptions ) {\n      return this.add(model, assign({at: 0}, options));\n    }\n\n    // Remove a model from the beginning of the collection.\n    shift( options? : CollectionOptions ) : R {\n      var model = this.at(0);\n      this.remove( model, { unset : true, ...options } );\n      return model;\n    }\n\n    // Slice out a sub-array of models from the collection.\n    slice() : R[] {\n      return slice.apply(this.models, arguments);\n    }\n\n    indexOf( modelOrId : any ) : number {\n        const record = this.get( modelOrId );\n        return this.models.indexOf( record );\n    }\n\n    modelId( attrs : {} ) : any {\n        return attrs[ this.model.prototype.idAttribute ];\n    }\n\n    // Toggle model in collection.\n    toggle( model : R, a_next? : boolean ) : boolean {\n        var prev = Boolean( this.get( model ) ),\n            next = a_next === void 0 ? !prev : Boolean( a_next );\n\n        if( prev !== next ){\n            if( prev ){\n                this.remove( model );\n            }\n            else{\n                this.add( model );\n            }\n        }\n\n        return next;\n    }\n\n    _log( level : tools.LogLevel, text : string, value ) : void {\n        tools.log( level, `[Collection Update] ${ this.model.prototype.getClassName() }.${ this.getClassName() }: ` + text, {\n            Argument : value,\n            'Attributes spec' : this.model.prototype._attributes\n        });\n    }\n\n    getClassName() : string {\n        return super.getClassName() || 'Collection';\n    }\n}\n\nexport type LiveUpdatesOption = boolean | ( ( x : any ) => boolean );\n\nexport type ElementsArg = Object | Record | Object[] | Record[];\n\n// TODO: make is safe for parse to return null (?)\nfunction toElements( collection : Collection, elements : ElementsArg, options : CollectionOptions ) : Elements {\n    const parsed = options.parse ? collection.parse( elements, options ) : elements; \n    return Array.isArray( parsed ) ? parsed : [ parsed ];\n}\n\ncreateSharedTypeSpec( Collection, SharedType );\n\nRecord.Collection = <any>Collection;\n\nfunction bindContext( fun : Function, context? : any ){\n    return context !== void 0 ? ( v, k ) => fun.call( context, v, k ) : fun;\n}\n\nfunction toPredicateFunction<R>( iteratee : Predicate<R>, context : any ){\n    if( typeof iteratee === 'object' ){\n        // Wrap object to the predicate...\n        return x => {\n            for( let key in iteratee as any ){\n                if( iteratee[ key ] !== x[ key ] )\n                    return false;\n            }\n\n            return true;\n        }\n    }\n    \n    return bindContext( iteratee, context );\n\n}","import { Collection } from '../collection'\nimport { Record } from '../record'\nimport { CompiledReference } from '../traversable'\n\nexport type CollectionReference = ( () => Collection ) | Collection | string; \n\n/** @private */\nexport function parseReference( collectionRef : CollectionReference ) : ( root : Record ) => Collection {\n    switch( typeof collectionRef ){\n        case 'function' :\n            return root => (<any>collectionRef).call( root );\n        case 'object'   :\n            return () => <Collection>collectionRef;\n        case 'string'   :\n            const { resolve } = new CompiledReference( <string>collectionRef );\n            return resolve;\n    }\n}","import { Collection, CollectionOptions } from '../collection'\nimport { tools, eventsApi, define } from '../object-plus'\nimport { Record, AggregatedType } from '../record'\nimport { parseReference, CollectionReference } from './commons'\nimport { ChainableAttributeSpec } from '../record'\nimport { Transactional, ItemsBehavior, TransactionOptions, transactionApi } from '../transactions'\n\nconst { fastDefaults } = tools;\n\ntype RecordsIds = ( string | number )[];\n\nCollection.subsetOf = function subsetOf( masterCollection : CollectionReference ) : ChainableAttributeSpec {\n    const SubsetOf = this._SubsetOf || ( this._SubsetOf = defineSubsetCollection( this ) ),\n        getMasterCollection = parseReference( masterCollection ),\n        typeSpec = new ChainableAttributeSpec({\n            type : SubsetOf\n        });\n\n    return typeSpec.get(\n        function( refs ){\n            !refs || refs.resolvedWith || refs.resolve( getMasterCollection( this ) );\n            return refs;\n        }\n    );\n};\n\nconst subsetOfBehavior = ItemsBehavior.share | ItemsBehavior.persistent;\n\nfunction defineSubsetCollection( CollectionConstructor : typeof Collection ) {\n    @define class SubsetOfCollection extends CollectionConstructor {\n        refs : any[];\n        resolvedWith : Collection = null;\n\n        _attribute : AggregatedType\n\n        get __inner_state__(){ return this.refs || this.models; }\n\n        constructor( recordsOrIds?, options? ){\n            super( [], options, subsetOfBehavior );\n            this.refs = toArray( recordsOrIds );\n        }\n\n        // Remove should work fine as it already accepts ids. Add won't...\n        add( a_elements, options = {} ){\n            const { resolvedWith } = this,\n                    toAdd = toArray( a_elements );\n            \n            if( resolvedWith ){\n                // If the collection is resolved already, everything is simple.\n                return super.add( resolveRefs( resolvedWith, toAdd ), options );\n            }\n            else{\n                // Collection is not resolved yet. So, we prepare the delayed computation.\n                if( toAdd.length ){\n                    const isRoot = transactionApi.begin( this );\n\n                    // Save elements to resolve in future...\n                    this.refs = this.refs ? this.refs.concat( toAdd ) : toAdd.slice();\n\n                    transactionApi.markAsDirty( this, options );\n\n                    // And throw the 'changes' event.\n                    isRoot && transactionApi.commit( this );\n                }\n            }\n        }\n\n        reset( a_elements?, options = {} ){\n            const { resolvedWith } = this,\n                elements = toArray( a_elements );\n    \n            return resolvedWith ?\n                // Collection is resolved, so parse ids and forward the call to set.\n                super.reset( resolveRefs( resolvedWith, elements ), options ) :\n                // Collection is not resolved yet. So, we prepare the delayed computation.\n                delaySet( this, elements, options ) || [];\n        }\n\n        _createTransaction( a_elements, options? ){\n            const { resolvedWith } = this,\n                elements = toArray( a_elements );\n    \n            return resolvedWith ?\n                // Collection is resolved, so parse ids and forward the call to set.\n                super._createTransaction( resolveRefs( resolvedWith, elements ), options ) :\n                // Collection is not resolved yet. So, we prepare the delayed computation.\n                delaySet( this, elements, options );\n        }\n\n        // Serialized as an array of model ids.\n        toJSON() : RecordsIds {\n            return this.refs ?\n                this.refs.map( objOrId => objOrId.id || objOrId ) :\n                this.models.map( model => model.id );\n        }\n\n        // Subset is always valid.\n        _validateNested(){ return 0; }\n\n        get length() : number {\n            return this.models.length || ( this.refs ? this.refs.length : 0 );\n        }\n\n        // Must be shallow copied on clone.\n        clone( owner? ){\n            var Ctor = (<any>this).constructor,\n                copy = new Ctor( [], {\n                    model : this.model,\n                    comparator : this.comparator\n                });\n\n            if( this.resolvedWith ){\n                // TODO: bug here. \n                copy.resolvedWith = this.resolvedWith;\n                copy.refs = null;\n                copy.reset( this.models, { silent : true } );\n            }\n            else{\n                copy.refs = this.refs.slice();\n            }\n\n            return copy;\n        }\n\n        // Clean up the custom parse method possibly defined in the base class.\n        parse( raw : any ) : Record[] {\n            return raw;\n        }\n\n        resolve( collection : Collection ) : this {\n            if( collection && collection.length ){\n                this.resolvedWith = collection;\n\n                if( this.refs ){\n                    this.reset( this.refs, { silent : true } );\n                    this.refs = null;\n                }\n            }\n\n            return this;\n        }\n\n        getModelIds() : RecordsIds { return this.toJSON(); }\n\n        toggle( modelOrId : any, val : boolean ) : boolean {\n            return super.toggle( this.resolvedWith.get( modelOrId ), val );\n        }\n\n        addAll() : Record[] {\n            if( this.resolvedWith ){\n                this.set( this.resolvedWith.models );\n                return this.models;\n            }\n\n            throw new Error( \"Cannot add elemens because the subset collection is not resolved yet.\" );\n        }\n\n        toggleAll() : Record[] {\n            return this.length ? this.reset() : this.addAll();\n        }\n    }\n\n    // Clean up all custom item events to prevent memory leaks.\n    SubsetOfCollection.prototype._itemEvents = void 0;\n\n    return SubsetOfCollection;\n}\n\nfunction resolveRefs( master, elements ){\n    const records = [];\n    \n    for( let el of elements ){\n        const record = master.get( el );\n        if( record ) records.push( record );\n    }\n\n    return records;\n}\n\nfunction delaySet( collection, elements, options ) : void {\n    if( tools.notEqual( collection.refs, elements ) ){\n        const isRoot = transactionApi.begin( collection );\n\n        // Save elements to resolve in future...\n        collection.refs = elements.slice();\n\n        transactionApi.markAsDirty( collection, options );\n        \n        // And throw the 'changes' event.\n        isRoot && transactionApi.commit( collection );\n    }\n}\n\nfunction toArray( elements ){\n    return elements ? ( \n        Array.isArray( elements ) ? elements : [ elements ]\n    ) : [];\n}","// (c) 2016 Vlad Balin and Volicon\n// MixtureJS may be freely distributed under the MIT license. \n\nimport * as tools from './tools'\nexport { tools }\nexport * from './mixins'\nexport * from './events'\nimport * as eventsApi from './eventsource'\nexport { eventsApi }\n\nimport { Mixable, MixableConstructor } from './mixins'\n\ndeclare global {\n    interface ObjectConstructor {\n        /** Polyfill for Object.assign */\n        assign< T >( dest : T, ...sources : Object[] ) : T\n\n        /** Global logging interface, for console debugging. */\n        log : tools.Log\n\n        /** ES5 Object.extend */\n        extend( protoProps : {}, staticProps : {} ) : MixableConstructor\n    }\n}\n\nObject.extend = ( protoProps, staticProps ) => Mixable.extend( protoProps, staticProps );\nObject.assign || ( Object.assign = tools.assign );\nObject.log = tools.log;","export interface ChildrenErrors {\n    [ key : string ] : ValidationError | any\n} \n\nexport interface Validatable {\n    _validateNested( errors : ChildrenErrors ) : number;\n    validate( self : any ) : any\n    get( key : string ) : any\n}\n\n// Validation error object.\nexport class ValidationError {\n    // Invalid nested object keys \n    nested : ChildrenErrors \n    length : number\n\n    // Local error\n    error : any\n\n    constructor( obj : Validatable ){\n        this.length = obj._validateNested( this.nested = {} );\n\n        if( this.error = obj.validate( obj ) ){\n            this.length++;\n        }\n    }\n\n    each( iteratee : ( value : any, key : string ) => void ) : void {\n        const { error, nested } = this;\n\n        if( error ) iteratee( error, null );\n\n        for( const key in nested ){\n            iteratee( nested[ key ], key );\n        }\n    }\n\n    eachError( iteratee : ( error : any, key : string, object : Validatable ) => void, object : Validatable ) : void {\n        this.each( ( value : any, key : string ) => {\n            if( value instanceof ValidationError ){\n                (<ValidationError>value).eachError( iteratee, object.get( key ) );\n            }\n            else{\n                iteratee( value, key, object );\n            }\n        });\n    }\n}","import { AnyType } from './any'\nimport { Owner, transactionApi, Transactional, ItemsBehavior, TransactionOptions } from '../../transactions'\nimport { tools } from '../../object-plus'\nimport { AttributesContainer, ConstructorOptions } from './updates'\nimport { ValidationError } from '../../validation'\n\nconst { free, aquire } = transactionApi;\n\nexport class AggregatedType extends AnyType {\n    type : typeof Transactional\n\n    clone( value : Transactional ) : Transactional {\n        return value ? value.clone() : value;\n    }\n\n    toJSON( x, key : string, options : object ){ return x && x.toJSON( options ); }\n\n    doInit( value, record : AttributesContainer, options : ConstructorOptions ){\n        const v = options.clone ? this.clone( value ) : (\n            value === void 0 ? this.defaultValue() : value\n        );\n\n        const x = this.transform( v, void 0, record, options );\n        this.handleChange( x, void 0, record, options );\n        return x;\n    }\n\n    doUpdate( value, record, options, nested : any[] ){ // Last to things can be wrapped to an object, either transaction or ad-hoc\n        const key = this.name, { attributes } = record; \n        const prev = attributes[ key ];\n        let update;\n\n        // This can be moved to transactional attribute. And chained with the rest.\n        if( update = this.canBeUpdated( prev, value, options ) ) { // todo - skip empty updates.\n            const nestedTransaction = prev._createTransaction( update, options );\n            if( nestedTransaction ){\n                if( nested ){\n                    nested.push( nestedTransaction );\n                }\n                else{\n                    nestedTransaction.commit( record );\n                }\n\n                if( this.propagateChanges ) return true;\n            }\n\n            return false;\n        }\n\n        const next = this.transform( value, prev, record, options );\n        attributes[ key ] = next;\n\n        if( this.isChanged( next, prev ) ) { // Primitives and nested comparison can be inlined.\n            // Do the rest of the job after assignment\n            this.handleChange( next, prev, record, options );\n\n            return true;\n        }\n\n        return false;\n    }\n\n    canBeUpdated( prev : Transactional, next : any, options : TransactionOptions ) : any {\n        // If an object already exists, and new value is of incompatible type, let object handle the update.\n        if( prev && next != null ){\n            if( next instanceof this.type ){\n                // In case if merge option explicitly specified, force merge.\n                if( options.merge ) return next.__inner_state__;\n            }\n            else{\n                return next;\n            }\n        }\n    }\n\n    convert( next : any, prev : any, record : AttributesContainer, options : TransactionOptions ) : Transactional {\n        // Invoke class factory to handle abstract classes\n        if( next == null ) return next;\n        \n        if( next instanceof this.type ){\n            if( next._shared && !( next._shared & ItemsBehavior.persistent ) ) { // TODO: think more about shared types assignment compatibility. \n                this._log( 'error', 'aggregated collection attribute is assigned with shared collection', next, record );\n            }\n\n            // With explicit 'merge' option we need to clone an object if its previous value was 'null'.\n            // This is an only case we could be here when merge === true.\n            return options.merge ? next.clone() : next;\n        }\n\n        return <any>this.type.create( next, options );\n    }\n\n    dispose ( record : AttributesContainer, value : Transactional ){\n        if( value ){\n            this.handleChange( void 0, value, record, {} );\n        }\n    }\n\n    validate( record : AttributesContainer, value : Transactional ) : ValidationError {\n        var error = value && value.validationError;\n        if( error ) return error;\n    }\n\n    create() : Transactional {\n        return (<any>this.type).create(); // this the subclass of Transactional here.\n    }\n\n    initialize( options ){\n        options.changeHandlers.unshift( this._handleChange );\n    }\n\n    _handleChange( next : Transactional, prev : Transactional, record : AttributesContainer, options : TransactionOptions ){\n        if( prev ){\n            free( record, prev );\n            options.unset || prev.dispose();\n        } \n        \n        if( next && !aquire( record, next, this.name ) ){\n            this._log( 'error', 'aggregated attribute assigned with object already having an owner', next, record );\n        }\n    }\n}","import { getOwnerEndpoint, startIO, IOOptions, IOEndpoint, IOPromise, IONode } from '../io-tools'\n\nexport interface IORecord extends IONode {\n    getEndpoint() : IOEndpoint\n    save( options? : IOOptions ) : IOPromise<this>\n    fetch( options? : IOOptions ) : IOPromise<this>\n    destroy( options? : IOOptions ) : IOPromise<this>\n    toJSON( options? : object ) : any\n    isNew() : boolean\n    id : string | number\n    set( json : object, options : object )\n}\n\nexport const IORecordMixin = {\n    save( this : IORecord, options : IOOptions = {} ){\n        const endpoint = this.getEndpoint(),\n              json = this.toJSON( options );\n\n        return startIO(\n            this,\n            this.isNew() ?\n                endpoint.create( json, options, this ) :\n                endpoint.update( this.id, json, options, this ),\n            options,\n\n            update => {\n                this.set( update, { parse : true, ...options } );\n            }\n        );\n    },\n\n    fetch( options : IOOptions = {} ){\n        return startIO(\n            this,\n            this.getEndpoint().read( this.id, options, this ),\n            options,\n\n            json => this.set( json, { parse : true, ...options } )\n        );\n    },\n\n    destroy( options : IOOptions = {} ){  \n        return startIO(\n            this,\n            this.getEndpoint().destroy( this.id, options, this ),\n            options,\n\n            () => {\n                const { collection } = this;\n                if( collection ){\n                    collection.remove( this, options );\n                }\n                else{\n                    this.dispose();\n                }\n\n                return this;\n            }\n        )\n    }\n}","import { AnyType, AttributeOptions } from '../record'\nimport { parseReference, CollectionReference } from './commons'\nimport { Collection } from '../collection'\nimport { Record } from '../record'\n\nimport { ChainableAttributeSpec } from '../record'\n\n/********\n * Reference to model by id.\n * \n * Untyped attribute. Holds model id, when unresolved. When resolved, is substituted\n * with a real model.\n * \n * No model changes are detected and counted as owner's change. That's intentional.\n */\n\n/** @private */\ntype RecordRefValue = Record | string;\n\n/** @private */\nclass RecordRefType extends AnyType {\n    // It is always serialized as an id, whenever it's resolved or not. \n    toJSON( value : RecordRefValue ){\n        return value && typeof value === 'object' ? value.id : value;\n    }\n\n    // Wne \n    clone( value : RecordRefValue ){\n        return value && typeof value === 'object' ? value.id : value;\n    }\n\n    // Model refs by id are equal when their ids are equal.\n    isChanged( a : RecordRefValue, b : RecordRefValue){\n        var aId = a && ( (<Record>a).id == null ? a : (<Record>a).id ),\n            bId = b && ( (<Record>b).id == null ? b : (<Record>b).id );\n\n        return aId !== bId;\n    }\n\n    // Refs are always valid.\n    validate( model, value, name ){}\n}\n\nRecord.from = function from( masterCollection : CollectionReference ) : ChainableAttributeSpec {\n    const getMasterCollection = parseReference( masterCollection );\n\n    const typeSpec = new ChainableAttributeSpec({\n        value : null,\n        _attribute : RecordRefType\n    });\n    \n    return typeSpec\n        .get( function( objOrId : RecordRefValue, name : string ) : Record {\n            if( typeof objOrId === 'object' ) return objOrId;\n\n            // So, we're dealing with an id reference. Resolve it.\n            const collection = getMasterCollection( this );\n            let   record : Record = null;\n\n            // If master collection exists and is not empty...\n            if( collection && collection.length ){\n                // Silently update attribute with record from this collection.\n                record = collection.get( objOrId ) || null;\n                this.attributes[ name ] = record;\n\n                // Subscribe for events manually. delegateEvents won't be invoked.\n                record && this._attributes[ name ].handleChange( record, null, this, {} );\n            }\n\n            return record;\n        });\n};","import { Record } from '../record'\nimport { Transactional } from '../transactions'\nimport { startIO, IOPromise } from '../io-tools'\n\nlet _store : Store = null;\n\nexport class Store extends Record {\n    getStore() : Store { return this; }\n \n    // delegate item lookup to owner, and to the global store if undefined\n    get( name : string ) : any {\n        // Lookup for resource in the current store. \n        let local = this[ name ];\n\n        // If something is found or it's the global store, return result.\n        if( local || this === this._defaultStore ) return local;\n\n        // Forward failed lookup to owner or global store.\n        return this._owner ? this._owner.get( name ) : this._defaultStore.get( name ); \n    }\n\n    static get global(){ return _store; }\n    static set global( store : Store ){\n        if( _store ){\n          _store.dispose();\n        }\n\n        Transactional.prototype._defaultStore = _store = store;\n    }\n}\n\nStore.global = new Store();","// Polyfill for IE10. Should fix problems with babel and statics inheritance.\nimport { tools } from './object-plus'\n\ndeclare global {\n    interface ObjectConstructor {\n        setPrototypeOf( target : Object, proto : Object );\n    }\n}\n\nObject.setPrototypeOf || ( Object.setPrototypeOf = tools.defaults );\n\n/**\n * Export everything \n */\n\nexport * from './object-plus'\nexport * from './collection'\nexport * from './relations'\nexport * from './record'\nexport * from './transactions'\n\nexport * from './io-tools'\n\n// Exported module itself is the global event bus.\nimport { Events } from './object-plus/'\nexport const { on, off, trigger, once, listenTo, stopListening, listenToOnce } = <any>Events;\n\nimport { Collection } from './collection'\n\n// Define synonims for NestedTypes backward compatibility.\nimport { Record as Model } from './record' \nimport { define, Mixable as Class } from './object-plus/'\nexport { Model, Class };\n\nexport function attributes( attrDefs ) : typeof Model {\n    @define class DefaultRecord extends Model {\n        static attributes = attrDefs;\n    }\n\n    return DefaultRecord;\n}\n\nimport { ChainableAttributeSpec } from './record'\n\n/** Typeless attribute declaration with default value. */ \nexport function value( x : any ) : ChainableAttributeSpec {\n    return new ChainableAttributeSpec({ value : x });\n}\n\n/** Wrap model or collection method in transaction. */\nexport function transaction< F extends Function >( method : F ) : F {\n    return <any>function( ...args ){\n        let result;\n        \n        this.transaction( () => {\n            result = method.apply( this, args );\n        });\n        \n        return result;\n    }\n}"],"names":["__extends","d","b","__","this","constructor","extendStatics","prototype","Object","create","__rest","s","e","t","p","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","__decorate","decorators","target","key","desc","c","arguments","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","defaults","dest","source","name","other","isValidJSON","value","proto","getPrototypeOf","Array","every","getBaseClass","Class","isEmpty","obj","someArray","arr","fun","result","someObject","some","ArrayProto","predicate","x","omit","discard","transform","assign","once","func","memo","first","apply","notEqual","a","protoA","DateProto","arraysNotEqual","ObjectProto","objectsNotEqual","keysA","keys","hashMap","hash","HashProto","predefine","Constructor","BaseClass","__super__","define","MixinsState","get","Mixable","populate","onExtend","ClassOrDefinition","Ctor","definitions","rules","mixins","definitionRules","definitionDecorator","definitionKey","mergeObject","_a","_b","forEachOwnProp","object","ignore","dontMix","_i","name_2","assignProperty","sourceProp","rule","unshift","destProp","configurable","resolveRule","getBubblingHandler","event","_bubblingHandlers","trigger5","trigger3","trigger2","listOff","_events","callback","context","filteredHead","prev","head","ev","next","_callback","listSend2","listSend3","listSend4","listSend5","listSend6","f","on","EventHandler","once_1","_once","off","name_3","strings","api","events","eventSplitter","test","names_1","split","self","queue","all","uniqueId","_idCount","toPropertyDescriptor","addReference","listener","_listeningTo","cid","resolveReference","root","reference","action","path","match","referenceMask","skip","getStore","getOwner","getOwnerEndpoint","collection","_owner","_endpoints","_ownerKey","startIO","promise","options","thenDo","abortIO","ioUpdate","_ioPromise","then","resp","triggerAndBubble","catch","err","console","error","abort","eventSource","args","trigger","setAttribute","record","isRoot","begin","_attributes","doUpdate","markAsDirty","attributes","commit","_begin","_previousAttributes","AttributesCopy","_changedAttributes","_markAsDirty","constructorsMixin","attrDefs","attrs","Function","map","attr","join","Attributes","shouldBeAnObject","values","_log","chainGetHooks","prevHook","nextHook","chainTransforms","prevTransform","nextTransform","chainChangeHandlers","prevHandler","nextHandler","wrapIsRequired","validate","emptyFunction","type","spec","ChainableAttributeSpec","_attribute","defaultValue","hasCustomDefault","inferType","Number","String","Boolean","supportsDate","date","isNaN","Date","getTime","safeParseDate","timestamp","struct","minutesOffset","isoDatePattern","exec","k","numericKeys","undefined","UTC","parse","Integer","Math","round","doNothing","createAttribute","AnyType","from","createSharedTypeSpec","Attribute","localEventsMixin","attrSpecs","_localEvents","_onChange","eventsApi.EventMap","addEvent","createWatcherFromRef","wrapWatcher","watcher","ref","local","resolve","tail","typeCheck","unknown","push","getAttributes","idAttribute","definition","convertAndAquire","model","_shared","ItemsBehavior","listen","_changeEventName","_onChildrenChange","merge","clone","_aquire","_aggregationError","_itemEvents","subscribe","free","owner","child","unset","_free","dispose","unsubscribe","freeAll","children","children_1","sortElements","_comparator","sort","models","addIndex","index","id","removeIndex","updateIndex","previous","logAggregationError","addTransaction","items","nested","added","appendElements","needSort","sortOrMoveElements","CollectionTransaction","at","length_1","moveElements","j","a_items","a_options","forceMerge","_byId","prevLength","a_items_1","item","transaction","_createTransaction","hasChanged","slice","emptySetTransaction","silent","_reallocateEmpty","silentOptions","setTransaction","_reallocate","reusedCount","removed","_garbageCollect","addedOrChanged","sorted","previous_1","_prevById","prevModels","toAdd","orderKept","len","src","removeOne","el","splice","notify","removeMany","toRemove","_removeFromIndex","toElements","elements","parsed","isArray","bindContext","v","toPredicateFunction","iteratee","parseReference","collectionRef","defineSubsetCollection","CollectionConstructor","recordsOrIds","_super","subsetOfBehavior","_this","refs","toArray","tslib_1.__extends","SubsetOfCollection","a_elements","resolvedWith","add","resolveRefs","transactionApi","concat","reset","delaySet","objOrId","copy","comparator","raw","toJSON","modelOrId","val","toggle","set","Error","addAll","master","records","elements_1","tools.notEqual","setPrototypeOf","__proto__","__assign","n","levelToNumber","none","warn","info","log","debug","a_level","a_msg","a_props","msg","props","level","levelAsNumber","throw","logger","stop","process","env","NODE_ENV","toString","window","something","__inner_state__","keys_1","body","name_1","names","prop","o","protoProps","staticProps","defineMixin","getStaticDefinitions","onDefine","mergeInheritedMembers","statics","TheSubclass","mergeRules","appliedMixins","mixins_1","mixin","sourceMixins","ctors","ctors_1","mixinRules","protoValue","baseProto","function","caller","list","pipe","classFirst","classLast","EventMap","handlers","addEventsMap","EventDescriptor","event_1","event_2","handler","initialize","Messenger","localEvents","properties","eventsMap","defineProperties","a_source","removeAll","second","_disposed","stopListening","Events","extend","tools.assign","tools.log","_validateNested","ValidationError","each","eachError","splitTail","substr","pop","shift","cidPrefix","Transactional","endpoint","_endpoint","Transactional_1","listenTo","update","_changeToken","data","_defaultStore","_validationError","validationError","getValidationError","_transaction","dirty","_isDirty","initiator","originalOptions","aquire","UpdateRecordMixin","attribute","propagateChanges","forceAttributeChange","a_values","changes","RecordTransaction","nested_1","nested_2","changes_1","emptyOptions","getHooks","transforms","changeHandlers","changeEvents","tools.isValidJSON","JSON","stringify","isRequired","convert","getHook_1","getHook","reduce","validate_1","handleChange","doInit","isChanged","text","getClassName","Record","Attribute definition","Prev. value","New value","AggregatedType","canBeUpdated","nestedTransaction","persistent","_handleChange","check","metadata","asProp","changed","eventMap","cloned","attrSpec","has","type_1","shared","_isRequired","_has","DateType","toISOString","msDatePattern","MSDateType","msDate","TimestampType","microsoft","ImmutableClassType","PrimitiveType","NumericType","num","isFinite","integer","ArrayType","ObjectType","FunctionType","shareAndListen","share","SharedType","implicitObject","attributesDefinition","baseClassAttributes","myAttributes","_.transform","allAttributes","_.defaults","ConstructorsMixin","_attributesArray","createPropertyDescriptor","attrDef","IORecordMixin","save","getEndpoint","json","isNew","fetch","read","destroy","remove","_cidCounter","diff","old","nullify","forEachAttr","_attributesArray_1","pinStore","errors","asJson","l","newModel","clear","Attributes definition:","Collection","BaseRecordAttributes","BaseRecordAttributesCopy","IdAttribute","DefaultCollection","dynamicMixin","_c","added_1","_d","removed_1","_e","_count","CollectionRefsType","subset","SubsetOf","subsetOf","RefsCollection","_SubsetOf","Refs","Subset","itemEvents","aa","bb","_store","find","mapped","count","a_index","enabled","liveUpdates","filter_1","_liveUpdates","updated","tslib_1.__assign","aggregated","previousModels","previousModels_1","toDispose","a_next","Argument","Attributes spec","RecordRefType","masterCollection","getMasterCollection","Store","store","global","tools.defaults","listenToOnce","DefaultRecord","Model","method","listName","attrName","getMetadata","fn","onAbort","reject","Promise","a_resolve","a_reject"],"mappings":"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"}