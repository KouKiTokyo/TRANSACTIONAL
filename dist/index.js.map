{"version":3,"file":"index.js","sources":["../node_modules/tslib/tslib.es6.js","../src/object-plus/tools.ts","../src/object-plus/mixins.ts","../src/object-plus/eventsource.ts","../src/object-plus/events.ts","../src/object-plus/logging.ts","../src/io-tools.ts","../src/validation.ts","../src/traversable.ts","../src/transactions.ts","../src/record/attributes/updates.ts","../src/record/attributes/any.ts","../src/record/attributes/owned.ts","../src/record/attributes/attrDef.ts","../src/record/attributes/date.ts","../src/record/attributes/basic.ts","../src/record/attributes/shared.ts","../src/record/attributes/index.ts","../src/record/io-mixin.ts","../src/record/record.ts","../src/record/index.ts","../src/collection/commons.ts","../src/collection/add.ts","../src/collection/remove.ts","../src/collection/set.ts","../src/collection/index.ts","../src/relations/commons.ts","../src/relations/from.ts","../src/relations/subsetOf.ts","../src/relations/store.ts","../src/index.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n"," /** Similar to underscore `_.defaults` */\nexport function defaults< T >( dest : T, ...sources : Object[] ) : T\nexport function defaults< T >( dest : T, source : Object ) : T {\n    for( var name in source ) {\n        if( source.hasOwnProperty( name ) && !dest.hasOwnProperty( name ) ) {\n            dest[ name ] = source[ name ];\n        }\n    }\n\n    if( arguments.length > 2 ){\n        for( let i = 2; i < arguments.length; i++ ){\n            const other = arguments[ i ];\n            other && defaults( dest, other );\n        }\n    }\n\n    return dest;\n}\n\n/** Check if value is raw JSON */\nexport function isValidJSON( value : any ) : boolean {\n    if( value === null ){\n        return true;\n    }\n\n    switch( typeof value ){\n    case 'number' :\n    case 'string' :\n    case 'boolean' :\n        return true;\n\n    case 'object':\n        var proto = Object.getPrototypeOf( value );\n\n        if( proto === Object.prototype || proto === Array.prototype ){\n            return every( value, isValidJSON );\n        }\n    }\n\n    return false;\n}\n\n/** Get the base class constructor function.\n * @param Class Subclass constructor function.\n * @returns Base class constructor function.\n */\nexport function getBaseClass( Class : Function ) {\n    return Object.getPrototypeOf( Class.prototype ).constructor\n}\n\nexport function assignToClassProto<T, K extends keyof T>( Class, definition : T, ...names : K[] ) : void {\n    for( let name of names ){\n        const value = definition[ name ];\n        value === void 0 || ( Class.prototype[ name ] = value );\n    }\n}\n\n/** Checks whenever given object is an empty hash `{}` */\nexport function isEmpty( obj : {} ) : boolean {\n    if( obj ){\n        for( let key in obj ){\n            if( obj.hasOwnProperty( key ) ){\n                return false;\n            }\n        }\n    }\n\n    return true;\n}\n\nexport type Iteratee = ( value : any, key? : string | number ) => any;\n\n/** @hidden */\nfunction someArray( arr : any[], fun : Iteratee ) : any {\n    let result;\n\n    for( let i = 0; i < arr.length; i++ ){\n        if( result = fun( arr[ i ], i ) ){\n            return result;\n        }\n    }\n}\n\n/** @hidden */\nfunction someObject( obj : {}, fun : Iteratee ) : any {\n    let result;\n\n    for( let key in obj ){\n        if( obj.hasOwnProperty( key ) ){\n            if( result = fun( obj[ key ], key ) ){\n                return result;\n            }\n        }\n    }\n}\n\n/** Similar to underscore `_.some` */\nexport function some( obj, fun : Iteratee ) : any {\n    if( Object.getPrototypeOf( obj ) === ArrayProto ){\n        return someArray( obj, fun );\n    }\n    else{\n        return someObject( obj, fun );\n    }\n}\n\n/** Similar to underscore `_.every` */\nexport function every( obj : { }, predicate : Iteratee ) : boolean {\n    return !some( obj, x => !predicate( x ) );\n}\n\n/** Similar to `getOwnPropertyDescriptor`, but traverse the whole prototype chain. */\nexport function getPropertyDescriptor( obj : {}, prop : string ) : PropertyDescriptor {\n    let desc : PropertyDescriptor;\n\n    for( let proto = obj; !desc && proto; proto = Object.getPrototypeOf( proto ) ) {\n        desc = Object.getOwnPropertyDescriptor( proto, prop );\n    }\n\n    return desc;\n}\n\n/** Similar to underscore `_.omit` */\nexport function omit( source : {}, ...rest : string[] ) : {}\nexport function omit( source ) : {} {\n    const dest = {}, discard = {};\n\n    for( let i = 1; i < arguments.length; i ++ ){\n        discard[ arguments[ i ] ] = true;\n    }\n\n    for( var name in source ) {\n        if( !discard.hasOwnProperty( name ) && source.hasOwnProperty( name ) ) {\n            dest[ name ] = source[ name ];\n        }\n    }\n\n    return dest;\n}\n\n/** map `source` object properties with a given function, and assign the result to the `dest` object.\n * When `fun` returns `undefined`, skip this value. \n */\nexport function transform< A, B >( dest : { [ key : string ] : A }, source : { [ key : string ] : B }, fun : ( value : B, key : string ) => A | void ) : { [ key : string ] : A } {\n    for( var name in source ) {\n        if( source.hasOwnProperty( name ) ) {\n            var value = fun( source[ name ], name );\n            value === void 0 || ( dest[ name ] = < A >value );\n        }\n    }\n\n    return dest;\n}\n\n/** @hidden */\nexport function fastAssign< A >( dest : A, source : {} ) : A {\n    for( var name in source ) {\n        dest[ name ] = source[ name ];\n    }\n\n    return dest;\n}\n\n/** @hidden */\nexport function fastDefaults< A >( dest : A, source : {} ) : A {\n    for( var name in source ) {\n        if( dest[ name ] === void 0 ){\n            dest[ name ] = source[ name ];\n        }\n    }\n\n    return dest;\n}\n\n/** Similar to underscore `_.extend` and `Object.assign` */\nexport function assign< T >( dest : T, ...sources : Object[] ) : T\nexport function assign< T >( dest : T, source : Object ) : T {\n    for( var name in source ) {\n        if( source.hasOwnProperty( name ) ) {\n            dest[ name ] = source[ name ];\n        }\n    }\n\n    if( arguments.length > 2 ){\n        for( let i = 2; i < arguments.length; i++ ){\n            const other = arguments[ i ];\n            other && assign( dest, other );\n        }\n    }\n\n    return dest;\n}\n\n/** Similar to underscore `_.keys` */\nexport function keys( o : any ) : string[]{\n    return o ? Object.keys( o ) : [];\n}\n\n/** Similar to underscore `_.once` */\nexport function once( func : Function ) : Function {\n    var memo, first = true;\n    return function() {\n        if ( first ) {\n            first = false;\n            memo = func.apply(this, arguments);\n            func = null;\n        }\n        return memo;\n    };\n}\n\n/** @hidden */\nconst ArrayProto = Array.prototype,\n      DateProto = Date.prototype,\n      ObjectProto = Object.prototype;\n\n/**\n * Determine whenever two values are not equal, deeply traversing \n * arrays and plain JS objects (hashes). Dates are compared by enclosed timestamps, all other\n * values are compared with strict comparison.\n */\nexport function notEqual( a : any, b : any) : boolean {\n    if( a === b ) return false;\n\n    if( a && b && typeof a == 'object' && typeof b == 'object' ) {\n        const protoA = Object.getPrototypeOf( a );\n\n        if( protoA !== Object.getPrototypeOf( b ) ) return true;\n\n        switch( protoA ){\n            case DateProto   : return +a !== +b;\n            case ArrayProto  : return arraysNotEqual( a, b );\n            case ObjectProto :\n            case null:\n                return objectsNotEqual( a, b );\n        }\n    }\n\n    return true;\n}\n\n/** @hidden */\nfunction objectsNotEqual( a, b ) {\n    const keysA = Object.keys( a );\n\n    if( keysA.length !== Object.keys( b ).length ) return true;\n\n    for( let i = 0; i < keysA.length; i++ ) {\n        const key = keysA[ i ];\n\n        if( !b.hasOwnProperty( key ) || notEqual( a[ key ], b[ key ] ) ) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\n/** @hidden */\nfunction arraysNotEqual( a, b ) {\n    if( a.length !== b.length ) return true;\n\n    for( let i = 0; i < a.length; i++ ) {\n        if( notEqual( a[ i ], b[ i ] ) ) return true;\n    }\n\n    return false;\n}\n\n/**\n * Create an object without Object prototype members except hasOwnProperty.\n * @param obj - optional parameter to populate the hash map from.\n */\nconst HashProto = Object.create( null );\nHashProto.hasOwnProperty = ObjectProto.hasOwnProperty;\n\nexport function hashMap( obj? ){\n    const hash = Object.create( HashProto );\n    return obj ? assign( hash, obj ) : hash;\n}","/*****************************************************************\n * Mixins engine and @define metaprogramming class extensions\n *\n * Vlad Balin & Volicon, (c) 2016-2017\n */\nimport { __extends } from 'tslib';\nimport { assign, defaults, getBaseClass, hashMap, transform } from './tools';\n\nexport interface Subclass< T > extends MixableConstructor {\n    new ( ...args ) : T\n    prototype : T\n}\n\nexport interface MixableConstructor extends Function{\n    __super__? : object;\n    mixins? : MixinsState;\n    onExtend? : ( BaseClass : Function ) => void;\n    onDefine? : ( definition : object, BaseClass : Function ) => void;\n    define? : ( definition? : object, statics? : object ) => MixableConstructor;\n    extend? : <T extends object>( definition? : T, statics? : object ) => Subclass<T>;\n}\n\nexport interface MixableDefinition {\n    mixins? : Mixin[]\n}\n\n/**\n * Base class, holding metaprogramming class extensions.\n * Supports mixins and Class.define metaprogramming method.\n */\nexport class Mixable {\n    static onExtend : ( BaseClass : Function ) => void;\n    static onDefine : ( definition : object, BaseClass : Function ) => object;    \n    static __super__ : object\n    static mixins : MixinsState;\n\n    /** \n     *  Must be called after inheritance and before 'define'.\n     */\n    static define( protoProps : MixableDefinition = {}, staticProps? : object ) : MixableConstructor {\n        const BaseClass : MixableConstructor = getBaseClass( this );\n\n        // Assign statics.\n        staticProps && assign( this, staticProps );\n\n        // Extract and apply mixins from the definition.\n        const { mixins, ...defineMixin } = protoProps;\n        mixins && this.mixins.merge( mixins );\n\n        // Unshift definition to the the prototype.\n        this.mixins.mergeObject( this.prototype, defineMixin, true );\n\n        // Unshift definition from statics to the prototype.\n        this.mixins.mergeObject( this.prototype, this.mixins.getStaticDefinitions( BaseClass ), true );\n\n        // Call onDefine hook, if it's present.\n        this.onDefine && this.onDefine( this.mixins.definitions, BaseClass );\n        \n        // Apply merge rules to inherited members. No mixins can be added after this point.\n        this.mixins.mergeInheritedMembers( BaseClass );\n\n        return this;\n    }\n\n    /** Backbone-compatible extend method to be used in ES5 and for backward compatibility */\n    static extend< T extends object>(spec? : T, statics? : {} ) : Subclass< T > {\n        let TheSubclass : Subclass< T >;\n\n        // 1. Create the subclass (ES5 compatibility shim).\n        // If constructor function is given...\n        if( spec && spec.hasOwnProperty( 'constructor' ) ){\n            // ...we need to manually call internal TypeScript __extend function. Hack! Hack!\n            TheSubclass = spec.constructor as any;\n            __extends( TheSubclass, this );\n        }\n        // Otherwise, create the subclall in usual way.\n        else{\n            TheSubclass = class Subclass extends this {} as any;\n        }\n\n        predefine( TheSubclass );\n        spec && TheSubclass.define( spec, statics );\n\n        return TheSubclass;\n    }\n}\n\n/** @decorator `@predefine` for forward definitions. Can be used with [[Mixable]] classes only.\n * Forwards the call to the [[Mixable.predefine]];\n */\nexport function predefine( Constructor : MixableConstructor ) : void {\n    const BaseClass : MixableConstructor = getBaseClass( Constructor );\n\n    // Legacy systems support\n    Constructor.__super__ = BaseClass.prototype;\n    \n    // Initialize mixins structures...\n    Constructor.define || MixinsState.get( Mixable ).populate( Constructor );\n\n    // Make sure Ctor.mixins are ready before the callback...\n    MixinsState.get( Constructor );\n\n    // Call extend hook.\n    Constructor.onExtend && Constructor.onExtend( BaseClass );\n}\n\n/** @decorator `@define` for metaprogramming magic. Can be used with [[Mixable]] classes only.\n *  Forwards the call to [[Mixable.define]].\n */\nexport function define( ClassOrDefinition : Function ) : void;\nexport function define( ClassOrDefinition : object ) : ClassDecorator;\nexport function define( ClassOrDefinition : object | MixableConstructor ){\n    // @define class\n    if( typeof ClassOrDefinition === 'function' ){\n        predefine( ClassOrDefinition );\n        ( ClassOrDefinition as MixableConstructor ).define();\n    }\n    // @define({ prop : val, ... }) class\n    else{\n        return function( Ctor : MixableConstructor ){\n            predefine( Ctor );\n            Ctor.define( ClassOrDefinition );\n        }\n    }\n}\n\nexport function definitions( rules : MixinMergeRules ) : ClassDecorator {\n    return ( Class : Function ) => {\n        const mixins = MixinsState.get( Class );\n        mixins.definitionRules = defaults( hashMap(), rules, mixins.definitionRules );\n    }\n}\n\n// Create simple property list decorator\nexport function propertyListDecorator( listName: string ) : PropertyDecorator {\n    return function propList(proto, name : string) {\n        const list = proto.hasOwnProperty( listName ) ?\n            proto[ listName ] : (proto[ listName ] = (proto[ listName ] || []).slice());  \n\n        list.push(name);\n    }\n}\n\nexport function definitionDecorator( definitionKey, value ){\n    return ( proto : object, name : string ) => {\n        MixinsState\n            .get( proto.constructor )\n            .mergeObject( proto, {\n                [ definitionKey ] : {\n                    [ name ] : value\n                }\n            });\n    }\n}\n\nexport class MixinsState {\n    mergeRules : MixinMergeRules;\n    definitionRules : MixinMergeRules;\n    definitions : object = {};\n    appliedMixins : Mixin[];\n\n    // Return mixins state for the class. Initialize if it's not exist.\n    static get( Class ) : MixinsState {\n        const { mixins } = Class;\n    \n        return mixins && Class === mixins.Class ? mixins :\n             Class.mixins = new MixinsState( Class );\n    }\n\n    constructor( public Class : MixableConstructor ){\n        const { mixins } = getBaseClass( Class );\n\n        this.mergeRules = ( mixins && mixins.mergeRules ) || hashMap();\n        this.definitionRules = ( mixins && mixins.definitionRules ) || hashMap();\n        this.appliedMixins = ( mixins && mixins.appliedMixins ) || [];\n    }\n\n    getStaticDefinitions( BaseClass : Function ){\n        const definitions = hashMap(),\n            { Class } = this;\n\n        return transform( definitions, this.definitionRules, ( rule, name ) =>{\n            if( BaseClass[ name ] !== Class[ name ]){\n                return Class[ name ];\n            }\n        });\n    }\n\n    merge( mixins : Mixin[] ){\n        const proto      = this.Class.prototype,\n            { mergeRules } = this;\n\n        // Copy applied mixins array as it's going to be updated.\n        const appliedMixins = this.appliedMixins = this.appliedMixins.slice();\n\n        // Apply mixins in sequence...\n        for( let mixin of mixins ) {\n            // Mixins array should be flattened.\n            if( Array.isArray( mixin ) ) {\n                this.merge( mixin );\n            }\n            // Don't apply mixins twice.\n            else if( appliedMixins.indexOf( mixin ) < 0 ){\n                appliedMixins.push( mixin );\n\n                // For constructors, merge _both_ static and prototype members.\n                if( typeof mixin === 'function' ){\n                    // Merge static members\n                    this.mergeObject( this.Class, mixin );\n\n                    // merge definitionRules and mergeRules\n                    const sourceMixins = ( mixin as any ).mixins;\n                    if( sourceMixins ){\n                        this.mergeRules = defaults( hashMap(), this.mergeRules, sourceMixins.mergeRules );\n                        this.definitionRules = defaults( hashMap(), this.definitionRules, sourceMixins.definitionRules );\n                        this.appliedMixins = this.appliedMixins.concat( sourceMixins.appliedMixins );\n                    }\n\n                    // Prototypes are merged according with rules.\n                    this.mergeObject( proto, mixin.prototype );\n                }\n                // Handle plain object mixins.\n                else {\n                    this.mergeObject( proto, mixin );\n                }\n            }\n        }\n    }\n\n    populate( ...ctors : Function[] ){\n        for( let Ctor of ctors ) {\n            MixinsState.get( Ctor ).merge([ this.Class ]);\n        }\n    }\n\n    mergeObject( dest : object, source : object, unshift? : boolean ) {\n        forEachOwnProp( source, name => {\n            const sourceProp = Object.getOwnPropertyDescriptor( source, name );\n            let rule : MixinMergeRule;\n\n            if( rule = this.definitionRules[ name ] ){\n                assignProperty( this.definitions, name, sourceProp, rule, unshift );\n            }\n\n            if( !rule || rule === mixinRules.protoValue  ){\n                assignProperty( dest, name, sourceProp, this.mergeRules[ name ], unshift );\n            }\n        });\n    }\n\n    mergeInheritedMembers( BaseClass : Function ){\n        const { mergeRules, Class } = this;\n\n        if( mergeRules ){\n            const proto = Class.prototype,\n                baseProto = BaseClass.prototype;\n\n            for( let name in mergeRules ) {\n                const rule = mergeRules[ name ];\n\n                if( proto.hasOwnProperty( name ) && name in baseProto ){\n                    proto[ name ] = resolveRule( proto[ name ], baseProto[ name ], rule );\n                }\n            }\n        }\n    }\n}\n\nconst dontMix = {\n    function : hashMap({\n        length : true,\n        prototype : true,\n        caller : true,\n        arguments : true,\n        name : true,\n        __super__ : true\n    }),\n    \n    object : hashMap({\n        constructor : true\n    })    \n}\n\nfunction forEachOwnProp( object : object, fun : ( name : string ) => void ){\n    const ignore = dontMix[ typeof object ];\n\n    for( let name of Object.keys( object ) ) {\n        ignore[ name ] || fun( name );\n    }\n}\n\nexport interface MixinMergeRules {\n    [ name : string ] : MixinMergeRule\n}\n\nexport type MixinMergeRule = ( a : any, b : any ) => any\nexport type Mixin = { [ key : string ] : any } | Function\n\n// @mixins( A, B, ... ) decorator.\nexport interface MixinRulesDecorator {\n    ( rules : MixinMergeRules ) : ClassDecorator\n    value( a : object, b : object) : object;\n    protoValue( a : object, b : object) : object;\n    merge( a : object, b : object ) : object;\n    pipe( a: Function, b : Function ) : Function;\n    defaults( a: Function, b : Function ) : Function;\n    classFirst( a: Function, b : Function ) : Function;\n    classLast( a: Function, b : Function ) : Function;\n    every( a: Function, b : Function ) : Function;\n    some( a: Function, b : Function ) : Function;\n}\n\nexport const mixins = ( ...list : Mixin[] ) => (\n    ( Class : Function ) => MixinsState.get( Class ).merge( list )\n);\n\n// @mixinRules({ name : rule, ... }) decorator.\nexport const mixinRules = ( ( rules : MixinMergeRules ) => (\n    ( Class : Function ) => {\n        const mixins = MixinsState.get( Class );\n        mixins.mergeRules = defaults( rules, mixins.mergeRules );\n    }\n) ) as MixinRulesDecorator;\n\n// Pre-defined mixin merge rules\n\nmixinRules.value = ( a, b ) => a;\n\nmixinRules.protoValue = ( a, b ) => a;\n\n// Recursively merge members\nmixinRules.merge = ( a, b ) => defaults( {}, a, b );\n\n    // Execute methods in pipe, with the class method executed last.\nmixinRules.pipe = ( a, b ) => (\n    function( x : any ) : any {\n        return a.call( this, b.call( this, x ) );\n    }\n);\n\n    // Assume methods return an object, and merge results with defaults (class method executed first)\nmixinRules.defaults = ( a : Function, b : Function ) => (\n    function() : object {\n        return defaults( a.apply( this, arguments ), b.apply( this, arguments ) );\n    }\n);\n\n// Execute methods in sequence staring with the class method.\nmixinRules.classFirst = ( a : Function, b : Function ) => (\n    function() : void {\n        a.apply( this, arguments );\n        b.apply( this, arguments );\n    }\n);\n\n    // Execute methods in sequence ending with the class method.\nmixinRules.classLast = ( a : Function, b : Function ) => (\n    function() : void {\n        b.apply( this, arguments );\n        a.apply( this, arguments );\n    }\n)\n\n    // Execute methods in sequence returning the first falsy result.\nmixinRules.every = ( a : Function, b : Function ) =>(\n    function() : any {\n        return a.apply( this, arguments ) && b.apply( this, arguments );\n    }\n);\n    // Execute methods in sequence returning the first truthy result.\nmixinRules.some = ( a : Function, b : Function ) =>(\n    function() : any {\n        return a.apply( this, arguments ) || b.apply( this, arguments );\n    }\n);\n\n/**\n * Helpers\n */\n\nfunction assignProperty( dest : object, name : string, sourceProp : PropertyDescriptor, rule : MixinMergeRule, unshift? : boolean ){\n// Destination prop is defined, thus the merge rules must be applied.\n    if( dest.hasOwnProperty( name ) ){\n        const destProp = Object.getOwnPropertyDescriptor( dest, name );\n\n        if( destProp.configurable && 'value' in destProp ){\n            dest[ name ] = unshift ?\n                resolveRule( sourceProp.value, destProp.value, rule ) :\n                resolveRule( destProp.value, sourceProp.value, rule ) ;\n        }\n    }\n    // If destination is empty, just copy the prop over.\n    else{\n        Object.defineProperty( dest, name, sourceProp );\n    }\n}\n\nfunction resolveRule( dest, source, rule : MixinMergeRule ){\n    // When destination is empty, take the source.\n    if( dest === void 0 ) return source;\n\n    // In these cases we take non-empty destination:\n    if( !rule || source === void 0 ) return dest;\n\n    // In other cases we must merge values.\n    return rule( dest, source );\n}","import { once as _once } from './tools'\n\n/*******************\n * Prebuilt events map, used for optimized bulk event subscriptions.\n *\n * const events = new EventMap({\n *      'change' : true, // Resend this event from self as it is.\n *      'change:attr' : 'localTargetFunction',\n *      'executedInTargetContext' : function(){ ... }\n *      'executedInNativeContext' : '^props.handler'\n * })\n */\n/** @hidden */\nexport interface EventsDefinition {\n    [ events : string ] : Function | string | boolean\n}\n\n/** @hidden */\nexport class EventMap {\n    handlers : EventDescriptor[] = [];\n\n    constructor( map? : EventsDefinition | EventMap ){\n        if( map ){\n            if( map instanceof EventMap ){\n                this.handlers = map.handlers.slice();\n            }\n            else{\n                map && this.addEventsMap( map );\n            }\n        }\n    }\n\n    merge( map : EventMap ){\n        this.handlers = this.handlers.concat( map.handlers );\n    }\n\n    addEventsMap( map : EventsDefinition ){\n        for( let names in map ){\n            this.addEvent( names, map[ names ] )\n        }\n    }\n\n    bubbleEvents( names : string ){\n        for( let name of names.split( eventSplitter ) ){\n            this.addEvent( name, getBubblingHandler( name ) );\n        }\n    }\n\n    addEvent( names : string, callback : Function | string | boolean ){\n        const { handlers } = this;\n\n        for( let name of names.split( eventSplitter ) ){\n            handlers.push( new EventDescriptor( name, callback ) );\n        }\n    }\n\n    subscribe( target : {}, source : EventSource ){\n        for( let event of this.handlers ){\n            on( source, event.name, event.callback, target );\n        }\n    }\n\n    unsubscribe( target : {}, source : EventSource ){\n        for( let event of this.handlers ){\n            off( source, event.name, event.callback, target );\n        }\n    }\n}\n\n/** @hidden */\nexport class EventDescriptor {\n    callback : Function\n\n    constructor(\n        public name : string,\n        callback : Function | string | boolean\n    ){\n        if( callback === true ){\n            this.callback = getBubblingHandler( name );\n        }\n        else if( typeof callback === 'string' ){\n            this.callback =\n                function localCallback(){\n                    const handler = this[ callback ];\n                    handler && handler.apply( this, arguments );\n                };\n        }\n        else{\n            this.callback = <Function>callback;\n        }\n    }\n}\n\n/** @hidden */\nconst _bubblingHandlers = {};\n\n/** @hidden */\nfunction getBubblingHandler( event : string ){\n    return _bubblingHandlers[ event ] || (\n        _bubblingHandlers[ event ] = function( a?, b?, c?, d?, e? ){\n            if( d !== void 0 || e !== void 0 ) trigger5( this, event, a, b, c, d, e );\n            if( c !== void 0 ) trigger3( this, event, a, b, c );\n            else trigger2( this, event, a, b );\n        }\n    );\n}\n\n/** @hidden */\nexport interface HandlersByEvent {\n    [ name : string ] : EventHandler\n}\n\n/** @hidden */\nexport class EventHandler {\n    constructor( public callback : Callback, public context : any, public next = null ){}\n}\n\n/** @hidden */\nfunction listOff( _events : HandlersByEvent, name : string, callback : Callback, context : any ){\n    const head = _events[ name ];\n\n    let filteredHead, prev;\n\n    for( let ev = head; ev; ev = ev.next ){\n        // Element must be kept\n        if( ( callback && callback !== ev.callback && callback !== ev.callback._callback ) ||\n            ( context && context !== ev.context ) ){\n            \n            prev = ev;\n            filteredHead || ( filteredHead = ev );\n        }\n        // Element must be skipped\n        else{\n            if( prev ) prev.next = ev.next;\n        }\n    }\n\n    if( head !== filteredHead ) _events[ name ] = filteredHead;\n}\n\n/** @hidden */\nfunction listSend2( head : EventHandler, a, b ){\n    for( let ev = head; ev; ev = ev.next ) ev.callback.call( ev.context, a, b );\n}\n\n/** @hidden */\nfunction listSend3( head : EventHandler, a, b, c ){\n    for( let ev = head; ev; ev = ev.next ) ev.callback.call( ev.context, a, b, c );\n}\n\n/** @hidden */\nfunction listSend4( head : EventHandler, a, b, c, d ){\n    for( let ev = head; ev; ev = ev.next ) ev.callback.call( ev.context, a, b, c, d );\n}\n\n/** @hidden */\nfunction listSend5( head : EventHandler, a, b, c, d, e ){\n    for( let ev = head; ev; ev = ev.next ) ev.callback.call( ev.context, a, b, c, d, e );\n}\n\n/** @hidden */\nfunction listSend6( head : EventHandler, a, b, c, d, e, f ){\n    for( let ev = head; ev; ev = ev.next ) ev.callback.call( ev.context, a, b, c, d, e, f );\n}\n\n/** @hidden */\nexport interface Callback extends Function {\n    _callback? : Function\n}\n\n/** @hidden */\nexport function on( source : EventSource, name : string, callback : Callback, context? : any ) : void {\n    if( callback ){\n        const _events = source._events || ( source._events = Object.create( null ) );\n        _events[ name ] = new EventHandler( callback, context, _events[ name ] );\n    }\n}\n\n/** @hidden */\nexport function once( source : EventSource, name : string, callback : Callback, context? : any ) : void {\n    if( callback ){\n        const once : Callback = _once( function(){\n            off( source, name, once );\n            callback.apply(this, arguments);\n        });\n\n        once._callback = callback;\n        on( source, name, once, context );\n    }\n}\n\n/** @hidden */\nexport function off( source : EventSource, name? : string, callback? : Callback, context? : any ) : void {\n    const { _events } = source;\n    if( _events ){\n        if( callback || context ) {\n            if( name ){\n                listOff( _events, name, callback, context );\n            }\n            else{\n                for( let name in _events ){\n                    listOff( _events, name, callback, context );\n                }\n            }\n        }\n        else if( name ){\n            _events[ name ] = void 0;\n        }\n        else{\n            source._events = void 0;\n        }\n    }\n}\n\n/** @hidden */\nexport interface EventSource {\n    _events : HandlersByEvent\n}\n\n/** @hidden */\nconst eventSplitter = /\\s+/;\n\n/** @hidden */\nexport function strings( api : ApiEntry, source : EventSource, events : string, callback : Callback, context ){\n    if( eventSplitter.test( events ) ){\n        const names = events.split( eventSplitter );\n        for( let name of names ) api( source, name, callback, context );\n    }\n    else api( source, events, callback, context );\n}\n\n/** @hidden */\nexport type ApiEntry = ( source : EventSource, event : string, callback : Callback, context? : any ) => void\n\n/*********************************\n * Event-triggering API\n */\n\n/** @hidden */\nexport function trigger2( self : EventSource, name : string, a, b ) : void {\n    const { _events } = self;\n    if( _events ){\n        const queue = _events[ name ],\n            { all } = _events;\n\n        listSend2( queue, a, b );\n        listSend3( all, name, a, b );\n    }\n};\n\n/** @hidden */\nexport function trigger3( self : EventSource, name : string, a, b, c ) : void{\n    const { _events } = self;\n    if( _events ){\n        const queue = _events[ name ],\n            { all } = _events;\n\n        listSend3( queue, a, b, c );\n        listSend4( all, name, a, b, c );\n    }\n};\n\n/** @hidden */\nexport function trigger5( self : EventSource, name : string, a, b, c, d, e ) : void{\n    const { _events } = self;\n    if( _events ){\n        const queue = _events[ name ],\n            { all } = _events;\n\n        listSend5( queue, a, b, c, d, e );\n        listSend6( all, name, a, b, c, d, e );\n    }\n};","import { define, mixins, Mixable, Mixin, MixableConstructor, MixinsState, mixinRules, definitions, MixinMergeRules } from './mixins'\nimport { omit, transform } from './tools'\nimport { EventMap, EventsDefinition, EventSource, HandlersByEvent } from './eventsource'\nimport * as _eventsApi from './eventsource'\n\nconst { EventHandler, strings, on, off, once, trigger5, trigger2, trigger3 } = _eventsApi;\n\n/** @hidden */\nconst eventSplitter = /\\s+/;\n\n/** @hidden */\nlet _idCount = 0;\n\n/** @hidden */\nfunction uniqueId() : string {\n    return 'l' + _idCount++;\n}\n\nexport { EventMap, EventsDefinition }\n\nexport interface MessengerDefinition {\n    _localEvents? : EventMap\n    localEvents? : EventsDefinition\n    properties? : PropertyMap\n    [ name : string ] : any\n}\n\nexport interface PropertyMap {\n    [ name : string ] : Property\n}\n\nexport type Property = PropertyDescriptor | ( () => any )\n\n/** @hidden */\nexport interface MessengersByCid {\n    [ cid : string ] : Messenger\n}\n\n/** @hidden */\nexport type CallbacksByEvents = { [ events : string ] : Function }\n\n/*************************\n * Messenger is mixable class with capabilities of sending and receiving synchronous events.\n * This class itself can serve as both mixin and base class.\n */\n\n@define\n@definitions({\n    properties : mixinRules.merge,\n    localEvents : mixinRules.merge\n})\nexport class Messenger implements Mixable, EventSource {\n    // Define extendable mixin static properties.\n    static __super__ : object;\n    static mixins : MixinsState;\n    static onExtend : ( BaseClass : Function ) => void;\n    static define : ( definition? : MessengerDefinition, statics? : object ) => MixableConstructor;\n    static extend : ( definition? : MessengerDefinition, statics? : object ) => MixableConstructor;\n    static onDefine({ localEvents, _localEvents, properties } : MessengerDefinition, BaseClass? : typeof Mixable ){\n        // Handle localEvents definition\n        if( localEvents || _localEvents ){\n            const eventsMap = new EventMap( this.prototype._localEvents );\n\n            localEvents && eventsMap.addEventsMap( localEvents );\n            _localEvents && eventsMap.merge( _localEvents );\n            \n            this.prototype._localEvents = eventsMap;\n        }\n\n        // Handle properties definitions...\n        if( properties ){\n            Object.defineProperties( this.prototype, transform( {}, <PropertyMap>properties, toPropertyDescriptor ) );\n        }\n    }\n\n    /** @hidden */ \n    _events : HandlersByEvent = void 0;\n\n    /** @hidden */ \n    _listeningTo : MessengersByCid = void 0\n\n    /** Unique client-only id. */\n    cid : string\n\n    /** @hidden Prototype-only property to manage automatic local events subscription */ \n    _localEvents : EventMap\n\n    /** @hidden */ \n    constructor(){\n        this.cid = uniqueId();\n        this.initialize.apply( this, arguments );\n\n        // TODO: local events subscribe?\n    }\n\n    /** Method is called at the end of the constructor */\n    initialize() : void {}\n    \n    on( events : string | CallbacksByEvents, callback, context? ) : this {\n        if( typeof events === 'string' ) strings( on, this, events, callback, context );\n        else for( let name in events ) strings( on, this, name, events[ name ], context || callback );\n\n        return this;\n    }\n\n    once( events : string | CallbacksByEvents, callback, context? ) : this {\n        if( typeof events === 'string' ) strings( once, this, events, callback, context );\n        else for( let name in events ) strings( once, this, name, events[ name ], context || callback );\n\n        return this;\n    }\n\n    off( events? : string | CallbacksByEvents, callback?, context? ) : this {\n        if( !events ) off( this, void 0, callback, context );\n        else if( typeof events === 'string' ) strings( off, this, events, callback, context );\n        else for( let name in events ) strings( off, this, name, events[ name ], context || callback );\n\n        return this;\n    }\n\n    // Trigger one or many events, firing all bound callbacks. Callbacks are\n    // passed the same arguments as `trigger` is, apart from the event name\n    // (unless you're listening on `\"all\"`, which will cause your callback to\n    // receive the true name of the event as the first argument).\n    trigger(name : string, a?, b?, c?, d?, e? ) : this {\n        if( d !== void 0 || e !== void 0 ) trigger5( this, name, a, b, c, d, e );\n        else if( c !== void 0 ) trigger3( this, name, a, b, c );\n        else trigger2( this, name, a, b );\n        return this;\n    }\n\n    listenTo( source : Messenger, a : string | CallbacksByEvents, b? : Function ) : this {\n        if( source ){\n            addReference( this, source );\n            source.on( a, !b && typeof a === 'object' ? this : b, this );\n        }\n\n        return this;\n    }\n\n    listenToOnce( source : Messenger, a : string | CallbacksByEvents, b? : Function ) : this {\n        if( source ){\n            addReference( this, source );\n            source.once( a, !b && typeof a === 'object' ? this : b, this );\n        }\n\n        return this;\n    }\n\n    stopListening( a_source? : Messenger, a? : string | CallbacksByEvents, b? : Function ) : this {\n        const { _listeningTo } = this;\n        if( _listeningTo ){\n            const removeAll = !( a || b ),\n                  second = !b && typeof a === 'object' ? this : b;\n\n            if( a_source ){\n                const source = _listeningTo[ a_source.cid ];\n                if( source ){\n                    if( removeAll ) delete _listeningTo[ a_source.cid ];\n                    source.off( a, second, this );\n                }\n            }\n            else if( a_source == null ){\n                for( let cid in _listeningTo ) _listeningTo[ cid ].off( a, second, this );\n\n                if( removeAll ) ( this._listeningTo = void 0 );\n            }\n        }\n\n        return this;\n    }\n\n    /**\n     * Destructor. Stops messenger from listening to all objects,\n     * and stop others from listening to the messenger. \n     */\n    _disposed : boolean\n\n    dispose() : void {\n        if( this._disposed ) return;\n\n        this.stopListening();\n        this.off();\n\n        this._disposed = true;\n    }\n}\n\n/**\n * Backbone 1.2 API conformant Events mixin.\n */\nexport const Events : Messenger = <Messenger> omit( Messenger.prototype, 'constructor', 'initialize' );\n\n/**\n * Messenger Private Helpers \n */\n\nfunction toPropertyDescriptor( x : Property ) : PropertyDescriptor {\n    if( x ){\n        return typeof x === 'function' ? { get : < () => any >x } : <PropertyDescriptor> x;\n    }\n}\n\n/** @hidden */\nfunction addReference( listener : Messenger, source : Messenger ){\n      const listeningTo = listener._listeningTo || (listener._listeningTo = Object.create( null ) ),\n            cid = source.cid || ( source.cid = uniqueId() );\n\n      listeningTo[ cid ] = source;\n}","import { Messenger } from './events'\nimport { define } from './mixins';\n\nexport type LogLevel = 'error' | 'warn' | 'debug' | 'info' | 'log';\nexport type LoggerEventHandler = ( topic : string, msg : string, props : object )  => void;\n\nexport const isProduction = typeof process !== 'undefined' && process.env && process.env.NODE_ENV === 'production',\n    logEvents : LogLevel[] =  isProduction ?\n        [ 'error', 'info' ] :\n        [ 'error', 'warn', 'debug', 'info', 'log' ];\n\n@define\nexport class Logger extends Messenger {\n    constructor(){\n        super();\n\n        if( typeof console !== 'undefined' ) {\n            for( let event of logEvents ){\n                this.on( event, ( topic, msg, props ) => {\n                    const args = [ `[${topic}] ${msg}` ];\n\n                    for( let name in props ){\n                        args.push( `\\n\\t${name}:`, toString( props[ name ] ) );\n                    }\n            \n                    console[ event ].apply( console, args );\n                });\n            }\n        }\n    }\n\n    trigger : ( level : LogLevel, topic : string, message : string, props? : object ) => this;\n    off : ( event? : LogLevel ) => this;\n    on : ( handlers : { [ name in LogLevel ] : LoggerEventHandler } | LogLevel, handler? : LoggerEventHandler ) => this\n}\n\n/**\n * Convert objects to the plain text friendly format.\n * primitives as in JSON.\n */\nlet toString = typeof window === 'undefined' ? \n    something => {\n        if( something && typeof something === 'object' ){\n            const { __inner_state__ } = something,\n                value = __inner_state__ || something,\n                isArray = Array.isArray( value );\n\n            const body = isArray ? `[ length = ${ value.length } ]` : `{ ${ Object.keys( value ).join( ', ' )} }`;\n\n            return something.constructor.name + ' ' + body;\n        }\n\n        return something;\n    }\n    : x => x;\n\nexport const logRouter = new Logger();\nexport const log : typeof logRouter.trigger = logRouter.trigger.bind( logRouter );","export interface IONode {\n    _endpoint : IOEndpoint\n    _ioPromise : IOPromise< this >\n}\n\nexport interface IOPromise<T> extends Promise<T> {\n    abort? : () => void\n}\n\nexport interface IOEndpoint {\n    list( options : IOOptions, collection? ) : IOPromise<any>\n    create( json : any, options : IOOptions, record? ) : IOPromise<any>\n    update( id : string | number, json :any, options : IOOptions, record? ) : IOPromise<any>\n    read( id : string | number, options : IOOptions, record? ) : IOPromise<any>\n    destroy( id : string | number, options : IOOptions, record? ) : IOPromise<any>\n    subscribe( events : IOEvents, collection? ) : IOPromise<any>\n    unsubscribe( events : IOEvents, collection? ) : void\n}\n\nexport interface IOOptions {\n    ioUpdate? : boolean\n}\n\nexport interface IOEvents {\n    updated? : ( json : any ) => void\n    removed? : ( json : any ) => void\n}\n\nexport function getOwnerEndpoint( self ) : IOEndpoint {\n    // Check if we are the member of the collection...\n    const { collection } = self;\n    if( collection ){\n        return getOwnerEndpoint( collection );\n    }\n\n    // Now, if we're the member of the model...\n    if( self._owner ){\n        const { _endpoints } = self._owner;\n        return _endpoints && _endpoints[ self._ownerKey ];\n    }\n}\n\n/**\n * Create abortable promise.\n * Adds `promise.abort()` function which rejects the promise by default\n * initialize() function takes third optional argument `abort : ( resolve, reject ) => void`,\n * which can be used to add custom abort handling.\n */\ndeclare var Promise: PromiseConstructorLike;\n\nexport function createIOPromise( initialize : InitIOPromise ) : IOPromise<any>{\n    let resolve, reject, onAbort;\n\n    function abort( fn ){\n        onAbort = fn;\n    }\n\n    const promise : IOPromise<any> = new Promise( ( a_resolve, a_reject ) =>{\n        reject = a_reject;\n        resolve = a_resolve;\n        initialize( resolve, reject, abort );\n    }) as IOPromise<any>;\n\n    promise.abort = () => {\n        onAbort ? onAbort( resolve, reject ) : reject( new Error( \"I/O Aborted\" ) );\n    }\n\n    return promise;\n}\n\nexport type InitIOPromise = ( resolve : ( x? : any ) => void, reject : ( x? : any ) => void, abort? : ( fn : Function ) => void ) => void;\n\nexport function startIO( self : IONode, promise : IOPromise<any>, options : IOOptions, thenDo : ( json : any ) => any ) : IOPromise<any> {\n    // Stop pending I/O first...\n    abortIO( self );\n\n    // Mark future update transaction as IO transaction.\n    options.ioUpdate = true;\n\n    self._ioPromise = promise\n        .then( resp => {\n            self._ioPromise = null;\n    \n            const result = thenDo ? thenDo( resp ) : resp;\n                \n            triggerAndBubble( self, 'sync', self, resp, options );\n                \n            return result;\n        } )  \n        .catch( err => {\n            self._ioPromise = null;\n\n            console.error( err );\n            \n            triggerAndBubble( self, 'error', self, err, options );\n            \n            throw err;\n        } ) as IOPromise<any>;\n\n    self._ioPromise.abort = promise.abort;\n\n    return self._ioPromise;\n}\n\nexport function abortIO( self : IONode ){\n    if( self._ioPromise && self._ioPromise.abort ){\n        self._ioPromise.abort();\n        self._ioPromise = null;\n    }\n}\n\nexport function triggerAndBubble( eventSource, ...args ){\n    eventSource.trigger.apply( eventSource, args );\n    const { collection } = eventSource;\n    collection && collection.trigger.apply( collection, args ); \n}","export interface ChildrenErrors {\n    [ key : string ] : ValidationError | any\n} \n\nexport interface Validatable {\n    _validateNested( errors : ChildrenErrors ) : number;\n    validate( self : any ) : any\n    get( key : string ) : any\n}\n\n// Validation error object.\nexport class ValidationError {\n    // Invalid nested object keys \n    nested : ChildrenErrors \n    length : number\n\n    // Local error\n    error : any\n\n    constructor( obj : Validatable ){\n        this.length = obj._validateNested( this.nested = {} );\n\n        if( this.error = obj.validate( obj ) ){\n            this.length++;\n        }\n    }\n\n    each( iteratee : ( value : any, key : string ) => void ) : void {\n        const { error, nested } = this;\n\n        if( error ) iteratee( error, null );\n\n        for( const key in nested ){\n            iteratee( nested[ key ], key );\n        }\n    }\n\n    eachError( iteratee : ( error : any, key : string, object : Validatable ) => void, object : Validatable ) : void {\n        this.each( ( value : any, key : string ) => {\n            if( value instanceof ValidationError ){\n                (<ValidationError>value).eachError( iteratee, object.get( key ) );\n            }\n            else{\n                iteratee( value, key, object );\n            }\n        });\n    }\n}","/**\n * Some sketches for reference resolution.\n *\n * \n * a : Model.from( '~collection' )\n * \n * We need two functions. One for get, and one for compile. \n */\nexport interface Traversable {\n    getStore() : Traversable\n    getOwner() : Traversable\n    get( key : string ) : any \n}\n\nconst referenceMask =  /\\^|(store\\.[^.]+)|([^.]+)/g;\n\n// Compile reference to function\nexport type ResolveReference = ( root : Traversable ) => any;  \n\nexport class CompiledReference {\n    resolve : ResolveReference\n    tail : string\n    local : boolean\n\n    constructor( reference : string, splitTail : boolean = false ){\n        const path = reference\n                        .match( referenceMask )\n                        .map( key => {\n                            if( key === '^' || key === 'owner' ) return 'getOwner()';\n\n                            if( key[ 0 ] === '~' ) return `getStore().get(\"${ key.substr( 1 ) }\")`;\n\n                            if( key.indexOf( 'store.' ) === 0 ) return `getStore().get(\"${ key.substr( 6 ) }\")`;\n                            \n                            return key;\n                        } );\n               \n        this.tail = splitTail && path.pop();\n        this.local = !path.length;\n        \n        this.resolve = <any> new Function( 'self', `\n            var v = self.${ path.shift() };\n                           \n            ${ path.map( x => `\n                v = v && v.${ x };\n            `).join('')}\n\n            return v;\n        ` );\n    }\n}\n\nexport function resolveReference( root : Traversable, reference : string, action : ( object, key : string ) => any ) : any {\n    const path = reference.match( referenceMask ),\n          skip = path.length - 1;\n    \n    let self = root;\n\n    for( var i = 0; i < skip; i++ ){\n        const key = path[ i ];\n        switch( key ){\n            case '~' : self = self.getStore(); break;\n            case '^' : self = self.getOwner(); break;\n            default  : self = self.get( key );\n        }\n\n        // Do nothing if object on the path doesn't exist.\n        if( !self ) return;\n    }\n\n    return action( self, path[ skip ] );\n}","import { Messenger, CallbacksByEvents, MessengersByCid, MixinsState, MixinMergeRules, MessengerDefinition, tools, mixins, mixinRules, definitions, eventsApi, define, Subclass } from './object-plus'\nimport { ValidationError, Validatable, ChildrenErrors } from './validation'\nimport { Traversable, resolveReference } from './traversable'\nimport { IOEndpoint, IOPromise, IONode, abortIO } from './io-tools'\n\nconst { assign } = tools,\n      { trigger2, trigger3, on, off } = eventsApi;\n/***\n * Abstract class implementing ownership tree, tho-phase transactions, and validation. \n * 1. createTransaction() - apply changes to an object tree, and if there are some events to send, transaction object is created.\n * 2. transaction.commit() - send and process all change events, and close transaction.\n */\n\n/** @private */\nexport interface TransactionalDefinition extends MessengerDefinition {\n    endpoint? : IOEndpoint\n}\n\nexport enum ItemsBehavior {\n    share       = 0b0001,\n    listen      = 0b0010,\n    persistent  = 0b0100\n}\n\n// Transactional object interface\n@define\n@definitions({\n    endpoint : mixinRules.value\n})\n@mixins( Messenger )\nexport abstract class Transactional implements Messenger, IONode, Validatable, Traversable {\n    // Mixins are hard in TypeScript. We need to copy type signatures over...\n    // Here goes 'Mixable' mixin.\n    static endpoint : IOEndpoint;\n    static __super__ : object;\n    static mixins : MixinsState;\n    static define : ( definition? : TransactionalDefinition, statics? : object ) => typeof Transactional;\n    static extend : <T extends TransactionalDefinition>( definition? : T, statics? : object ) => any;\n\n    static onDefine( definitions : TransactionalDefinition, BaseClass : typeof Transactional ){\n        if( definitions.endpoint ) this.prototype._endpoint = definitions.endpoint;\n        Messenger.onDefine.call( this, definitions, BaseClass );\n    };\n\n    static onExtend( BaseClass : typeof Transactional ) : void {\n        // Make sure we don't inherit class factories.\n        if( BaseClass.create === this.create ) {\n            this.create = Transactional.create;\n        }\n    }\n\n    // Define extendable mixin static properties.\n    static create( a : any, b? : any ) : Transactional {\n        return new (this as any)( a, b );\n    }\n\n    /** Generic class factory. May be overridden for abstract classes. Not inherited. */\n    on : ( events : string | CallbacksByEvents, callback, context? ) => this\n    once : ( events : string | CallbacksByEvents, callback, context? ) => this\n    off : ( events? : string | CallbacksByEvents, callback?, context? ) => this\n    trigger      : (name : string, a?, b?, c?, d?, e? ) => this\n\n    stopListening : ( source? : Messenger, a? : string | CallbacksByEvents, b? : Function ) => this\n    listenTo : ( source : Messenger, a : string | CallbacksByEvents, b? : Function ) => this\n    listenToOnce : ( source : Messenger, a : string | CallbacksByEvents, b? : Function ) => this\n    \n    _disposed : boolean;\n\n    // State accessor. \n    readonly __inner_state__ : any;\n\n    // Shared modifier (used by collections of shared models)\n    _shared? : number; \n    \n    dispose() : void {\n        if( this._disposed ) return;\n        \n        abortIO( this );\n        this._owner = void 0;\n        this._ownerKey = void 0;\n        this.off();\n        this.stopListening();\n        this._disposed = true;\n    }\n\n    // Must be called at the end of the constructor in the subclass.\n    initialize() : void {}\n\n    /** @private */\n    _events : eventsApi.HandlersByEvent = void 0;\n\n    /** @private */\n    _listeningTo : MessengersByCid\n\n    /** @private */\n    _localEvents : eventsApi.EventMap\n\n    cid : string\n    cidPrefix : string\n\n    static shared : any;\n\n    // Unique version token replaced on change\n    /** @private */\n    _changeToken : {} = {}\n\n    // true while inside of the transaction\n    /** @private */\n    _transaction : boolean = false;\n\n    // Holds current transaction's options, when in the middle of transaction and there're changes but is an unsent change event\n    /** @private */\n    _isDirty  : TransactionOptions = null;\n\n    // Backreference set by owner (Record, Collection, or other object)\n    /** @private */\n    _owner : Owner = void 0;\n\n    // Key supplied by owner. Used by record to identify attribute key.\n    // Only collections doesn't set the key, which is used to distinguish collections.\n    /** @private */  \n    _ownerKey : string = void 0;\n\n    // Name of the change event\n    /** @private */\n    _changeEventName : string\n\n    /**\n     * Subsribe for the changes.\n     */\n    onChanges( handler : Function, target? : Messenger ){\n        on( this, this._changeEventName, handler, target );\n    }\n\n    /**\n     * Unsubscribe from changes.\n     */\n    offChanges( handler? : Function, target? : Messenger ){\n        off( this, this._changeEventName, handler, target );\n    }\n\n    /**\n     * Listen to changes event. \n     */\n    listenToChanges( target : Transactional, handler ){\n        this.listenTo( target, target._changeEventName, handler );\n    }\n\n    constructor( cid : string | number ){\n        this.cid = this.cidPrefix + cid;\n    }\n\n    // Deeply clone ownership subtree\n    abstract clone( options? : CloneOptions ) : this\n    \n    // Execute given function in the scope of ad-hoc transaction.\n    transaction( fun : ( self : this ) => void, options : TransactionOptions = {} ) : void{\n        const isRoot = transactionApi.begin( this );\n        const update = fun.call( this, this );\n        update && this.set( update );\n        isRoot && transactionApi.commit( this );\n    }\n\n    // Loop through the members in the scope of transaction.\n    // Transactional version of each()\n    updateEach( iteratee : ( val : any, key : string | number ) => void, options? : TransactionOptions ){\n        const isRoot = transactionApi.begin( this );\n        this.each( iteratee );\n        isRoot && transactionApi.commit( this );\n    }\n\n    // Apply bulk in-place object update in scope of ad-hoc transaction \n    set( values : any, options? : TransactionOptions ) : this {\n        if( values ){ \n            const transaction = this._createTransaction( values, options );\n            transaction && transaction.commit();\n        } \n\n        return this;\n    }\n\n    // Assign transactional object \"by value\", copying aggregated items.\n    assignFrom( source : Transactional | Object ) : this {\n        // Need to delay change events until change token willl by synced.\n        this.transaction( () =>{\n            this.set( ( <any>source ).__inner_state__ || source, { merge : true } );\n\n            // Synchronize change tokens\n            const { _changeToken } = source as any;\n    \n            if( _changeToken ){\n                this._changeToken = _changeToken;\n            }    \n        });\n\n        return this;\n    }\n\n    // Apply bulk object update without any notifications, and return open transaction.\n    // Used internally to implement two-phase commit.\n    // Returns null if there are no any changes.\n    /** @private */  \n    abstract _createTransaction( values : any, options? : TransactionOptions ) : Transaction | void\n    \n    // Parse function applied when 'parse' option is set for transaction.\n    parse( data : any, options? : TransactionOptions ) : any { return data }\n\n    // Convert object to the serializable JSON structure\n    abstract toJSON() : {}\n\n    /*******************\n     * Traversals and member access\n     */\n    \n    // Get object member by its key.\n    abstract get( key : string ) : any\n\n    // Get object member by symbolic reference.\n    deepGet( reference : string ) : any {\n        return resolveReference( this, reference, ( object, key ) => object.get ? object.get( key ) : object[ key ] );\n    }\n\n    //_isCollection : boolean\n\n    // Return owner skipping collections.\n    getOwner() : Owner {\n        return this._owner;\n    }\n\n    // Store used when owner chain store lookup failed. Static value in the prototype. \n    /** @private */\n    _defaultStore : Transactional\n\n    // Locate the closest store. Store object stops traversal by overriding this method. \n    getStore() : Transactional {\n        const { _owner } = this;\n        return _owner ? <Transactional> _owner.getStore() : this._defaultStore;\n    }\n\n\n    /***************************************************\n     * Iteration API\n     */\n\n    // Loop through the members. Must be efficiently implemented in container class.\n    abstract each( iteratee : ( val : any, key : string | number ) => void, context? : any )\n\n    // Map members to an array\n    map<T>( iteratee : ( val : any, key : string | number ) => T, context? : any ) : T[]{\n        const arr : T[] = [],\n              fun = context !== void 0 ? ( v, k ) => iteratee.call( context, v, k ) : iteratee;\n        \n        this.each( ( val, key ) => {\n            const result = fun( val, key );\n            if( result !== void 0 ) arr.push( result );\n        } );\n\n        return arr;\n    }\n\n    _endpoint : IOEndpoint\n    _ioPromise : IOPromise<this>\n\n    hasPendingIO() : IOPromise<this> { return this._ioPromise; }\n\n    fetch( options? : object ) : IOPromise<this> { throw new Error( \"Not implemented\" ); }\n\n    getEndpoint() : IOEndpoint {\n        return getOwnerEndpoint( this ) || this._endpoint;\n    }\n\n    // Map members to an object\n    mapObject<T>( iteratee : ( val : any, key : string | number ) => T, context? : any ) : { [ key : string ] : T }{\n        const obj : { [ key : string ] : T } = {},\n            fun = context !== void 0 ? ( v, k ) => iteratee.call( context, v, k ) : iteratee;\n        \n        this.each( ( val, key ) => {\n            const result = iteratee( val, key );\n            if( result !== void 0 ) obj[ key ] = result;\n        } );\n\n        return obj;\n    }\n    \n    /*********************************\n     * Validation API\n     */\n\n    // Lazily evaluated validation error\n    /** @private */\n    _validationError : ValidationError = void 0\n\n    // Validate ownership tree and return valudation error \n    get validationError() : ValidationError {\n        const error = this._validationError || ( this._validationError = new ValidationError( this ) );\n        return error.length ? error : null; \n    }\n\n    // Validate nested members. Returns errors count.\n    /** @private */\n    abstract _validateNested( errors : ChildrenErrors ) : number\n\n    // Object-level validator. Returns validation error.\n    validate( obj? : Transactional ) : any {}\n\n    // Return validation error (or undefined) for nested object with the given key. \n    getValidationError( key : string ) : any {\n        var error = this.validationError;\n        return ( key ? error && error.nested[ key ] : error ) || null;\n    }\n\n    // Get validation error for the given symbolic reference.\n    deepValidationError( reference : string ) : any {\n        return resolveReference( this, reference, ( object, key ) => object.getValidationError( key ) );\n    }\n\n    // Iterate through all validation errors across the ownership tree.\n    eachValidationError( iteratee : ( error : any, key : string, object : Transactional ) => void ) : void {\n        const { validationError } = this;\n        validationError && validationError.eachError( iteratee, this );\n    }\n\n    // Check whenever member with a given key is valid. \n    isValid( key : string ) : boolean {\n        return !this.getValidationError( key );\n    }\n\n    valueOf() : Object { return this.cid; }\n    toString(){ return this.cid; }\n\n    // Get class name for an object instance. Works fine with ES6 classes definitions (not in IE).\n    getClassName() : string {\n        const { name } = <any>this.constructor;\n        if( name !== 'Subclass' ) return name;\n    }\n\n    // Logging interface for run time errors and warnings.\n    abstract _log( level : string, topic : string, text : string, value : any ) : void;\n}\n\nexport interface CloneOptions {\n    // 'Pin store' shall assign this._defaultStore = this.getStore();\n    pinStore? : boolean\n}\n\n// Owner must accept children update events. It's an only way children communicates with an owner.\n/** @private */\nexport interface Owner extends Traversable, Messenger {\n    _onChildrenChange( child : Transactional, options : TransactionOptions ) : void;\n    getOwner() : Owner\n    getStore() : Transactional\n}\n\n// Transaction object used for two-phase commit protocol.\n// Must be implemented by subclasses.\n// Transaction must be created if there are actual changes and when markIsDirty returns true.\n/** @private */ \nexport interface Transaction {\n    // Object transaction is being made on.\n    object : Transactional\n\n    // Send out change events, process update triggers, and close transaction.\n    // Nested transactions must be marked with isNested flag (it suppress owner notification).\n    commit( initiator? : Transactional )\n}\n\n// Options for distributed transaction  \nexport interface TransactionOptions {\n    // Invoke parsing \n    parse? : boolean\n\n    // Suppress change notifications and update triggers\n    silent? : boolean\n\n    // Update existing transactional members in place, or skip the update (ignored by models)\n    merge? : boolean // =true\n\n    // Should collections remove elements in set (ignored by models)  \n    remove? : boolean // =true\n\n    // Always replace enclosed objects with new instances\n    reset? : boolean // = false\n\n    // Do not dispose aggregated members\n    unset? : boolean\n\n    validate? : boolean\n\n    // `true` if the transaction is initiated as a result of IO operation\n    ioUpdate? : boolean\n\n    // The hint for IOEndpoint\n    // If `true`, `record.save()` will behave as \"upsert\" operation for the records having id.\n    upsert? : boolean\n}\n\n/**\n * Low-level transactions API. Must be used like this:\n * const isRoot = begin( record );\n * ...\n * isRoot && commit( record, options );\n * \n * When committing nested transaction, the flag must be set to true. \n * commit( object, options, isNested ) \n */\n\nexport const transactionApi = {\n    // Start transaction. Return true if it's the root one.\n    /** @private */\n    begin( object : Transactional ) : boolean {\n        return object._transaction ? false : ( object._transaction = true );  \n    },\n\n    // Mark object having changes inside of the current transaction.\n    // Returns true whenever there notifications are required.\n    /** @private */\n    markAsDirty( object : Transactional, options : TransactionOptions ) : boolean {\n        // If silent option is in effect, don't set isDirty flag.\n        const dirty = !options.silent;\n        if( dirty ) object._isDirty = options;\n        \n        // Reset version token.\n        object._changeToken = {};\n\n        // Object is changed, so validation must happen again. Clear the cache.\n        object._validationError = void 0;\n\n        return dirty;\n    },\n\n    // Commit transaction. Send out change event and notify owner. Returns true if there were changes.\n    // Must be executed for the root transaction only.\n    /** @private */\n    commit( object : Transactional, initiator? : Transactional ){\n        let originalOptions = object._isDirty;\n\n        if( originalOptions ){\n            // Send the sequence of change events, handling chained handlers.\n            while( object._isDirty ){\n                const options = object._isDirty;\n                object._isDirty = null; \n                trigger3( object, object._changeEventName, object, options, initiator );\n            }\n            \n            // Mark transaction as closed.\n            object._transaction = false;\n\n            // Notify owner on changes out of transaction scope.  \n            const { _owner } = object;  \n            if( _owner && _owner !== <any> initiator ){ // If it's the nested transaction, owner is already aware there are some changes.\n                _owner._onChildrenChange( object, originalOptions );\n            }\n        }\n        else{\n            // No changes. Silently close transaction.\n            object._isDirty = null;\n            object._transaction = false;\n        }\n    },\n\n    /************************************\n     * Ownership management\n     */\n\n    // Add reference to the record.\n    /** @private */\n    aquire( owner : Owner, child : Transactional, key? : string ) : boolean {\n        if( !child._owner ){\n            child._owner = owner;\n            child._ownerKey = key;\n            return true;\n        }\n\n        return child._owner === owner;\n    },\n\n    // Remove reference to the record.\n    /** @private */\n    free( owner : Owner, child : Transactional ) : void {\n        if( owner === child._owner ){\n            child._owner = void 0;\n            child._ownerKey = void 0;\n        }\n    }\n}\n\nfunction getOwnerEndpoint( self : Transactional ) : IOEndpoint {\n    // Check if we are the member of the collection...\n    const { collection } = self as any;\n    if( collection ){\n        return getOwnerEndpoint( collection );\n    }\n\n    // Now, if we're the member of the model...\n    if( self._owner ){\n        const { _endpoints } = self._owner as any;\n        return _endpoints && _endpoints[ self._ownerKey ];\n    }\n}\n","import { Transactional, Transaction, TransactionOptions, Owner, transactionApi } from \"../../transactions\"\nconst { begin : _begin, markAsDirty : _markAsDirty, commit } = transactionApi;\n\nimport { eventsApi } from '../../object-plus'\nconst { trigger3 } = eventsApi;\n\nexport interface ConstructorsMixin {\n    Attributes : AttributesConstructor\n    AttributesCopy : AttributesCopyConstructor\n}\n\nexport interface ConstructorOptions extends TransactionOptions{\n    clone? : boolean\n}\n\nexport type AttributesConstructor = new ( record : AttributesContainer, values : object, options : TransactionOptions ) => AttributesValues;\nexport type AttributesCopyConstructor = new ( values : object ) => AttributesValues;\n\nexport interface AttributesContainer extends Transactional, Owner, ConstructorsMixin {\n    // Attribute descriptors.\n    _attributes : AttributesDescriptors\n\n    // Attribute values.\n    attributes : AttributesValues\n\n    // Previous attribute values.\n    _previousAttributes : AttributesValues\n\n    // Changed attributes cache. \n    _changedAttributes : AttributesValues\n}\n\nexport interface AttributesValues {\n    [ name : string ] : any\n}\n\nexport interface AttributesDescriptors {\n    [ name : string ] : AttributeUpdatePipeline\n}\n\nexport interface AttributeUpdatePipeline{\n    doUpdate( value, record : AttributesContainer, options : TransactionOptions, nested? : Transaction[] ) : boolean\n}\n\n // Optimized single attribute transactional update. To be called from attributes setters\n // options.silent === false, parse === false. \nexport function setAttribute( record : AttributesContainer, name : string, value : any ) : void {\n    // Open the transaction.\n    const isRoot  = begin( record ),\n          options = {};\n\n    // Update attribute.      \n    if( record._attributes[ name ].doUpdate( value, record, options ) ){\n        // Notify listeners on changes.\n        markAsDirty( record, options );\n        trigger3( record, 'change:' + name, record, record.attributes[ name ], options );\n    }\n\n    // Close the transaction.\n    isRoot && commit( record );\n}\n\nfunction begin( record : AttributesContainer ){\n    if( _begin( record ) ){\n        record._previousAttributes = new record.AttributesCopy( record.attributes );\n        record._changedAttributes = null;\n        return true;\n    }\n    \n    return false;\n}\n\nfunction markAsDirty( record : AttributesContainer, options : TransactionOptions ){\n    // Need to recalculate changed attributes, when we have nested set in change:attr handler\n    if( record._changedAttributes ){\n        record._changedAttributes = null;\n    }\n\n    return _markAsDirty( record, options );\n}\n\n/**\n * TODO: There's an opportunity to create an optimized pipeline for primitive types and Date, which makes the majority\n * of attributes. It might create the major speedup.\n * \n * Create the dedicated pipeline for owned and shared attributes as well.\n * \n * Three elements of the pipeline:\n * - from constructor\n * - from assignment\n * - from `set`\n */\n\nexport const UpdateRecordMixin = {\n// Need to override it here, since begin/end transaction brackets are overriden. \n    transaction( this : AttributesContainer, fun : ( self : AttributesContainer ) => void, options : TransactionOptions = {} ) : void{\n        const isRoot = begin( this );\n        fun.call( this, this );\n        isRoot && commit( this );\n    },\n            \n    // Handle nested changes. TODO: propagateChanges == false, same in transaction.\n    _onChildrenChange( child : Transactional, options : TransactionOptions ) : void {\n        const { _ownerKey } = child,\n              attribute = this._attributes[ _ownerKey ];\n\n        if( !attribute /* TODO: Must be an opposite, likely the bug */ || attribute.propagateChanges ) this.forceAttributeChange( _ownerKey, options );\n    },\n\n    // Simulate attribute change \n    forceAttributeChange( key : string, options : TransactionOptions = {} ){\n        // Touch an attribute in bounds of transaction\n        const isRoot = begin( this );\n\n        if( markAsDirty( this, options ) ){\n            trigger3( this, 'change:' + key, this, this.attributes[ key ], options );\n        }\n        \n        isRoot && commit( this );\n    },\n\n    _createTransaction( this : AttributesContainer, a_values : {}, options : TransactionOptions = {} ) : Transaction {\n        const isRoot = begin( this ),\n                changes : string[] = [],\n                nested : RecordTransaction[]= [],\n                { _attributes } = this,\n                values = options.parse ? this.parse( a_values, options ) : a_values;\n\n        let unknown;\n\n        if( shouldBeAnObject( this, values ) ){\n            for( let name in values ){\n                const spec = _attributes[ name ];\n\n                if( spec ){\n                    if( spec.doUpdate( values[ name ], this, options, nested ) ){\n                        changes.push( name );\n                    }\n                }\n                else{\n                    unknown || ( unknown = [] );\n                    unknown.push( `'${ name }'` );\n                }\n            }\n\n            if( unknown ){\n                // this._log( 'warn', `Undefined attributes ${ unknown.join(', ')} are ignored!`, values );\n            }\n        }\n        \n        if( changes.length && markAsDirty( this, options ) ){\n            return new RecordTransaction( this, isRoot, nested, changes );\n        }\n        \n        // No changes, but there might be silent attributes with open transactions.\n        for( let pendingTransaction of nested ){\n            pendingTransaction.commit( this );\n        }\n\n        isRoot && commit( this );\n    }\n};\n\n// One of the main performance tricks of Type-R.\n// Create loop unrolled constructors for internal attribute hash,\n// so the hidden class JIT optimization will be engaged and they will become static structs.\n// It dramatically improves record performance.\nexport function constructorsMixin( attrDefs : AttributesDescriptors ) : ConstructorsMixin {\n    const attrs = Object.keys( attrDefs );\n\n    const AttributesCopy : AttributesCopyConstructor = new Function( 'values', `\n        ${ attrs.map( attr =>`\n            this.${ attr } = values.${ attr };\n        `).join( '' ) }\n    `) as any;\n\n    AttributesCopy.prototype = Object.prototype;\n\n    const Attributes : AttributesConstructor = new Function( 'record', 'values', 'options', `\n        var _attrs = record._attributes;\n\n        ${ attrs.map( attr =>`\n            this.${ attr } = _attrs.${ attr }.doInit( values.${ attr }, record, options );\n        `).join( '' ) }\n    `) as any;\n\n    Attributes.prototype = Object.prototype;\n\n    return { Attributes, AttributesCopy };\n}\n\nexport function shouldBeAnObject( record : AttributesContainer, values : object ){\n    if( values && values.constructor === Object ) return true;\n\n    record._log( 'error', 'Type-R:InvalidObject', 'update with non-object is ignored!', { values } );\n    return false;\n}\n\n// Transaction class. Implements two-phase transactions on object's tree. \n// Transaction must be created if there are actual changes and when markIsDirty returns true. \nexport class RecordTransaction implements Transaction {\n    // open transaction\n    constructor( public object : AttributesContainer,\n                 public isRoot : boolean,\n                 public nested : Transaction[],\n                 public changes : string[] ){}\n\n    // commit transaction\n    commit( initiator? : AttributesContainer ) : void {\n        const { nested, object, changes } = this;\n\n        // Commit all pending nested transactions...\n        for( let transaction of nested ){ \n            transaction.commit( object );\n        }\n\n        // Notify listeners on attribute changes...\n        // Transaction is never created when silent option is set, so just send events out.\n        const { attributes, _isDirty } = object;\n        for( let key of changes ){\n            trigger3( object, 'change:' + key, object, attributes[ key ], _isDirty );\n        }\n\n        this.isRoot && commit( object, initiator );\n    }\n}","import { IOEndpoint } from '../../io-tools';\nimport { tools, log, LogLevel } from '../../object-plus';\nimport { TransactionOptions } from '../../transactions';\nimport { AttributesContainer, AttributeUpdatePipeline, RecordTransaction, setAttribute } from './updates';\n\nconst { notEqual, assign} = tools;\n\ndeclare global {\n    interface Function {\n        _attribute : typeof AnyType\n    }\n}\n\nexport type Transform = ( this : AnyType, next : any, prev : any, record : AttributesContainer, options : TransactionOptions ) => any;\nexport type ChangeHandler = ( this : AnyType, next : any, prev : any, record : AttributesContainer, options : TransactionOptions ) => void;\n\nexport interface AttributeOptions {\n    _attribute? : typeof AnyType\n    validate? : ( record : AttributesContainer, value : any, key : string ) => any\n    isRequired? : boolean\n    changeEvents? : boolean\n\n    endpoint? : IOEndpoint\n\n    type? : Function\n    value? : any\n    hasCustomDefault? : boolean\n\n    parse? : Parse\n    toJSON? : AttributeToJSON\n   \n    getHooks? : GetHook[]\n    transforms? : Transform[]\n    changeHandlers? : ChangeHandler[]\n\n    _onChange? : ChangeAttrHandler\n}\n\nexport type Parse = ( value : any, key : string ) => any;\nexport type GetHook = ( value : any, key : string ) => any;\nexport type AttributeToJSON = ( value : any, key : string ) => any\nexport type AttributeParse = ( value : any, key : string ) => any\nexport type ChangeAttrHandler = ( ( value : any, attr : string ) => void ) | string;\n\n// TODO: interface differs from options, do something obout it\nconst emptyOptions : TransactionOptions = {};\n\n/**\n * Typeless attribute. Is the base class for all other attributes.\n */\nexport class AnyType implements AttributeUpdatePipeline {\n    // Factory method to create attribute from options \n    static create( options : AttributeOptions, name : string ) : AnyType {\n        const type = options.type,\n              AttributeCtor = options._attribute || ( type ? type._attribute : AnyType );\n\n        return new AttributeCtor( name, options );\n    }\n    /**\n     * Update pipeline functions\n     * =========================\n     *\n     * Stage 0. canBeUpdated( value )\n     * - presence of this function implies attribute's ability to update in place.\n     */\n    canBeUpdated( prev, next, options : TransactionOptions ) : any {}\n\n    /**\n     * Stage 1. Transform stage\n     */\n    transform( next : any, prev : any, model : AttributesContainer, options : TransactionOptions ) : any { return next; }\n\n    // convert attribute type to `this.type`.\n    convert( next : any, prev : any, model : AttributesContainer, options : TransactionOptions ) : any { return next; }\n\n    /**\n     * Stage 2. Check if attr value is changed\n     */\n    isChanged( a : any, b : any ) : boolean {\n        return notEqual( a, b );\n    }\n\n    /**\n     * Stage 3. Handle attribute change\n     */\n    handleChange( next : any, prev : any, model : AttributesContainer, options : TransactionOptions ) {}\n\n    /**\n     * End update pipeline definitions.\n     */\n\n    // create empty object passing backbone options to constructor...\n    create() { return void 0; }\n\n    // generic clone function for typeless attributes\n    // Must be overriden in sublass\n    clone( value : any, record : AttributesContainer ) {\n        return value;\n    }\n\n    dispose( record : AttributesContainer, value : any ) : void {\n        this.handleChange( void 0, value, record, emptyOptions );\n    }\n\n    validate( record : AttributesContainer, value : any, key : string ) : any {}\n\n    toJSON( value, key ) {\n        return value && value.toJSON ? value.toJSON() : value;\n    }\n\n    createPropertyDescriptor() : PropertyDescriptor | void {\n        const { name, getHook } = this;\n\n        if( name !== 'id' ){\n            return {\n                // call to optimized set function for single argument.\n                set( value ){\n                    setAttribute( this, name, value );\n                },\n\n                // attach get hook to the getter function, if it present\n                get : (\n                    getHook ?\n                        function() {\n                            return getHook.call( this, this.attributes[ name ], name );\n                        } :\n                        function() { return this.attributes[ name ]; }\n                )\n            }\n        }\n    }\n\n    value : any\n\n    // Used as global default value for the given metatype\n    static defaultValue : any;\n\n    type : Function\n\n    initialize( name : string, options : TransactionOptions ){}\n\n    options : AttributeOptions\n\n    doInit( value, record : AttributesContainer, options : TransactionOptions ){\n        const v = value === void 0 ? this.defaultValue() : value,\n            x = this.transform( v, void 0, record, options );\n            \n        this.handleChange( x, void 0, record, options );\n        return x;\n    }\n\n    doUpdate( value, record : AttributesContainer, options : TransactionOptions, nested? : RecordTransaction[] ){\n        const { name } = this,\n            { attributes } = record,\n              prev = attributes[ name ];\n\n        const next = this.transform( value, prev, record, options );\n        attributes[ name ] = next;\n\n        if( this.isChanged( next, prev ) ) {\n            // Do the rest of the job after assignment\n            this.handleChange( next, prev, record, options );\n            return true;\n        }\n\n        return false;\n    }\n\n    propagateChanges : boolean\n\n    protected _log( level : LogLevel, code : string, text : string, value, record : AttributesContainer ){\n        log( level, code, `${record.getClassName()}.${ this.name } ${ text }`, {\n            'New value' : value,\n            'Prev. value' : record.attributes[ this.name ],\n            'Attribute definition' : this,\n            'Record' : record\n        });\n    }\n\n    defaultValue(){\n        return this.value;\n    }\n\n    parse : Parse\n\n    constructor( public name : string, a_options : AttributeOptions ) {        \n        // Save original options...\n        this.options = a_options;\n\n        // Clone options.\n        const options : AttributeOptions = assign( { getHooks : [], transforms : [], changeHandlers : [] }, a_options );\n        options.getHooks = options.getHooks.slice();\n        options.transforms = options.transforms.slice();\n        options.changeHandlers = options.changeHandlers.slice();\n\n        const {\n                  value, type, parse, toJSON, changeEvents,\n                  validate, getHooks, transforms, changeHandlers\n              } = options;\n\n        // Initialize default value...\n        this.value = value;\n        this.type  = type;\n\n        // TODO: An opportunity to optimize for attribute subtype.\n        if( !options.hasCustomDefault && type ){\n            this.defaultValue = this.create;\n        }\n        else if( tools.isValidJSON( value ) ){ \n            // JSON literals must be deep copied.\n            this.defaultValue = new Function( `return ${ JSON.stringify( value ) };` ) as any;\n        }\n        else{\n            this.defaultValue = this.defaultValue;\n        }\n\n        // Changes must be bubbled when they are not disabled for an attribute and transactional object.\n        this.propagateChanges = changeEvents !== false;\n\n        this.toJSON = toJSON === void 0 ? this.toJSON : toJSON;\n\n        this.validate = validate || this.validate;\n        \n        if( options.isRequired ){\n            this.validate = wrapIsRequired( this.validate );\n        }\n\n        /**\n         * Assemble pipelines...\n         */\n\n        // `convert` is default transform, which is always present...\n        transforms.unshift( this.convert );\n\n        // Attribute-level parse transform must always go first...\n        this.parse = parse || this.parse;\n\n        // Get hook from the attribute will be used first...\n        if( this.get ) getHooks.unshift( this.get );\n\n        // let subclasses configure the pipeline...\n        this.initialize.call( this, options );\n\n        // let attribute spec configure the pipeline...\n        if( getHooks.length ){\n            const getHook = this.getHook = getHooks.reduce( chainGetHooks );\n\n            const { validate } = this;\n            this.validate = function( record : AttributesContainer, value : any, key : string ){\n                return validate.call( this, record, getHook.call( record, value, key ), key );\n            }\n        }\n        \n        this.transform = transforms.length ? transforms.reduce( chainTransforms ) : this.transform;\n        \n        this.handleChange = changeHandlers.length ? changeHandlers.reduce( chainChangeHandlers ) : this.handleChange;\n    }\n\n    getHook : ( value, key : string ) => any = null\n    get : ( value, key : string ) => any\n}\n\n\nfunction chainGetHooks( prevHook : GetHook, nextHook : GetHook ) : GetHook {\n    return function( value, name ) {\n        return nextHook.call( this, prevHook.call( this, value, name ), name );\n    }\n}\n\nfunction chainTransforms( prevTransform : Transform, nextTransform : Transform ) : Transform {\n    return function( next, prev, record, options ) {\n        return nextTransform.call( this, prevTransform.call( this, next, prev, record, options ), prev, record, options );\n    }\n}\n\nfunction chainChangeHandlers( prevHandler : ChangeHandler, nextHandler : ChangeHandler ) : ChangeHandler {\n    return function( next, prev, record, options ) {\n        prevHandler.call( this, next, prev, record, options );\n        nextHandler.call( this, next, prev, record, options );\n    }\n}\n\nfunction wrapIsRequired( validate ){\n    return function( record : AttributesContainer, value : any, key : string ){\n        return value ? validate.call( this, record, value, key ) : 'Required';\n    }\n}","import { AnyType } from './any'\nimport { Owner, transactionApi, Transactional, ItemsBehavior, TransactionOptions } from '../../transactions'\nimport { tools } from '../../object-plus'\nimport { AttributesContainer, ConstructorOptions } from './updates'\nimport { ValidationError } from '../../validation'\n\nconst { free, aquire } = transactionApi;\n\nexport class AggregatedType extends AnyType {\n    type : typeof Transactional\n\n    clone( value : Transactional ) : Transactional {\n        return value ? value.clone() : value;\n    }\n\n    toJSON( x ){ return x && x.toJSON(); }\n\n    doInit( value, record : AttributesContainer, options : ConstructorOptions ){\n        const v = options.clone ? this.clone( value ) : (\n            value === void 0 ? this.defaultValue() : value\n        );\n\n        const x = this.transform( v, void 0, record, options );\n        this.handleChange( x, void 0, record, options );\n        return x;\n    }\n\n    doUpdate( value, record, options, nested : any[] ){ // Last to things can be wrapped to an object, either transaction or ad-hoc\n        const key = this.name, { attributes } = record; \n        const prev = attributes[ key ];\n        let update;\n\n        // This can be moved to transactional attribute. And chained with the rest.\n        if( update = this.canBeUpdated( prev, value, options ) ) { // todo - skip empty updates.\n            const nestedTransaction = prev._createTransaction( update, options );\n            if( nestedTransaction ){\n                if( nested ){\n                    nested.push( nestedTransaction );\n                }\n                else{\n                    nestedTransaction.commit( record );\n                }\n\n                if( this.propagateChanges ) return true;\n            }\n\n            return false;\n        }\n\n        const next = this.transform( value, prev, record, options );\n        attributes[ key ] = next;\n\n        if( this.isChanged( next, prev ) ) { // Primitives and nested comparison can be inlined.\n            // Do the rest of the job after assignment\n            this.handleChange( next, prev, record, options );\n\n            return true;\n        }\n\n        return false;\n    }\n\n    canBeUpdated( prev : Transactional, next : any, options : TransactionOptions ) : any {\n        // If an object already exists, and new value is of incompatible type, let object handle the update.\n        if( prev && next != null ){\n            if( next instanceof this.type ){\n                // In case if merge option explicitly specified, force merge.\n                if( options.merge ) return next.__inner_state__;\n            }\n            else{\n                return next;\n            }\n        }\n    }\n\n    convert( next : any, prev : any, record : AttributesContainer, options : TransactionOptions ) : Transactional {\n        // Invoke class factory to handle abstract classes\n        if( next == null ) return next;\n        \n        if( next instanceof this.type ){\n            if( next._shared && !( next._shared & ItemsBehavior.persistent ) ) { // TODO: think more about shared types assignment compatibility. \n                this._log( 'error', 'Type-R:InvalidCollection', 'aggregated collection attribute is assigned with shared collection type', next, record );\n            }\n\n            // With explicit 'merge' option we need to clone an object if its previous value was 'null'.\n            // This is an only case we could be here when merge === true.\n            return options.merge ? next.clone() : next;\n        }\n\n        return <any>this.type.create( next, options );\n    }\n\n    dispose ( record : AttributesContainer, value : Transactional ){\n        if( value ){\n            this.handleChange( void 0, value, record, {} );\n        }\n    }\n\n    validate( record : AttributesContainer, value : Transactional ) : ValidationError {\n        var error = value && value.validationError;\n        if( error ) return error;\n    }\n\n    create() : Transactional {\n        return (<any>this.type).create(); // this the subclass of Transactional here.\n    }\n\n    initialize( options ){\n        options.changeHandlers.unshift( this._handleChange );\n    }\n\n    _handleChange( next : Transactional, prev : Transactional, record : AttributesContainer, options : TransactionOptions ){\n        if( prev ){\n            free( record, prev );\n            options.unset || prev.dispose();\n        } \n        \n        if( next && !aquire( record, next, this.name ) ){\n            this._log( 'error', 'Type-R:InvalidOwner', 'aggregated attribute assigned with an object already having an owner', next, record );\n        }\n    }\n}","/**\n * Type spec engine. Declare attributes using chainable syntax,\n * and returns object with spec.\n */\nimport { Transactional } from '../../transactions'\nimport { ChangeAttrHandler, AttributeOptions, Parse } from './any'\nimport {  AttributesContainer } from './updates'\nimport { EventMap, EventsDefinition, definitionDecorator, tools } from '../../object-plus'\nimport { IOEndpoint } from '../../io-tools'\n\nconst { assign } = tools;\n\nexport interface AttributeCheck {\n    ( value : any, key : string ) : boolean\n    error? : any\n}\n\nexport class ChainableAttributeSpec {\n    options : AttributeOptions;\n\n    constructor( options : AttributeOptions ) {\n        // Shallow copy options, fill it with defaults.\n        this.options = { getHooks : [], transforms : [], changeHandlers : []};\n        if( options ) assign( this.options, options );\n    }\n\n    check( check : AttributeCheck, error : any ) : ChainableAttributeSpec {\n        function validate( model, value, name ){\n            if( !check.call( model, value, name ) ){\n                const msg = error || check.error || name + ' is not valid';\n                return typeof msg === 'function' ? msg.call( model, name ) : msg;\n            }\n        }\n\n        const prev = this.options.validate;\n\n        return this.metadata({\n            validate : prev ? (\n                            function( model, value, name ){\n                                return prev( model, value, name ) || validate( model, value, name );\n                            }\n                       ) : validate\n        });\n    }\n\n    get asProp(){\n        return definitionDecorator( 'attributes', this );\n    }\n\n    get as(){ return this.asProp; }\n\n    get isRequired() : ChainableAttributeSpec {\n        return this.metadata({ isRequired : true }); \n    }\n\n    endpoint( endpoint : IOEndpoint ){\n        return this.metadata({ endpoint });\n    }\n\n    watcher( ref : string | ( ( value : any, key : string ) => void ) ) : ChainableAttributeSpec {\n        return this.metadata({ _onChange : ref });\n    }\n\n    // Attribute-specific parse transform\n    parse( fun : Parse ) : ChainableAttributeSpec {\n        return this.metadata({ parse : fun });\n    }\n\n    toJSON( fun ) : ChainableAttributeSpec {\n        return this.metadata({\n            toJSON : typeof fun === 'function' ? fun : ( fun ? x => x && x.toJSON() : emptyFunction ) \n        });\n    }\n\n    // Attribute get hook.\n    get( fun ) : ChainableAttributeSpec {\n        return this.metadata({\n            getHooks : this.options.getHooks.concat( fun )\n        });\n    }\n\n    // Attribute set hook.\n    set( fun ) : ChainableAttributeSpec {\n        function handleSetHook( next, prev, record : AttributesContainer, options ) {\n            if( this.isChanged( next, prev ) ) {\n                const changed = fun.call( record, next, this.name );\n                return changed === void 0 ? prev : this.convert( changed, prev, record, options );\n            }\n\n            return prev;\n        }\n\n        return this.metadata({\n            transforms : this.options.transforms.concat( handleSetHook )\n        });\n    }\n\n    changeEvents( events : boolean ) : ChainableAttributeSpec {\n        return this.metadata({ changeEvents : events });\n    }\n\n    // Subsribe to events from an attribute.\n    events( map : EventsDefinition ) : ChainableAttributeSpec {\n        const eventMap = new EventMap( map );\n\n        function handleEventsSubscribtion( next, prev, record : AttributesContainer ){\n            prev && prev.trigger && eventMap.unsubscribe( record, prev );\n\n            next && next.trigger && eventMap.subscribe( record, next );\n        }\n\n        return this.metadata({\n            changeHandlers : this.options.changeHandlers.concat( handleEventsSubscribtion )\n        });\n    }\n\n    // Creates a copy of the spec.\n    get has() : ChainableAttributeSpec {\n        return this;\n    }\n\n    metadata( options : AttributeOptions ) : ChainableAttributeSpec {\n        const cloned = new ChainableAttributeSpec( this.options );\n        assign( cloned.options, options );\n        return cloned;\n    }\n\n    value( x ) : ChainableAttributeSpec {\n        return this.metadata({ value : x, hasCustomDefault : true });\n    }\n\n    static from( spec : any ) : ChainableAttributeSpec {\n        let attrSpec : ChainableAttributeSpec;\n\n        if( typeof spec === 'function' ) {\n            attrSpec = spec.has;\n        }\n        else if( spec && spec instanceof ChainableAttributeSpec ) {\n            attrSpec = spec;\n        }\n        else{\n            // Infer type from value.\n            const type = inferType( spec );\n    \n            // Transactional types inferred from values must have shared type. \n            if( type && type.prototype instanceof Transactional ){\n                attrSpec = (<any>type).shared.value( spec );\n            }\n            // All others will be created in regular way.\n            else{\n                attrSpec = new ChainableAttributeSpec({ type : type, value : spec, hasCustomDefault : true });\n            }\n        }\n    \n        return attrSpec;\n    }\n}\n\nfunction emptyFunction(){}\n\nexport function type( this : void, spec : ChainableAttributeSpec | Function ) : ChainableAttributeSpec {\n    return spec instanceof ChainableAttributeSpec ? spec : new ChainableAttributeSpec( {\n        type : spec,\n        value : spec._attribute.defaultValue,\n        hasCustomDefault : spec._attribute.defaultValue !== void 0\n    } );;\n}\n\ndeclare global {\n    interface Function{\n        value : ( x : any ) => ChainableAttributeSpec;\n        isRequired : ChainableAttributeSpec;\n        asProp : PropertyDecorator\n        has : ChainableAttributeSpec;\n    }\n}\n\nFunction.prototype.value = function( x ) {\n    return new ChainableAttributeSpec( { type : this, value : x, hasCustomDefault : true } );\n};\n\nObject.defineProperty( Function.prototype, 'isRequired', {\n    get() { return this._isRequired || this.has.isRequired; },\n    set( x ){ this._isRequired = x; }\n});\n\nObject.defineProperty( Function.prototype, 'asProp', {\n    get() { return this.has.asProp; },\n});\n\nObject.defineProperty( Function.prototype, 'has', {\n    get() {\n        // workaround for sinon.js and other libraries overriding 'has'\n        return this._has || type( this );\n    },\n\n    set( value ) { this._has = value; }\n} );\n\nfunction inferType( value : {} ) : Function {\n    switch( typeof value ) {\n        case 'number' :\n            return Number;\n        case 'string' :\n            return String;\n        case 'boolean' :\n            return Boolean;\n        case 'undefined' :\n            return void 0;\n        case 'object' :\n            return value ? <any> value.constructor : void 0;\n    }\n}\n","/**\n * Date attribute type.\n * \n * Implements validation, cross-browser compatibility fixes, variety of Date serialization formats,\n * and optimized update pipeline.\n */\nimport { AnyType } from './any'\nimport { tools } from '../../object-plus'\nimport { AttributesContainer } from './updates'\nimport { TransactionOptions } from '../../transactions'\nimport { ChainableAttributeSpec } from './attrDef'\n\nconst DateProto = Date.prototype;\n\n// Date Attribute\n/** @private */\nexport class DateType extends AnyType {\n    create(){\n        return new Date();\n    }\n    \n    convert( next : any, a, record ){\n        if( next == null || next instanceof Date ) return next;\n\n        const date = new Date( next ),\n              timestamp = date.getTime();\n\n        if( timestamp !== timestamp ){\n            this._log( 'error', 'Type-R:InvalidDate', 'Date attribute assigned with invalid date', next, record );\n        }\n\n        return date;\n    }\n\n    validate( model, value, name ) {\n        if( value != null ){\n            const timestamp = value.getTime(); \n            if( timestamp !== timestamp ) return name + ' is Invalid Date';\n        }\n    }\n\n    toJSON( value ) { return value && value.toISOString(); }\n\n    isChanged( a, b ) { return ( a && a.getTime() ) !== ( b && b.getTime() ); }\n\n    doInit( value, record : AttributesContainer, options : TransactionOptions ){\n        // Date don't have handleChanges step.\n        return this.transform( value === void 0 ? this.defaultValue() : value, void 0, record, options );\n    }\n\n    doUpdate( value, record, options, nested ){\n        const   { name } = this,\n                { attributes } = record,\n                prev = attributes[ name ];\n        \n        // Date don't have handleChanges step.\n        return this.isChanged( prev , attributes[ name ] = this.transform( value, prev, record, options ) );\n    }\n\n    clone( value ) { return value && new Date( value.getTime() ); }\n    dispose(){}\n}\n\nDate._attribute = DateType;\n\nconst msDatePattern  = /\\/Date\\(([0-9]+)\\)\\//;\n\nexport class MSDateType extends DateType {\n    convert( next ) {\n        if( typeof next === 'string' ){\n            const msDate = msDatePattern.exec( next );\n            if( msDate ){\n                return new Date( Number( msDate[ 1 ] ) );\n            }\n        }\n\n        return DateType.prototype.convert.apply( this, arguments );\n    }\n\n    toJSON( value ) { return value && `/Date(${ value.getTime() })/`; }\n}\n\nexport class TimestampType extends DateType {\n    toJSON( value ) { return value && value.getTime(); }\n}\n\ndeclare global {\n    interface DateConstructor {\n        microsoft : ChainableAttributeSpec\n        timestamp :  ChainableAttributeSpec\n    }\n}\n\nObject.defineProperties( Date, {\n    microsoft : {\n        get(){\n            return new ChainableAttributeSpec({\n                type : Date,\n                _attribute : MSDateType\n            })\n        }\n    },\n\n    timestamp : {\n        get(){\n            return new ChainableAttributeSpec({\n                type : Date,\n                _attribute : TimestampType\n            })\n        }\n    }\n});\n\n// If ISO date is not supported by date constructor (such as in Safari), polyfill it.\nfunction supportsDate( date ){\n    return !isNaN( ( new Date( date ) ).getTime() );\n}\n\nif( !supportsDate('2011-11-29T15:52:30.5') ||\n    !supportsDate('2011-11-29T15:52:30.52') ||\n    !supportsDate('2011-11-29T15:52:18.867') ||\n    !supportsDate('2011-11-29T15:52:18.867Z') ||\n    !supportsDate('2011-11-29T15:52:18.867-03:30') ){\n\n    DateType.prototype.convert = function( value ){\n        return value == null || value instanceof Date ? value : new Date( safeParseDate( value ) );\n    }\n}\n\nconst numericKeys    = [ 1, 4, 5, 6, 7, 10, 11 ],\n      isoDatePattern = /^(\\d{4}|[+\\-]\\d{6})(?:-(\\d{2})(?:-(\\d{2}))?)?(?:T(\\d{2}):(\\d{2})(?::(\\d{2})(?:\\.(\\d{3}))?)?(?:(Z)|([+\\-])(\\d{2})(?::(\\d{2}))?)?)?$/;\n\nfunction safeParseDate( date : string ) : number {\n    var timestamp, struct : any[], minutesOffset = 0;\n\n    if( ( struct = isoDatePattern.exec( date )) ) {\n        // avoid NaN timestamps caused by undefined values being passed to Date.UTC\n        for( var i = 0, k; ( k = numericKeys[ i ] ); ++i ) {\n            struct[ k ] = +struct[ k ] || 0;\n        }\n\n        // allow undefined days and months\n        struct[ 2 ] = (+struct[ 2 ] || 1) - 1;\n        struct[ 3 ] = +struct[ 3 ] || 1;\n\n        if( struct[ 8 ] !== 'Z' && struct[ 9 ] !== undefined ) {\n            minutesOffset = struct[ 10 ] * 60 + struct[ 11 ];\n\n            if( struct[ 9 ] === '+' ) {\n                minutesOffset = 0 - minutesOffset;\n            }\n        }\n\n        timestamp =\n            Date.UTC( struct[ 1 ], struct[ 2 ], struct[ 3 ], struct[ 4 ], struct[ 5 ] + minutesOffset, struct[ 6 ],\n                    struct[ 7 ] );\n    }\n    else {\n        timestamp = Date.parse( date );\n    }\n\n    return timestamp;\n}","/**\n * Built-in JSON types attributes: Object, Array, Number, String, Boolean, and immutable class.\n * \n * Adds type assertions, default validation, and optimized update pipeline.\n */\n\nimport { TransactionOptions } from '../../transactions';\nimport { AnyType } from './any';\nimport { AttributesContainer } from './updates';\n\n/**\n * Custom class must be immutable class which implements toJSON() method\n * with a constructor taking json.\n */\nclass ImmutableClassType extends AnyType {\n    type : new ( value? : any ) => {}\n\n    create(){\n        return new this.type();\n    }\n\n    convert( next : any ) : any {\n        return next == null || next instanceof this.type ? next : new this.type( next );\n    }\n\n    toJSON( value ){\n        return value && value.toJSON ? value.toJSON() : value;\n    }\n\n    clone( value ) {\n        return new this.type( this.toJSON( value ) );\n    }\n\n    isChanged( a, b ){\n        return a !== b;\n    }\n}\n\nFunction.prototype._attribute = ImmutableClassType;\n\n/**\n * Optimized attribute of primitive type.\n * \n * Primitives has specialized simplified pipeline.\n */\nexport class PrimitiveType extends AnyType {\n    type : NumberConstructor | StringConstructor | BooleanConstructor\n\n    dispose(){}\n    create() { return this.type(); }\n\n    toJSON( value ) { return value; }\n\n    convert( next ) { return next == null ? next : this.type( next ); }\n\n    isChanged( a, b ) { return a !== b; }\n\n    clone( value ) { return value; }\n\n    doInit( value, record : AttributesContainer, options : TransactionOptions ){\n        return this.transform( value === void 0 ? this.value : value, void 0, record, options );\n    }\n\n    doUpdate( value, record, options, nested ){\n        const   { name } = this,\n                { attributes } = record,\n                prev = attributes[ name ];\n        \n        return prev !== ( attributes[ name ] = this.transform( value, prev, record, options ) );\n    }\n\n    initialize(){\n        if( !this.options.hasCustomDefault ){\n            this.value = this.type();\n        }\n    }\n}\n\nBoolean._attribute = String._attribute = PrimitiveType;\n\n// Number type with special validation algothim.\n/** @private */ \nexport class NumericType extends PrimitiveType {\n    type : NumberConstructor\n\n    create(){\n        return 0;\n    }\n\n    convert( next, prev?, record? ) {\n        const num = next == null ? next : this.type( next );\n\n        if( num !== num ){\n            this._log( 'error', 'Type-R:InvalidNumber', 'Number attribute is assigned with an invalid number', next, record );\n        }\n        \n        return num;\n    }\n\n    validate( model, value, name ) {\n        // Whatever is not symmetrically serializable to JSON, is not valid by default.\n        if( value != null && !isFinite( value ) ) {\n            return name + ' is not valid number';\n        }\n    }\n}\n\nNumber._attribute = NumericType;\n\n/**\n * Add Number.integer attrubute type\n */\ndeclare global {\n    interface NumberConstructor {\n        integer : Function\n    }\n\n    interface Window {\n        Integer : Function;\n    }\n}\n\nfunction Integer( x ){\n    return x ? Math.round( x ) : 0;\n}\nInteger._attribute = NumericType;\nNumber.integer = Integer;\n\n\nif( typeof window !== 'undefined' ){\n    window.Integer = Number.integer;\n}\n\n/**\n * Compatibility wrapper for Array type.\n * @private\n */ \nexport class ArrayType extends AnyType {\n    toJSON( value ) { return value; }\n    dispose(){}\n    create(){ return []; }\n\n    convert( next, prev, record ) {\n        // Fix incompatible constructor behaviour of Array...\n        if( next == null || Array.isArray( next ) ) return next;\n\n        this._log( 'error', 'Type-R:InvalidArray', 'Array attribute assigned with non-array value', next, record );\n\n        return [];\n    }\n\n    clone( value ){\n        return value && value.slice();\n    }\n}\n\nArray._attribute = ArrayType;\n\nexport class ObjectType extends AnyType {\n    create(){ return {}; }\n\n    convert( next, prev, record ) {\n        if( next == null || typeof next === 'object' ) return next;\n                \n        this._log( 'error', 'Type-R:InvalidObject', 'Object attribute is assigned with non-object value', next, record );\n        return {};\n    }\n}\n\nObject._attribute = ObjectType;\n\nexport function doNothing(){}\n\nexport class FunctionType extends AnyType {\n    // Functions are not serialized.\n    toJSON( value ) { return void 0; }\n    create(){ return doNothing; }\n    dispose(){}\n\n    convert( next, prev, record ) {\n        // Fix incompatible constructor behaviour of Function...\n        if( next == null || typeof next === 'function' ) return next;\n\n        this._log( 'error', 'Type-R:InvalidFunction', 'Function attribute assigned with non-function value', next, record );\n\n        return doNothing;\n    }\n\n    // Functions are not cloned.\n    clone( value ){ return value; }\n}\n\nFunction._attribute = FunctionType;","import { AnyType } from './any'\nimport { AttributesContainer, ConstructorOptions } from './updates'\nimport { ItemsBehavior, Owner, transactionApi, Transactional, TransactionOptions } from '../../transactions' \nimport { tools, eventsApi } from '../../object-plus'\n\nconst { on, off } = eventsApi,\n    { free, aquire } = transactionApi;\n\n/************************\n * Shared attribute definition.\n * - Not serialized.\n * - Listening to the changes.\n * - Doesn't take ownership when assigned with object of proper type.\n * - Takes ownership on objects which are converted.\n */\n\nconst shareAndListen = ItemsBehavior.listen | ItemsBehavior.share;\n\n/** @private */\nexport class SharedType extends AnyType {\n    type : typeof Transactional\n\n     doInit( value, record : AttributesContainer, options : ConstructorOptions ){\n        const v = options.clone ? this.clone( value, record ) : (\n            value === void 0 ? this.defaultValue() : value\n        );\n\n        const x = this.transform( v, void 0, record, options );\n        this.handleChange( x, void 0, record, options );\n        return x;\n    }\n\n    doUpdate( value, record, options, nested : any[] ){ // Last to things can be wrapped to an object, either transaction or ad-hoc\n        const key = this.name, { attributes } = record; \n        const prev = attributes[ key ];\n        let update;\n\n        // This can be moved to transactional attribute. And chained with the rest.\n        if( update = this.canBeUpdated( prev, value, options ) ) { // todo - skip empty updates.\n            const nestedTransaction = prev._createTransaction( update, options );\n            if( nestedTransaction ){\n                if( nested ){\n                    nested.push( nestedTransaction );\n                }\n                else{\n                    nestedTransaction.commit( record );\n                }\n\n                if( this.propagateChanges ) return true;\n            }\n\n            return false;\n        }\n\n        const next = this.transform( value, prev, record, options );\n        attributes[ key ] = next;\n\n        if( this.isChanged( next, prev ) ) { // Primitives and nested comparison can be inlined.\n            // Do the rest of the job after assignment\n            this.handleChange( next, prev, record, options );\n\n            return true;\n        }\n\n        return false;\n    }\n\n    clone( value : Transactional, record : AttributesContainer ) : Transactional {\n        // References are not cloned.\n        if( !value || value._owner !== record ) return value;\n\n        // Implicitly created objects are cloned.\n        const clone = value.clone();\n        aquire( record, clone, this.name );\n        return clone;\n    }\n\n    // Do not serialize by default.\n    toJSON(){}\n\n    canBeUpdated( prev : Transactional, next : any, options : TransactionOptions ) : any {\n        // If an object already exists, and new value is of incompatible type, let object handle the update.\n        if( prev && next != null && !( next instanceof this.type ) ){\n            return next;\n        }\n    }\n\n    convert( next : any, prev : any, record : AttributesContainer, options : TransactionOptions ) : Transactional {\n        if( next == null || next instanceof this.type ) return next;\n\n        // Convert type using implicitly created rtransactional object.\n        const implicitObject = new ( this.type as any )( next, options, shareAndListen );\n\n        // To prevent a leak, we need to take an ownership on it.\n        aquire( record, implicitObject, this.name );\n\n        return implicitObject;\n    }\n\n    // Refs are always valid.\n    validate( model, value, name ){}\n\n    // They are always created as null.\n    create() : Transactional {\n        return null;\n    }\n\n    // Listening to the change events\n    _handleChange( next : Transactional, prev : Transactional, record : AttributesContainer, options ){\n        if( prev ){\n            // If there was an implicitly created object, remove an ownership.\n            if( prev._owner === record ){\n                free( record, prev );\n                options.unset || prev.dispose();\n            }\n            else{\n                off( prev, prev._changeEventName, this._onChange, record );\n            }\n        }  \n \n        if( next ){\n            // No need to take an ownership for an implicit object - already done in convert or clone.\n            if( next._owner !== record ){\n                on( next, next._changeEventName, this._onChange, record );\n            }\n        } \n    }\n\n    dispose( record : AttributesContainer, value : Transactional ){\n        if( value ){\n            this.handleChange( void 0, value, record, {} );\n        }\n    }\n\n    _onChange : ( child : Transactional, options : TransactionOptions, initiator : Transactional ) => void \n\n    initialize( options ){\n        // Create change event handler which knows current attribute name. \n        const attribute = this;\n        this._onChange = this.propagateChanges ? function( child, options, initiator ){\n            this === initiator || this.forceAttributeChange( attribute.name, options );\n        } : ignore;\n\n        options.changeHandlers.unshift( this._handleChange );\n    }\n}\n\nfunction ignore(){}","import { tools as _, eventsApi } from '../../object-plus'\n\nexport * from './any'\nexport * from './owned'\nexport * from './date'\nexport * from './basic'\nexport * from './shared'\nexport * from './updates'\nexport * from './attrDef'\n\nimport { AnyType } from './any'\nimport { ConstructorsMixin, constructorsMixin } from './updates'\nimport { ChainableAttributeSpec } from './attrDef'\nimport { CompiledReference } from '../../traversable'\nimport { IOEndpoint } from '../../io-tools'\n\nexport interface ParseMixin {\n    _parse? : ( json : any ) => object\n}\n\nexport interface RecordAttributesMixin extends ConstructorsMixin, ParseMixin {\n    // Attributes descriptors\n    _attributes : AttributeDescriptors\n    _attributesArray : AnyType[]\n    \n    // Attribute's property descriptors\n    properties : PropertyDescriptorMap\n\n    // Attributes serialization\n    _toJSON() : any\n\n    // Event map for record's local events.\n    _localEvents? : eventsApi.EventMap,\n\n    _endpoints : { [ name : string ] : IOEndpoint }\n}\n\nexport interface AttributeDescriptors {\n    [ name : string ] : AnyType\n}\n\n// Create record mixin from the given record's attributes definition\nexport default function( attributesDefinition : object, baseClassAttributes : AttributeDescriptors ) : RecordAttributesMixin {\n    const myAttributes = _.transform( {} as AttributeDescriptors, attributesDefinition, createAttribute ),\n          allAttributes = _.defaults( {} as AttributeDescriptors, myAttributes, baseClassAttributes );\n\n    const ConstructorsMixin = constructorsMixin( allAttributes );\n\n    return {\n        ...ConstructorsMixin,\n        _attributes : new ConstructorsMixin.AttributesCopy( allAttributes ),\n        _attributesArray : Object.keys( allAttributes ).map( key => allAttributes[ key ] ),\n        properties : _.transform( <PropertyDescriptorMap>{}, myAttributes, x => x.createPropertyDescriptor() ),\n        _toJSON : createToJSON( allAttributes ),\n        ...parseMixin( allAttributes ),\n        ...localEventsMixin( myAttributes ),\n        _endpoints : _.transform( {}, allAttributes, attrDef => attrDef.options.endpoint )\n    }            \n}\n\n// Create attribute from the type spec.\nexport function createAttribute( spec : any, name : string ) : AnyType {\n    return AnyType.create( ChainableAttributeSpec.from( spec ).options, name );\n}\n\nfunction parseMixin( attributes : AttributeDescriptors ) : ParseMixin {\n    const attrsWithParse = Object.keys( attributes ).filter( name => attributes[ name ].parse );\n\n    return attrsWithParse.length ? {\n        _parse : new Function( 'json', `\n            var _attrs = this._attributes;\n\n            ${ attrsWithParse.map( name => `                \n                json.${ name } === void 0 || ( json.${ name } = _attrs.${ name }.parse.call( this, json.${ name }, \"${ name }\" ) );\n            ` ).join('')}\n\n            return json;\n        ` )\n    } : {} as any;\n}\n\nfunction createToJSON( attributes : AttributeDescriptors ) : () => void {\n    return new Function(`\n        var json = {},\n            v = this.attributes,\n            a = this._attributes;\n\n        ${ Object.keys( attributes ).map( key => {\n            if( attributes[ key ].toJSON ){\n                return `json.${key} = a.${key}.toJSON.call( this, v.${ key }, '${key}' );`;\n            }\n        } ).join( '\\n' ) }\n\n        return json;\n    `) as any;\n}\n\nexport function createSharedTypeSpec( Constructor : Function, Attribute : typeof AnyType ){\n    if( !Constructor.hasOwnProperty( 'shared' ) ){\n        Object.defineProperty( Constructor, 'shared', {\n            get(){\n                return new ChainableAttributeSpec({\n                    value : null,\n                    type : Constructor,\n                    _attribute : Attribute\n                });\n            }\n        });\n    }\n}\n\ninterface LocalEventsMixin {\n    _localEvents? : eventsApi.EventMap\n}\n\nfunction localEventsMixin( attrSpecs : AttributeDescriptors ) : LocalEventsMixin {\n    let _localEvents : eventsApi.EventMap;\n\n    for( var key in attrSpecs ){\n        const attribute = attrSpecs[ key ],\n            { _onChange } = attribute.options; \n\n        if( _onChange ){\n            _localEvents || ( _localEvents = new eventsApi.EventMap() );\n\n            _localEvents.addEvent( 'change:' + key,\n                typeof _onChange === 'string' ?\n                    createWatcherFromRef( _onChange, key ) : \n                    wrapWatcher( _onChange, key ) );\n        }\n    }\n\n    return _localEvents ? { _localEvents } : {};\n}\n\nfunction wrapWatcher( watcher, key ){\n    return function( record, value ){\n        watcher.call( record, value, key );\n    } \n}\n\nfunction createWatcherFromRef( ref : string, key : string ){\n    const { local, resolve, tail } = new CompiledReference( ref, true );\n    return local ?\n        function( record, value ){\n            record[ tail ]( value, key );\n        } :\n        function( record, value ){\n            resolve( record )[ tail ]( value, key );\n        }\n}","import { getOwnerEndpoint, startIO, IOOptions, IOEndpoint, IOPromise, IONode } from '../io-tools'\n\nexport interface IORecord extends IONode {\n    getEndpoint() : IOEndpoint\n    save( options? : IOOptions ) : IOPromise<this>\n    fetch( options? : IOOptions ) : IOPromise<this>\n    destroy( options? : IOOptions ) : IOPromise<this>\n    toJSON() : any\n    isNew() : boolean\n    id : string | number\n    set( json : object, options : object )\n}\n\nexport const IORecordMixin = {\n    save( this : IORecord, options : IOOptions = {} ){\n        const endpoint = this.getEndpoint(),\n              json = this.toJSON();\n\n        return startIO(\n            this,\n            this.isNew() ?\n                endpoint.create( json, options, this ) :\n                endpoint.update( this.id, json, options, this ),\n            options,\n\n            update => {\n                this.set( update, { parse : true, ...options } );\n            }\n        );\n    },\n\n    fetch( options : IOOptions = {} ){\n        return startIO(\n            this,\n            this.getEndpoint().read( this.id, options, this ),\n            options,\n\n            json => this.set( json, { parse : true, ...options } )\n        );\n    },\n\n    destroy( options : IOOptions = {} ){  \n        return startIO(\n            this,\n            this.getEndpoint().destroy( this.id, options, this ),\n            options,\n\n            () => {\n                const { collection } = this;\n                if( collection ){\n                    collection.remove( this, options );\n                }\n                else{\n                    this.dispose();\n                }\n\n                return this;\n            }\n        )\n    }\n}","/**\n * Record core implementing transactional updates.\n * The root of all definitions. \n */\n\nimport { Collection } from '../collection';\nimport { IOEndpoint, IOPromise } from '../io-tools';\nimport { define, definitions, mixinRules, tools, log, LogLevel, isProduction } from '../object-plus';\nimport { CloneOptions, Owner, Transaction, Transactional, TransactionalDefinition, TransactionOptions } from '../transactions';\nimport { ChildrenErrors } from '../validation';\nimport { AggregatedType, AnyType, AttributesConstructor, AttributesContainer, AttributesCopyConstructor, AttributesValues, setAttribute, shouldBeAnObject, UpdateRecordMixin } from './attributes';\nimport { IORecord, IORecordMixin } from './io-mixin';\n\nconst { assign, isEmpty } = tools;\n\n/*******************************************************\n * Record core implementation\n */\n\nexport interface ConstructorOptions extends TransactionOptions{\n    clone? : boolean\n}\n\n// Client unique id counter\nlet _cidCounter : number = 0;\n\n/***************************************************************\n * Record Definition as accepted by Record.define( definition )\n */\nexport interface RecordDefinition extends TransactionalDefinition {\n    idAttribute? : string\n    attributes? : AttributesValues\n    collection? : object\n    Collection? : typeof Transactional\n}\n\n@define({\n    // Default client id prefix \n    cidPrefix : 'm',\n\n    // Name of the change event\n    _changeEventName : 'change',\n\n    // Default id attribute name\n    idAttribute : 'id'\n})\n@definitions({\n    defaults : mixinRules.merge,\n    attributes : mixinRules.merge,\n    collection : mixinRules.merge,\n    Collection : mixinRules.value,\n    idAttribute : mixinRules.protoValue\n})\nexport class Record extends Transactional implements IORecord, AttributesContainer {\n    // Hack\n    static onDefine( definition, BaseClass ){}\n\n    static Collection : typeof Collection;\n    static DefaultCollection : typeof Collection;\n\n    static from : ( collectionReference : any ) => any;\n    \n    static defaults( attrs : AttributesValues ) : typeof Record {\n        return <any>this.extend({ attributes : attrs });\n    }\n    \n    static attributes : AttributesValues\n\n    /********************\n     * IO Methods\n     */\n     _endpoints : { [ name : string ] : IOEndpoint }\n\n     // Save record\n     save( options? : object ) : IOPromise<this> { throw new Error( 'Implemented by mixin' ); }\n\n     // Destroy record\n     destroy( options? : object ) : IOPromise<this> { throw new Error( 'Implemented by mixin' ); }\n\n    /***********************************\n     * Core Members\n     */\n    // Previous attributes\n    _previousAttributes : {}\n\n    previousAttributes(){ return new this.AttributesCopy( this._previousAttributes ); } \n\n    // Current attributes    \n    attributes : AttributesValues\n\n    // Polymorphic accessor for aggregated attribute's canBeUpdated().\n    get __inner_state__(){ return this.attributes; }\n\n    // Lazily evaluated changed attributes hash\n    _changedAttributes : AttributesValues\n\n    get changed(){\n        let changed = this._changedAttributes;\n\n        if( !changed ){\n            const prev = this._previousAttributes;\n            changed = {};\n\n            const { _attributes, attributes } = this;\n\n            for( let attr of this._attributesArray ){\n                const key = attr.name,\n                    value = attributes[ key ];\n\n                if( attr.isChanged( value, prev[ key ] ) ){\n                    changed[ key ] = value;\n                }\n            }\n\n            this._changedAttributes = changed;\n        }\n\n        return changed;    \n    }\n\n    changedAttributes( diff? : {} ) : boolean | {} {\n        if( !diff ) return this.hasChanged() ? assign( {}, this.changed ) : false;\n\n        var val, changed : {} | boolean = false,\n            old          = this._transaction ? this._previousAttributes : this.attributes,\n            attrSpecs    = this._attributes;\n\n        for( var attr in diff ){\n            if( !attrSpecs[ attr ].isChanged( old[ attr ], ( val = diff[ attr ] ) ) ) continue;\n            (changed || (changed = {}))[ attr ] = val;\n        }\n\n        return changed;        \n    }\n\n    hasChanged( key? : string ) : boolean {\n        const { _previousAttributes } = this;\n        if( !_previousAttributes ) return false;\n\n        return key ?\n                this._attributes[ key ].isChanged( this.attributes[ key ], _previousAttributes[ key ] ) :\n                !isEmpty( this.changed );\n    }\n\n    previous( key : string ) : any {\n        if( key ){\n            const { _previousAttributes } = this;\n            if( _previousAttributes ) return _previousAttributes[ key ];\n        }\n        \n        return null;\n    }\n\n    isNew() : boolean {\n        return this.id == null;\n    }\n\n    has( key : string ) : boolean {\n        return this[ key ] != void 0;\n    }\n\n    // Return attribute value, setting an attribute to undefined.\n    // TODO: If attribute was aggregated, don't dispose it.\n    unset( key : string, options? ) : any {\n        const value = this[ key ];\n        this.set({ [ key ] : void 0 }, { unset : true, ...options });\n        return value;\n    }\n\n    // Undocumented. Move to NestedTypes?\n    clear( options? ) : this {\n        const nullify = options && options.nullify;\n\n        this.transaction( () =>{\n            this.forEachAttr( this.attributes, ( value, key ) => this[ key ] = nullify ? null : void 0 );\n        }, options );\n\n        return this;\n    }\n\n    // Returns Record owner skipping collections. TODO: Move out\n    getOwner() : Owner {\n        const owner : any = this._owner;\n\n        // If there are no key, owner must be transactional object, and it's the collection.\n        // We don't expect that collection can be the member of collection, so we're skipping just one level up. An optimization.\n        return this._ownerKey ? owner : owner && owner._owner;\n    }\n\n    /***********************************\n     * Identity managements\n     */\n\n    // Id attribute name ('id' by default)\n    idAttribute : string;\n\n    // Fixed 'id' property pointing to id attribute\n    get id() : string | number { return this.attributes[ this.idAttribute ]; }\n    set id( x : string | number ){ setAttribute( this, this.idAttribute, x ); }\n\n    /***********************************\n     * Dynamically compiled stuff\n     */\n\n    // Attributes specifications \n    _attributes : { [ key : string ] : AnyType }\n    _attributesArray : AnyType[]\n\n    // Attributes object copy constructor\n    Attributes : AttributesConstructor\n    AttributesCopy : AttributesCopyConstructor\n\n    // forEach function for traversing through attributes, with protective default implementation\n    // Overriden by dynamically compiled loop unrolled function in define.ts\n    forEachAttr( attrs : {}, iteratee : ( value : any, key? : string, spec? : AnyType ) => void ) : void {\n        const { _attributes } = this;\n        let unknown : string[];\n\n        for( let name in attrs ){\n            const spec = _attributes[ name ];\n\n            if( spec ){\n                iteratee( attrs[ name ], name, spec );\n            }\n            else{\n                unknown || ( unknown = [] );\n                unknown.push( `'${ name }'` );\n            }\n        }\n\n        if( unknown ){\n            this._log( 'warn', 'Type-R:UnknownAttrs', `attributes ${ unknown.join(', ')} are not defined`, {\n                attributes : attrs\n            } );\n        }\n    }\n\n    each( iteratee : ( value? : any, key? : string ) => void, context? : any ){\n        const fun = context !== void 0 ? ( v, k ) => iteratee.call( context, v, k ) : iteratee,\n            { attributes } = this;\n\n        for( const key in this.attributes ){\n            const value = attributes[ key ];\n            if( value !== void 0 ) fun( value, key );\n        }\n    }\n\n    // Get array of attribute keys (Record) or record ids (Collection) \n    keys() : string[] {\n        const keys : string[] = [];\n\n        this.each( ( value, key ) => value === void 0 || keys.push( key ) );\n\n        return keys;\n    }\n\n    // Get array of attribute values (Record) or records (Collection)\n    values() : any[] {\n        return this.map( value => value );\n    }\n\n    // Attributes-level serialization\n    _toJSON(){ return {}; }\n\n    // Attributes-level parse\n    _parse( data ){ return data; }\n\n    // Create record default values, optionally augmenting given values.\n    defaults( values = {} ){\n        const defaults = {},\n            { _attributesArray } = this;\n\n        for( let attr of _attributesArray ){\n            const key = attr.name,\n            value = values[ key ];\n\n            defaults[ key ] = value === void 0 ? attr.defaultValue() : value;\n        }\n\n        return defaults;\n    }\n\n    /***************************************************\n     * Record construction\n     */\n    // Create record, optionally setting an owner\n    constructor( a_values? : {}, a_options? : ConstructorOptions ){\n        super( _cidCounter++ );\n        this.attributes = {};\n        \n        const options = a_options || {},\n              values = ( options.parse ? this.parse( a_values, options ) :  a_values ) || {};\n\n        isProduction || typeCheck( this, values );\n\n        this._previousAttributes = this.attributes = new this.Attributes( this, values, options );\n\n        this.initialize( a_values, a_options );\n\n        if( this._localEvents ) this._localEvents.subscribe( this, this );\n    }\n\n    // Initialization callback, to be overriden by the subclasses \n    initialize( values?, options? ){}\n\n    // Deeply clone record, optionally setting new owner.\n    clone( options : CloneOptions = {} ) : this {\n        const copy : this = new (<any>this.constructor)( this.attributes, { clone : true } );\n        \n        if( options.pinStore ) copy._defaultStore = this.getStore();\n\n        return copy;\n    }\n\n    // Deprecated, every clone is the deep one now.\n    deepClone() : this { return this.clone() };\n\n    // Validate attributes.\n    _validateNested( errors : ChildrenErrors ) : number {\n        var length    = 0;\n\n        this.forEachAttr( this.attributes, ( value, name, attribute ) => {\n            const error = attribute.validate( this, value, name );\n\n            if( error ){\n                errors[ name ] = error;\n                length++;\n            }\n        } );\n\n        return length;\n    }\n\n    // Get attribute by key\n    get( key : string ) : any {\n        return this[ key ];\n    }\n\n    /**\n     * Serialization control\n     */\n\n    // Default record-level serializer, to be overriden by subclasses \n    toJSON() : Object {\n        const json = {};\n\n        this.forEachAttr( this.attributes, ( value, key : string, { toJSON } ) =>{\n            // If attribute serialization is not disabled, and its value is not undefined...\n            if( value !== void 0 ){\n                // ...serialize it according to its spec.\n                const asJson = toJSON.call( this, value, key );\n\n                // ...skipping undefined values. Such an attributes are excluded.\n                if( asJson !== void 0 ) json[ key ] = asJson; \n            }\n        });\n\n        return json;\n    }\n    \n    // Default record-level parser, to be overriden by the subclasses.\n    parse( data, options? : TransactionOptions ){\n        // Call dynamically compiled loop-unrolled attribute-level parse function.\n        return this._parse( data );\n    }\n\n    /**\n     * Transactional control\n     */\n\n    deepSet( name : string, value : any, options? ){\n        // Operation might involve series of nested object updates, thus it's wrapped in transaction.\n        this.transaction( () => {\n            const path  = name.split( '.' ),\n                l     = path.length - 1,\n                attr  = path[ l ];\n\n            let model = this;\n\n            // Locate the model, traversing the path.\n            for( let i = 0; i < l; i++ ){\n                const key = path[ i ];\n\n                // There might be collections in path, so use `get`.\n                let next    = model.get ? model.get( key ) : model[ key ];\n\n                // Create models, if they are not exist.\n                if( !next ){\n                    const attrSpecs = model._attributes;\n                    if( attrSpecs ){\n                        // If current object is model, create default attribute\n                        var newModel = attrSpecs[ key ].create();\n\n                        // If created object is model, nullify attributes when requested\n                        if( options && options.nullify && newModel._attributes ){\n                            newModel.clear( options );\n                        }\n\n                        model[ key ] = next = newModel;\n                    }\n                    // Silently fail in other case.\n                    else return;\n                }\n                \n                model = next;\n            }\n\n            // Set model attribute.\n            if( model.set ){\n                model.set({ [ attr ] : value }, options );\n            }\n            else{\n                model[ attr ] = value;\n            }\n        });\n\n        return this;\n    }\n            \n    // Returns owner without the key (usually it's collection)\n    get collection() : any {\n        return this._ownerKey ? null : this._owner;\n    }\n\n    // Dispose object and all childrens\n    dispose(){\n        if( this._disposed ) return;\n        \n        this.forEachAttr( this.attributes, ( value, key, attribute ) => {\n            attribute.dispose( this, value );\n        });\n\n        super.dispose();\n    }\n\n    _log( level : LogLevel, topic: string, text : string, props : object ) : void {\n        log( level, topic, text, {\n            ...props,\n            'Record' : this,\n            'Attributes definition:' : this._attributes\n        });\n    }\n\n    getClassName() : string {\n        return super.getClassName() || 'Record';\n    }\n\n    // Dummies to \n    _createTransaction( values : object, options : TransactionOptions ) : Transaction { return void 0; }\n    // Simulate attribute change \n    forceAttributeChange : ( key : string, options : TransactionOptions ) => void\n    _onChildrenChange : ( child : Transactional, options : TransactionOptions ) => void\n};\n\nassign( Record.prototype, UpdateRecordMixin, IORecordMixin );\n\n/***********************************************\n * Helper functions\n */\n\nclass BaseRecordAttributes {\n    id : string | number\n\n    constructor( record : Record, x : AttributesValues, options : TransactionOptions ) {\n        this.id = x.id;\n    }\n}\n\nRecord.prototype.Attributes = BaseRecordAttributes;\n\nclass BaseRecordAttributesCopy {\n    id : string | number\n\n    constructor( x : AttributesValues ) {\n        this.id = x.id;\n    }\n}\n\nRecord.prototype.AttributesCopy = BaseRecordAttributesCopy;\n\nconst IdAttribute = AnyType.create({ value : void 0 }, 'id' );\nRecord.prototype._attributes = { id : IdAttribute };\nRecord.prototype._attributesArray = [ IdAttribute ];\nRecord._attribute = AggregatedType;\n\n\nfunction typeCheck( record : Record, values : object ){\n    if( shouldBeAnObject( record, values ) ){\n        const { _attributes } = record;\n        let unknown : string[];\n\n        for( let name in values ){\n            if( !_attributes[ name ] ){\n                unknown || ( unknown = [] );\n                unknown.push( `'${ name }'` );\n            }\n        }\n\n        if( unknown ){\n            record._log( 'warn', 'Type-R:UnknownAttrs', `undefined attributes ${ unknown.join(', ')} are ignored.`, { values } );\n        }\n    }\n}","import { Record, RecordDefinition } from './record'\nimport { Mixable, tools, predefine, define, MixinsState } from '../object-plus'\nimport compile, { ChainableAttributeSpec } from './attributes'\nimport { Transactional } from '../transactions'\n\nimport { createSharedTypeSpec, AggregatedType, MSDateType, TimestampType, NumericType, SharedType } from './attributes'\n\nexport * from './attributes'\nexport { Record }\n\nconst { assign, defaults, omit, getBaseClass } = tools;\n\nRecord.onExtend = function( this : typeof Record, BaseClass : typeof Record ){\n    Transactional.onExtend.call( this, BaseClass );\n\n    // Create the default collection\n    const Class = this;\n\n    @predefine class DefaultCollection extends BaseClass.Collection<any> {\n        static model = Class;\n    }\n\n    this.DefaultCollection = DefaultCollection;\n\n    // If there are no collection defined in statics, use the default collection.\n    // It will appear in onDefine's definition, overriding all other settings.\n    if( Class.Collection === BaseClass.Collection ){\n        this.Collection = DefaultCollection;\n    }\n\n    // Create Class.shared modifier\n    createSharedTypeSpec( this, SharedType );\n}\n\nRecord.onDefine = function( definition : RecordDefinition, BaseClass : typeof Record ){\n    const baseProto : Record = BaseClass.prototype;\n\n    // Compile attributes spec, creating definition mixin.\n    const { properties, _localEvents, ...dynamicMixin } = compile( this.attributes = getAttributes( definition ), baseProto._attributes );\n    assign( this.prototype, dynamicMixin );\n    \n    definition.properties = defaults( definition.properties || {}, properties );\n    definition._localEvents = _localEvents;\n    \n    Transactional.onDefine.call( this, definition, BaseClass );\n\n    // Finalize the definition of the default collection.\n    this.DefaultCollection.define( definition.collection || {} );\n\n    // assign collection from the definition.\n    this.Collection = definition.Collection;\n    this.Collection.prototype.model = this;\n\n    if( definition.endpoint ) this.Collection.prototype._endpoint = definition.endpoint;    \n}\n\nRecord._attribute = AggregatedType;\ncreateSharedTypeSpec( Record, SharedType );\n\nfunction getAttributes({ defaults, attributes, idAttribute } : RecordDefinition ) {\n    const definition = attributes || defaults || {};\n    \n    // If there is an undeclared idAttribute, add its definition as untyped generic attribute.\n    if( idAttribute && !( idAttribute in definition ) ){\n        definition[ idAttribute ] = void 0;\n    }\n\n    return definition;\n}\n\ndeclare var Reflect;\n\nexport function attr( proto : object, attrName : string ) : void;\nexport function attr( spec : any ) : PropertyDecorator;\nexport function attr( proto, attrName? : string ) : any {\n    if( attrName ){\n        // Called without the spec. Extract the type.\n        if( typeof Reflect !== 'undefined' && Reflect.getMetadata ){\n            Reflect\n                .getMetadata( \"design:type\", proto, attrName )\n                .asProp( proto, attrName );\n        }\n        else{\n            proto._log( 'error', 'Type-R:MissingImport', 'Add import \"reflect-metadata\"; as the first line of your app.' );\n        }\n    }\n    else{\n        return ChainableAttributeSpec.from( proto ).asProp;\n    }\n}\n\nexport function prop( spec ) : any {\n    return spec.asProp;\n}","import { Record } from '../record'\nimport { Owner, Transaction, ItemsBehavior,\n        TransactionOptions, Transactional, transactionApi } from '../transactions'\n\nimport { eventsApi, tools } from '../object-plus'\n\nconst { EventMap, trigger2, trigger3, on, off } = eventsApi,\n      { commit, markAsDirty } = transactionApi,\n      _aquire = transactionApi.aquire, _free = transactionApi.free;\n\n/** @private */\nexport interface CollectionCore extends Transactional, Owner {\n    _byId : IdIndex\n    models : Record[]\n    model : typeof Record\n    idAttribute : string // TODO: Refactor inconsistent idAttribute usage\n    _comparator : Comparator\n    get( objOrId : string | Record | Object ) : Record    \n    _itemEvents? : eventsApi.EventMap\n    _shared : number\n    _aggregationError : Record[]\n\n    _log( level : string, topic : string, text : string, value : any ) : void\n}\n\n// Collection's manipulation methods elements\nexport type Elements = ( Object | Record )[];\n\nexport interface CollectionOptions extends TransactionOptions {\n    sort? : boolean\n}\n\nexport type Comparator = ( a : Record, b : Record ) => number;  \n\n/** @private */\nexport function dispose( collection : CollectionCore ) : Record[]{\n    const { models } = collection;\n\n    collection.models = [];\n    collection._byId  = {};\n\n    freeAll( collection, models );\n    return models;\n}\n\n/** @private */\nexport function convertAndAquire( collection : CollectionCore, attrs : {} | Record, options : CollectionOptions ){\n    const { model } = collection;\n    \n    let record : Record;\n\n    if( collection._shared ){\n        record = attrs instanceof model ? attrs : <Record>model.create( attrs, options );\n\n        if( collection._shared & ItemsBehavior.listen ){\n            on( record, record._changeEventName, collection._onChildrenChange, collection );\n        }\n    }\n    else{\n        record = attrs instanceof model ? ( options.merge ? attrs.clone() : attrs ) : <Record>model.create( attrs, options );\n\n        if( !_aquire( collection, record ) ){\n            const errors = collection._aggregationError || ( collection._aggregationError = [] );\n            errors.push( record );\n        }\n    }    \n\n    // Subscribe for events...\n    const { _itemEvents } = collection;\n    _itemEvents && _itemEvents.subscribe( collection, record );\n\n    return record;\n}\n\n/** @private */\nexport function free( owner : CollectionCore, child : Record, unset? : boolean ) : void {\n    if( owner._shared ){\n        if( owner._shared & ItemsBehavior.listen ){\n            off( child, child._changeEventName, owner._onChildrenChange, owner );\n        }\n    }\n    else{\n        _free( owner, child );\n        unset || child.dispose();\n    }\n\n    const { _itemEvents } = owner;\n    _itemEvents && _itemEvents.unsubscribe( owner, child );\n}\n\n/** @private */\nexport function freeAll( collection : CollectionCore, children : Record[] ) : Record[] {\n    for( let child of children ){\n        free( collection, child );\n    }\n\n    return children;\n}\n\n/**\n * Silently sort collection, if its required. Returns true if sort happened.\n * @private\n */   \nexport function sortElements( collection : CollectionCore, options : CollectionOptions ) : boolean {\n    let { _comparator } = collection;\n    if( _comparator && options.sort !== false ){\n        collection.models.sort( _comparator );\n        return true;\n    }\n\n    return false;\n}\n\n/**********************************\n * Collection Index\n * @private \n */\nexport interface IdIndex {\n    [ id : string ] : Record\n}\n\n/** @private Add record */ \nexport function addIndex( index : IdIndex, model : Record ) : void {\n    index[ model.cid ] = model;\n    var id             = model.id;\n    \n    if( id || id === 0 ){\n        index[ id ] = model;\n    }\n}\n\n/** @private Remove record */ \nexport function removeIndex( index : IdIndex, model : Record ) : void {\n    delete index[ model.cid ];\n    var id = model.id;\n    if( id || id === 0 ){\n        delete index[ id ];\n    }\n}\n\nexport function updateIndex( index : IdIndex, model : Record ){\n    delete index[ model.previous( model.idAttribute ) ];\n\n    const { id } = model;\n    id == null || ( index[ id ] = model );\n}\n\n/***\n * In Collections, transactions appears only when\n * add remove or change events might be emitted.\n * reset doesn't require transaction.\n * \n * Transaction holds information regarding events, and knows how to emit them.\n * \n * Two major optimization cases.\n * 1) Population of an empty collection\n * 2) Update of the collection (no or little changes) - it's crucial to reject empty transactions.\n */\n\n\n// Transaction class. Implements two-phase transactions on object's tree.\n/** @private */ \nexport class CollectionTransaction implements Transaction {\n    // open transaction\n    constructor(    public object : CollectionCore,\n                    public isRoot : boolean,\n                    public added : Record[],\n                    public removed : Record[],\n                    public nested : Transaction[],\n                    public sorted : boolean ){}\n\n    // commit transaction\n    commit( initiator? : Transactional ){\n        const { nested, object } = this,\n              { _isDirty } = object;\n\n        // Commit all nested transactions...\n        for( let transaction of nested ){\n            transaction.commit( object );\n        }\n\n        if( object._aggregationError ){\n            logAggregationError( object );\n        }\n\n        // Just trigger 'change' on collection, it must be already triggered for models during nested commits.\n        // ??? TODO: do it in nested transactions loop? This way appears to be more correct. \n        for( let transaction of nested ){\n            trigger2( object, 'change', transaction.object, _isDirty );\n        }\n\n        // Notify listeners on attribute changes...\n        const { added, removed } = this;\n\n        // Trigger `add` events for both model and collection.\n        for( let record of added ){\n            trigger3( record, 'add', record, object, _isDirty );\n            trigger3( object, 'add', record, object, _isDirty );\n        }\n\n        // Trigger `remove` events for both model and collection.\n        for( let record of removed ){\n            trigger3( record, 'remove', record, object, _isDirty );\n            trigger3( object, 'remove', record, object, _isDirty );\n        }\n\n        if( this.sorted ){\n            trigger2( object, 'sort', object, _isDirty );\n        }\n\n        if( added.length || removed.length ){\n            trigger2( object, 'update', object, _isDirty );\n        }\n\n        this.isRoot && commit( object, initiator );\n    }\n}\n\nexport function logAggregationError( collection : CollectionCore ){\n    collection._log( 'error', 'Type-R:InvalidOwner', 'added records already have an owner', collection._aggregationError );\n    collection._aggregationError = void 0;\n}","import { Transaction, transactionApi } from '../transactions'\nimport { CollectionTransaction, logAggregationError, sortElements, convertAndAquire, free, CollectionOptions, addIndex, updateIndex, CollectionCore } from './commons'\nimport { Record } from '../record'\n\nconst { begin, commit, markAsDirty } = transactionApi;\n\nexport interface AddOptions extends CollectionOptions {\n    at? : number \n}\n\n/** @private */\nexport function addTransaction( collection : CollectionCore, items : any[], options : AddOptions, merge? : boolean ){\n    const isRoot = begin( collection ),\n          nested : Transaction[]= [];\n\n    var added = appendElements( collection, items, nested, options, merge );\n\n    if( added.length || nested.length ){\n        let needSort = sortOrMoveElements( collection, added, options );\n        if( markAsDirty( collection, options ) ){\n            return new CollectionTransaction( collection, isRoot, added, [], nested, needSort );\n        }\n\n        if( collection._aggregationError ) logAggregationError( collection );\n    }\n\n    // No changes...\n    isRoot && commit( collection );\n};\n\n// Handle sort or insert at options for add operation. Reurns true if sort happened.\n/** @private */ \nfunction sortOrMoveElements( collection : CollectionCore, added : Record[], options : AddOptions ) : boolean {\n    let at = options.at;\n\n    // if `at` option is given, it overrides sorting option...\n    if( at != null ){\n        // Take an original collection's length. \n        const length = collection.models.length - added.length;\n\n        // Crazy Backbone rules about `at` index. I don't know what that guys smoke.\n        at = Number( at );\n        if( at < 0 ) at += length + 1;\n        if( at < 0 ) at = 0;\n        if( at > length ) at = length;\n\n        // Move added elements to desired position. In place.\n        moveElements( collection.models, at, added );\n        return false;\n    }\n\n    return sortElements( collection, options );\n}\n\n/** @private */\nfunction moveElements( source : any[], at : number, added : any[] ) : void {\n    for( var j = source.length - 1, i = j - added.length; i >= at; i--, j-- ){\n        source[ j ] = source[ i ];\n    }\n\n    for( i = 0, j = at; i < added.length; i++, j++ ){\n        source[ j ] = added[ i ];\n    }\n}\n\n// append data to model and index\n/** @private */\nfunction appendElements( collection : CollectionCore, a_items : any[], nested : Transaction[], a_options : AddOptions, forceMerge : boolean ){\n    var { _byId, models } = collection,\n        merge       = ( forceMerge || a_options.merge ) && !collection._shared,\n        parse       = a_options.parse,\n        idAttribute = collection.model.prototype.idAttribute,\n        prevLength = models.length;\n\n    for( const item of a_items ){\n        let model = item ? _byId[ item[ idAttribute ] ] || _byId[ item.cid ] : null;\n\n        if( model ){\n            if( merge && item !== model ){\n                var attrs = item.attributes || item;\n                const transaction = model._createTransaction( attrs, a_options );\n                transaction && nested.push( transaction );\n\n                if( model.hasChanged( idAttribute ) ){\n                    updateIndex( _byId, model );\n                }\n            }\n        }\n        else{\n            model = convertAndAquire( collection, item, a_options );\n            models.push( model );\n            addIndex( _byId, model );\n        }\n    }\n\n    return models.slice( prevLength );\n}\n","/*************\n * Remove items from collections.\n * \n * Cannot be a part of two-phase transaction on object tree.\n * Can be executed in the scope of ad-hoc transaction or from the trigger, though.\n *\n * Implemented with low-level API. \n * Most frequent operation - single element remove. Thus, it have the fast-path.\n */\n\nimport { Record } from '../record'\nimport { free, CollectionCore, CollectionTransaction, removeIndex } from './commons'\nimport { eventsApi } from '../object-plus'\nimport { TransactionOptions, transactionApi } from '../transactions' \n\nconst { trigger2, trigger3 } = eventsApi,\n    { markAsDirty, begin, commit } = transactionApi;\n\n/** @private */\nexport function removeOne( collection : CollectionCore, el : Record | {} | string, options : TransactionOptions ) : Record {\n    var model : Record = collection.get( el );\n\n    if( model ){\n        const isRoot = begin( collection ),\n              models = collection.models;\n\n        // Remove model form the collection. \n        models.splice( models.indexOf( model ), 1 );\n        removeIndex( collection._byId, model );\n        \n        // Mark transaction as dirty. \n        const notify = markAsDirty( collection, options );\n\n        // Send out events.\n        if( notify ){\n            trigger3( model, 'remove', model, collection, options );\n            trigger3( collection, 'remove', model, collection, options );\n        } \n\n        free( collection, model, options.unset );\n\n        notify && trigger2( collection, 'update', collection, options );\n\n        // Commit transaction.\n        isRoot && commit( collection );\n\n        return model;\n    }\n};\n\n/** Optimized for removing many elements\n * 1. Remove elements from the index, checking for duplicates\n * 2. Create new models array matching index\n * 3. Send notifications and remove references\n */\n\n/** @private */\nexport function removeMany( collection : CollectionCore, toRemove : any[], options ){\n    const removed = _removeFromIndex( collection, toRemove, options.unset );\n    if( removed.length ){\n        const isRoot = begin( collection );\n\n        _reallocate( collection, removed.length );\n\n        if( markAsDirty( collection, options ) ){\n            const transaction = new CollectionTransaction( collection, isRoot, [], removed, [], false );\n            transaction.commit();\n        }\n        else{\n            // Commit transaction.\n            isRoot && commit( collection );\n        }\n    }\n\n    return removed;\n};\n\n// remove models from the index...\n/** @private */\nfunction _removeFromIndex( collection, toRemove, unset : boolean ){\n    var removed = Array( toRemove.length ),\n        _byId   = collection._byId;\n\n    for( var i = 0, j = 0; i < toRemove.length; i++ ){\n        var model = collection.get( toRemove[ i ] );\n        if( model ){\n            removed[ j++ ] = model;\n            removeIndex( _byId, model );\n            free( collection, model, unset );\n        }\n    }\n\n    removed.length = j;\n\n    return removed;\n}\n\n// Allocate new models array removing models not present in the index.\n/** @private */\nfunction _reallocate( collection, removed ){\n    var prev   = collection.models,\n        models = collection.models = Array( prev.length - removed ),\n        _byId = collection._byId;\n\n    for( var i = 0, j = 0; i < prev.length; i++ ){\n        var model = prev[ i ];\n\n        if( _byId[ model.cid ] ){\n            models[ j++ ] = model;\n        }\n    }\n\n    models.length = j;\n}","import { Transaction, transactionApi } from '../transactions'\nimport { CollectionTransaction, logAggregationError, IdIndex, convertAndAquire, free, sortElements, CollectionOptions, addIndex, CollectionCore, Elements, freeAll } from './commons'\nimport { Record } from '../record'\n\nconst { begin, commit, markAsDirty } = transactionApi;\n\n/** @private */\nconst silentOptions = { silent : true };\n\n/** @private */\nexport function emptySetTransaction( collection : CollectionCore, items : Elements, options : CollectionOptions, silent? : boolean ){\n    const isRoot = begin( collection );\n\n    const added = _reallocateEmpty( collection, items, options );\n\n    if( added.length ){\n        const needSort = sortElements( collection, options );\n\n        if( markAsDirty( collection, silent ? silentOptions : options ) ){\n            // 'added' is the reference to this.models. Need to copy it.\n            return new CollectionTransaction( collection, isRoot, added.slice(), [], [], needSort );\n        }\n\n        if( collection._aggregationError ) logAggregationError( collection );\n    }\n\n    // No changes...\n    isRoot && commit( collection );\n};\n\n/** @private */\nexport function setTransaction( collection, items, options ){\n    const isRoot = begin( collection ),\n          nested = [];\n\n    var previous = collection.models,\n        added    = _reallocate( collection, items, nested, options );\n\n    const reusedCount = collection.models.length - added.length,\n          removed = reusedCount < previous.length ? (\n                        reusedCount ? _garbageCollect( collection, previous ) :\n                                        freeAll( collection, previous )\n                    ) : [];                    \n    \n    const addedOrChanged = nested.length || added.length,\n          // As we are reallocating models array, it needs to be sorted even if there are no changes.\n          sorted = ( sortElements( collection, options ) && addedOrChanged ) || added.length || options.sorted;\n\n    if( addedOrChanged || removed.length || sorted ){\n        if( markAsDirty( collection, options ) ){ \n            return new CollectionTransaction( collection, isRoot, added, removed, nested, sorted );\n        }\n\n        if( collection._aggregationError ) logAggregationError( collection );\n    }\n\n    isRoot && commit( collection );\n};\n\n// Remove references to all previous elements, which are not present in collection.\n// Returns an array with removed elements.\n/** @private */\nfunction _garbageCollect( collection : CollectionCore, previous : Record[] ) : Record[]{\n    const { _byId }  = collection,\n          removed = [];\n\n    // Filter out removed models and remove them from the index...\n    for( let record of previous ){\n        if( !_byId[ record.cid ] ){\n            removed.push( record );\n            free( collection, record );\n        }\n    }\n\n    return removed;\n}\n\n// reallocate model and index\n/** @private */\nfunction _reallocate( collection : CollectionCore, source : any[], nested : Transaction[], options ){\n    var models      = Array( source.length ),\n        _byId : IdIndex = {},\n        merge       = ( options.merge == null ? true : options.merge ) && !collection._shared,\n        _prevById   = collection._byId,\n        prevModels  = collection.models, \n        idAttribute = collection.model.prototype.idAttribute,\n        toAdd       = [],\n        orderKept   = true;\n\n    // for each item in source set...\n    for( var i = 0, j = 0; i < source.length; i++ ){\n        var item  = source[ i ],\n            model : Record = null;\n\n        if( item ){\n            var id  = item[ idAttribute ],\n                cid = item.cid;\n\n            if( _byId[ id ] || _byId[ cid ] ) continue;\n\n            model = _prevById[ id ] || _prevById[ cid ];\n        }\n\n        if( model ){\n            if( merge && item !== model ){\n                if( orderKept && prevModels[ j ] !== model ) orderKept = false;\n\n                var attrs = item.attributes || item;\n                const transaction = model._createTransaction( attrs, options );\n                transaction && nested.push( transaction );\n            }\n        }\n        else{\n            model = convertAndAquire( collection, item, options );\n            toAdd.push( model );\n        }\n\n        models[ j++ ] = model;\n        addIndex( _byId, model );\n    }\n\n    models.length = j;\n    collection.models   = models;\n    collection._byId    = _byId;\n\n    if( !orderKept ) options.sorted = true;\n\n    return toAdd;\n}\n\n/** @private */\nfunction _reallocateEmpty( self, source, options ){\n    var len         = source ? source.length : 0,\n        models      = Array( len ),\n        _byId : IdIndex = {},\n        idAttribute = self.model.prototype.idAttribute;\n\n    for( var i = 0, j = 0; i < len; i++ ){\n        var src = source[ i ];\n\n        if( src && ( _byId[ src[ idAttribute ] ] || _byId[ src.cid ] ) ){\n            continue;\n        }\n\n        var model = convertAndAquire( self, src, options );\n        models[ j++ ] = model;\n        addIndex( _byId, model );\n    }\n\n    models.length = j;\n    self._byId    = _byId;\n\n    return self.models = models;\n}","import { IOPromise, startIO } from '../io-tools';\nimport { define, definitions, EventMap, eventsApi, EventsDefinition, Mixable, mixinRules, tools, log, LogLevel } from '../object-plus';\nimport { AggregatedType, createSharedTypeSpec, Record, SharedType } from '../record';\nimport { CloneOptions, ItemsBehavior, Transactional, TransactionalDefinition, transactionApi, TransactionOptions } from '../transactions';\nimport { AddOptions, addTransaction } from './add';\nimport { CollectionCore, CollectionTransaction, Elements, free, sortElements, updateIndex } from './commons';\nimport { removeMany, removeOne } from './remove';\nimport { emptySetTransaction, setTransaction } from './set';\n\n\nconst { trigger2, on, off } = eventsApi,\n    { begin, commit, markAsDirty } = transactionApi,\n    { omit, assign, defaults, assignToClassProto } = tools;\n\nlet _count = 0;\n\nexport type GenericComparator = string | ( ( x : Record ) => number ) | ( ( a : Record, b : Record ) => number ); \n\nexport interface CollectionOptions extends TransactionOptions {\n    comparator? : GenericComparator\n    model? : typeof Record\n}\n\nexport type Predicate<R> = ( val : R, key : number ) => boolean | object;\n\nexport interface CollectionDefinition extends TransactionalDefinition {\n    model? : typeof Record,\n    itemEvents? : EventsDefinition\n    _itemEvents? : EventMap\n}\n\nconst slice = Array.prototype.slice;\n\nclass CollectionRefsType extends SharedType {\n    static defaultValue = [];\n}\n\n@define({\n    // Default client id prefix \n    cidPrefix : 'c',\n    model : Record,\n    _changeEventName : 'changes',\n    _aggregationError : null\n})\n@definitions({\n    comparator : mixinRules.value,\n    model : mixinRules.protoValue,\n    itemEvents : mixinRules.merge\n})\nexport class Collection< R extends Record = Record> extends Transactional implements CollectionCore {\n    _shared : number\n    _aggregationError : R[]\n\n    static Subset : typeof Collection\n    static Refs : typeof Collection\n    static _SubsetOf : typeof Collection\n    \n    createSubset( models : ElementsArg, options ){\n        const SubsetOf = (<any>this.constructor).subsetOf( this ).options.type,\n            subset   = new SubsetOf( models, options );\n            \n        subset.resolve( this );\n        return subset;\n    }\n\n    static onExtend( BaseClass : typeof Transactional ){\n        // Cached subset collection must not be inherited.\n        const Ctor = this;\n        this._SubsetOf = null;\n\n        function RefsCollection( a, b, listen? ){\n            Ctor.call( this, a, b, ItemsBehavior.share | ( listen ? ItemsBehavior.listen : 0 ) );\n        }\n\n        Mixable.mixins.populate( RefsCollection );\n        \n        RefsCollection.prototype = this.prototype;\n        RefsCollection._attribute = CollectionRefsType;\n\n        this.Refs = this.Subset = <any>RefsCollection;\n\n        Transactional.onExtend.call( this, BaseClass );\n        createSharedTypeSpec( this, SharedType );\n    }\n    \n    static onDefine( definition : CollectionDefinition, BaseClass : any ){\n        if( definition.itemEvents ){\n            const eventsMap = new EventMap( BaseClass.prototype._itemEvents );\n            eventsMap.addEventsMap( definition.itemEvents );\n            this.prototype._itemEvents = eventsMap;\n        }\n\n        if( definition.comparator !== void 0 ) this.prototype.comparator = definition.comparator;\n\n        Transactional.onDefine.call( this, definition );\n    }\n\n    static subsetOf : ( collectionReference : any ) => any;\n    \n    _itemEvents : EventMap\n\n    /***********************************\n     * Core Members\n     */\n    // Array of the records\n    models : R[]\n\n    // Polymorphic accessor for aggregated attribute's canBeUpdated().\n    get __inner_state__(){ return this.models; }\n\n    // Index by id and cid\n    _byId : { [ id : string ] : R }\n\n    set comparator( x : GenericComparator ){\n        let compare;\n\n        switch( typeof x ){\n            case 'string' :\n                this._comparator = ( a, b ) => {\n                    const aa = a[ <string>x ], bb = b[ <string>x ];\n                    if( aa === bb ) return 0;\n                    return aa < bb ? -1 : + 1;\n                } \n                break;\n            case 'function' :\n                if( x.length === 1 ){\n                    this._comparator = ( a, b ) => {\n                        const aa = (<any>x).call( this, a ), bb = (<any>x).call( this, b );\n                        if( aa === bb ) return 0;\n                        return aa < bb ? -1 : + 1;\n                    }\n                }\n                else{\n                    this._comparator = ( a, b ) => (<any>x).call( this, a, b );\n                }\n                break;\n                \n            default :\n                this._comparator = null;\n        }\n    }\n    \n    // TODO: Improve typing\n    getStore() : Transactional {\n        return this._store || ( this._store = this._owner ? this._owner.getStore() : this._defaultStore );\n    }\n\n    _store : Transactional\n\n    get comparator(){ return this._comparator; }\n    _comparator : ( a : R, b : R ) => number\n\n    _onChildrenChange( record : R, options : TransactionOptions = {}, initiator? : Transactional ){\n        // Ignore updates from nested transactions.\n        if( initiator === this ) return;\n\n        const { idAttribute } = this;\n\n        if( record.hasChanged( idAttribute ) ){\n            updateIndex( this._byId, record );\n        }\n\n        const isRoot = begin( this );\n\n        if( markAsDirty( this, options ) ){\n            // Forward change event from the record.\n            trigger2( this, 'change', record, options )\n        }\n\n        isRoot && commit( this );\n    }\n\n    get( objOrId : string | R | Object ) : R {\n        if( objOrId == null ) return;\n\n        if( typeof objOrId === 'object' ){\n            const id = objOrId[ this.idAttribute ];\n            return ( id !== void 0 && this._byId[ id ] ) || this._byId[ (<R>objOrId).cid ];\n        }\n        else{\n            return this._byId[ objOrId ];\n        }        \n    }\n\n    each( iteratee : ( val : R, key : number ) => void, context? : any ){\n        const fun = bindContext( iteratee, context ),\n            { models } = this;\n\n        for( let i = 0; i < models.length; i++ ){\n            fun( models[ i ], i ); \n        }\n    }\n\n    forEach( iteratee : ( val : R, key? : number ) => void, context? : any ){\n        return this.each( iteratee, context );\n    }\n\n    every( iteratee : Predicate<R>, context? : any ) : boolean {\n        const fun = toPredicateFunction( iteratee, context ),\n            { models } = this;\n\n        for( let i = 0; i < models.length; i++ ){\n            if( !fun( models[ i ], i ) ) return false;\n        }\n\n        return true;\n    }\n\n    filter( iteratee : Predicate<R>, context? : any ) : R[] {\n        const fun = toPredicateFunction( iteratee, context ),\n            { models } = this;\n\n        return this.map( ( x, i ) => fun( x, i ) ? x : void 0 );\n    }\n\n    find( iteratee : Predicate<R>, context? : any ) : R {\n        const fun = toPredicateFunction( iteratee, context ),\n        { models } = this;\n\n        for( let i = 0; i < models.length; i++ ){\n            if( fun( models[ i ], i ) ) return models[ i ];\n        }\n\n        return null;\n    }\n\n    some( iteratee : Predicate<R>, context? : any ) : boolean {\n        return Boolean( this.find( iteratee, context ) );\n    }\n\n    map< T >( iteratee : ( val : R, key : number ) => T, context? : any ) : T[]{\n        const fun = bindContext( iteratee, context ),\n            { models } = this,\n            mapped = Array( models.length );\n\n        let j = 0;\n\n        for( let i = 0; i < models.length; i++ ){\n            const x = fun( models[ i ], i );\n            x === void 0 || ( mapped[ j++ ] = x ); \n        }\n\n        mapped.length = j;\n\n        return mapped;\n    }\n\n    _validateNested( errors : {} ) : number {\n        // Don't validate if not aggregated.\n        if( this._shared ) return 0;\n\n        let count = 0;\n\n        this.each( record => {\n            const error = record.validationError;\n            if( error ){\n                errors[ record.cid ] = error;\n                count++;\n            }\n        });\n\n        return count;\n    }\n\n    model : typeof Record\n\n    // idAttribute extracted from the model type.\n    idAttribute : string\n\n    constructor( records? : ( R | {} )[], options : CollectionOptions = {}, shared? : number ){\n        super( _count++ );\n        this.models = [];\n        this._byId = {};\n        \n        this.comparator  = this.comparator;\n\n        if( options.comparator !== void 0 ){\n            this.comparator = options.comparator;\n            options.comparator = void 0;\n        }\n        \n        this.model       = this.model;\n        \n        if( options.model ){\n            this.model = options.model;\n            options.model = void 0;\n        }\n\n        this.idAttribute = this.model.prototype.idAttribute; //TODO: Remove?\n\n        this._shared = shared || 0;\n\n        if( records ){\n            const elements = toElements( this, records, options );\n            emptySetTransaction( this, elements, options, true );\n        }\n\n        this.initialize.apply( this, arguments );\n\n        if( this._localEvents ) this._localEvents.subscribe( this, this );\n    }\n\n    initialize(){}\n\n    get length() : number { return this.models.length; }\n    first() : R { return this.models[ 0 ]; }\n    last() : R { return this.models[ this.models.length - 1 ]; }\n    at( a_index : number ) : R {\n        const index = a_index < 0 ? a_index + this.models.length : a_index;    \n        return this.models[ index ];\n    }\n\n    // Deeply clone collection, optionally setting new owner.\n    clone( options : CloneOptions = {} ) : this {\n        const models = this._shared & ItemsBehavior.share ? this.models : this.map( model => model.clone() ),\n              copy : this = new (<any>this.constructor)( models, { model : this.model, comparator : this.comparator }, this._shared );\n        \n        if( options.pinStore ) copy._defaultStore = this.getStore();\n        \n        return copy;\n    }\n\n    toJSON() : Object[] {\n        return this.models.map( model => model.toJSON() );\n    }\n\n    // Apply bulk in-place object update in scope of ad-hoc transaction \n    set( elements : ElementsArg = [], options : TransactionOptions = {} ) : this {\n        if( (<any>options).add !== void 0 ){\n            this._log( 'warn', \"Type-R:InvalidOption\", \"Collection.set doesn't support 'add' option, behaving as if options.add === true.\", options );\n        }\n\n        // Handle reset option here - no way it will be populated from the top as nested transaction.\n        if( options.reset ){\n            this.reset( elements, options )\n        }\n        else{\n            const transaction = this._createTransaction( elements, options );\n            transaction && transaction.commit();\n        } \n\n        return this;    \n    }\n\n        /**\n     * Enable or disable live updates.\n     * \n     * `true` enables full collection synchronization.\n     * `false` cancel live updates.\n     * `json => true | false` - filter updates\n     */\n    liveUpdates( enabled : LiveUpdatesOption ) : IOPromise<this> {\n        if( enabled ){\n            this.liveUpdates( false );\n\n            const filter = typeof enabled === 'function' ? enabled : () => true;\n\n            this._liveUpdates = {\n                updated : json => {\n                    filter( json ) && this.add( json, { parse : true, merge : true } );\n                },\n\n                removed : id => this.remove( id )\n            };\n\n            return this.getEndpoint().subscribe( this._liveUpdates, this ).then( () => this );\n        }\n        else{\n            if( this._liveUpdates ){\n                this.getEndpoint().unsubscribe( this._liveUpdates, this );\n                this._liveUpdates = null;\n            }\n        }\n    }\n\n    _liveUpdates : object\n\n    fetch( a_options : { liveUpdates? : LiveUpdatesOption } & TransactionOptions = {} ) : IOPromise<this> {\n        const options = { parse : true, ...a_options },\n            endpoint = this.getEndpoint();\n\n        return startIO(\n            this,\n            endpoint.list( options, this ),\n            options,\n\n            json => {\n                let result : any = this.set( json, { parse : true, ...options } as TransactionOptions );\n                \n                if( options.liveUpdates ){\n                    result = this.liveUpdates( options.liveUpdates );\n                }\n\n                return result;\n            }\n        );\n    }\n\n    dispose() : void {\n        if( this._disposed ) return;\n\n        const aggregated = !this._shared;\n\n        for( let record of this.models ){\n            free( this, record );\n\n            if( aggregated ) record.dispose();\n        }\n\n        this.liveUpdates( false );\n\n        super.dispose();\n    }\n\n    reset( a_elements? : ElementsArg, options : TransactionOptions = {} ) : R[] {\n        const isRoot = begin( this ),\n              previousModels = this.models;\n\n        // Make all changes required, but be silent.\n        if( a_elements ){            \n            emptySetTransaction( this, toElements( this, a_elements, options ), options, true );\n        }\n        else{\n            this._byId = {};\n            this.models = [];\n        }\n\n        markAsDirty( this, options );\n\n        options.silent || trigger2( this, 'reset', this, defaults( { previousModels : previousModels }, options ) );\n\n        // Dispose models which are not in the updated collection.\n        const { _byId } = this;\n        \n        for( let toDispose of previousModels ){\n            _byId[ toDispose.cid ] || free( this, toDispose );\n        }\n\n        isRoot && commit( this );\n        return this.models;\n    }\n\n    // Add elements to collection.\n    add( a_elements : ElementsArg , options : AddOptions = {} ){\n        const elements = toElements( this, a_elements, options ),\n              transaction = this.models.length ?\n                    addTransaction( this, elements, options ) :\n                    emptySetTransaction( this, elements, options );\n\n        if( transaction ){\n            transaction.commit();\n            return transaction.added;\n        }\n    }\n\n    // Remove elements. \n    remove( recordsOrIds : any, options : CollectionOptions = {} ) : R[] | R {\n        if( recordsOrIds ){\n            return Array.isArray( recordsOrIds ) ?\n                        removeMany( this, recordsOrIds, options ) as R[]:\n                        removeOne( this, recordsOrIds, options ) as R;\n        }\n\n        return [];\n    }\n\n    // Apply bulk object update without any notifications, and return open transaction.\n    // Used internally to implement two-phase commit.   \n    _createTransaction( a_elements : ElementsArg, options : TransactionOptions = {} ) : CollectionTransaction | void {\n        const elements = toElements( this, a_elements, options );\n\n        if( this.models.length ){\n            return options.remove === false ?\n                        addTransaction( this, elements, options, true ) :\n                        setTransaction( this, elements, options );\n        }\n        else{\n            return emptySetTransaction( this, elements, options );\n        }\n    }\n\n    static _attribute = AggregatedType;\n\n    /***********************************\n     * Collection manipulation methods\n     */\n\n    pluck( key : keyof R ) : any[] {\n        return this.models.map( model => model[ key ] );\n    }\n\n    sort( options : TransactionOptions = {} ) : this {\n        if( sortElements( this, options ) ){\n            const isRoot = begin( this );\n            \n            if( markAsDirty( this, options ) ){\n                trigger2( this, 'sort', this, options );\n            }\n\n            isRoot && commit( this );\n        }\n\n        return this;\n    }\n\n    // Add a model to the end of the collection.\n    push(model : ElementsArg, options : CollectionOptions ) {\n      return this.add(model, assign({at: this.length}, options));\n    }\n\n    // Remove a model from the end of the collection.\n    pop( options : CollectionOptions ) : R {\n      var model = this.at(this.length - 1);\n      this.remove(model, { unset : true, ...options });\n      return model;\n    }\n\n    // Remove and return given model.\n    // TODO: do not dispose the model for aggregated collection.\n    unset( modelOrId : R | string, options? ) : R {\n        const value = this.get( modelOrId );\n        this.remove( modelOrId, { unset : true, ...options } );\n        return value;\n    }\n\n    // Add a model to the beginning of the collection.\n    unshift(model : ElementsArg, options : CollectionOptions ) {\n      return this.add(model, assign({at: 0}, options));\n    }\n\n    // Remove a model from the beginning of the collection.\n    shift( options? : CollectionOptions ) : R {\n      var model = this.at(0);\n      this.remove( model, { unset : true, ...options } );\n      return model;\n    }\n\n    // Slice out a sub-array of models from the collection.\n    slice() : R[] {\n      return slice.apply(this.models, arguments);\n    }\n\n    indexOf( modelOrId : any ) : number {\n        const record = this.get( modelOrId );\n        return this.models.indexOf( record );\n    }\n\n    modelId( attrs : {} ) : any {\n        return attrs[ this.model.prototype.idAttribute ];\n    }\n\n    // Toggle model in collection.\n    toggle( model : R, a_next? : boolean ) : boolean {\n        var prev = Boolean( this.get( model ) ),\n            next = a_next === void 0 ? !prev : Boolean( a_next );\n\n        if( prev !== next ){\n            if( prev ){\n                this.remove( model );\n            }\n            else{\n                this.add( model );\n            }\n        }\n\n        return next;\n    }\n\n    _log( level : LogLevel, topic : string, text : string, value ) : void {\n        log( level, topic, `${ this.model.prototype.getClassName() }.${ this.getClassName() }: ` + text, {\n            Argument : value,\n            'Attributes spec' : this.model.prototype._attributes\n        });\n    }\n\n    getClassName() : string {\n        return super.getClassName() || 'Collection';\n    }\n}\n\nexport type LiveUpdatesOption = boolean | ( ( x : any ) => boolean );\n\nexport type ElementsArg = Object | Record | Object[] | Record[];\n\n// TODO: make is safe for parse to return null (?)\nfunction toElements( collection : Collection, elements : ElementsArg, options : CollectionOptions ) : Elements {\n    const parsed = options.parse ? collection.parse( elements, options ) : elements; \n    return Array.isArray( parsed ) ? parsed : [ parsed ];\n}\n\ncreateSharedTypeSpec( Collection, SharedType );\n\nRecord.Collection = <any>Collection;\n\nfunction bindContext( fun : Function, context? : any ){\n    return context !== void 0 ? ( v, k ) => fun.call( context, v, k ) : fun;\n}\n\nfunction toPredicateFunction<R>( iteratee : Predicate<R>, context : any ){\n    if( typeof iteratee === 'object' ){\n        // Wrap object to the predicate...\n        return x => {\n            for( let key in iteratee as any ){\n                if( iteratee[ key ] !== x[ key ] )\n                    return false;\n            }\n\n            return true;\n        }\n    }\n    \n    return bindContext( iteratee, context );\n\n}","import { Collection } from '../collection'\nimport { Record } from '../record'\nimport { CompiledReference } from '../traversable'\n\nexport type CollectionReference = ( () => Collection ) | Collection | string; \n\n/** @private */\nexport function parseReference( collectionRef : CollectionReference ) : ( root : Record ) => Collection {\n    switch( typeof collectionRef ){\n        case 'function' :\n            return root => (<any>collectionRef).call( root );\n        case 'object'   :\n            return () => <Collection>collectionRef;\n        case 'string'   :\n            const { resolve } = new CompiledReference( <string>collectionRef );\n            return resolve;\n    }\n}","import { AnyType, AttributeOptions } from '../record'\nimport { parseReference, CollectionReference } from './commons'\nimport { Collection } from '../collection'\nimport { Record } from '../record'\n\nimport { ChainableAttributeSpec } from '../record'\n\n/********\n * Reference to model by id.\n * \n * Untyped attribute. Holds model id, when unresolved. When resolved, is substituted\n * with a real model.\n * \n * No model changes are detected and counted as owner's change. That's intentional.\n */\n\n/** @private */\ntype RecordRefValue = Record | string;\n\n/** @private */\nclass RecordRefType extends AnyType {\n    // It is always serialized as an id, whenever it's resolved or not. \n    toJSON( value : RecordRefValue ){\n        return value && typeof value === 'object' ? value.id : value;\n    }\n\n    // Wne \n    clone( value : RecordRefValue ){\n        return value && typeof value === 'object' ? value.id : value;\n    }\n\n    // Model refs by id are equal when their ids are equal.\n    isChanged( a : RecordRefValue, b : RecordRefValue){\n        var aId = a && ( (<Record>a).id == null ? a : (<Record>a).id ),\n            bId = b && ( (<Record>b).id == null ? b : (<Record>b).id );\n\n        return aId !== bId;\n    }\n\n    // Refs are always valid.\n    validate( model, value, name ){}\n}\n\nRecord.from = function from( masterCollection : CollectionReference ) : ChainableAttributeSpec {\n    const getMasterCollection = parseReference( masterCollection );\n\n    const typeSpec = new ChainableAttributeSpec({\n        value : null,\n        _attribute : RecordRefType\n    });\n    \n    return typeSpec\n        .get( function( objOrId : RecordRefValue, name : string ) : Record {\n            if( typeof objOrId === 'object' ) return objOrId;\n\n            // So, we're dealing with an id reference. Resolve it.\n            const collection = getMasterCollection( this );\n            let   record : Record = null;\n\n            // If master collection exists and is not empty...\n            if( collection && collection.length ){\n                // Silently update attribute with record from this collection.\n                record = collection.get( objOrId ) || null;\n                this.attributes[ name ] = record;\n\n                // Subscribe for events manually. delegateEvents won't be invoked.\n                record && this._attributes[ name ].handleChange( record, null, this, {} );\n            }\n\n            return record;\n        });\n};","import { Collection, CollectionOptions } from '../collection'\nimport { tools, eventsApi, define } from '../object-plus'\nimport { Record, AggregatedType } from '../record'\nimport { parseReference, CollectionReference } from './commons'\nimport { ChainableAttributeSpec } from '../record'\nimport { Transactional, ItemsBehavior, TransactionOptions, transactionApi } from '../transactions'\n\nconst { fastDefaults } = tools;\n\ntype RecordsIds = ( string | number )[];\n\nCollection.subsetOf = function subsetOf( masterCollection : CollectionReference ) : ChainableAttributeSpec {\n    const SubsetOf = this._SubsetOf || ( this._SubsetOf = defineSubsetCollection( this ) ),\n        getMasterCollection = parseReference( masterCollection ),\n        typeSpec = new ChainableAttributeSpec({\n            type : SubsetOf\n        });\n\n    return typeSpec.get(\n        function( refs ){\n            !refs || refs.resolvedWith || refs.resolve( getMasterCollection( this ) );\n            return refs;\n        }\n    );\n};\n\nconst subsetOfBehavior = ItemsBehavior.share | ItemsBehavior.persistent;\n\nfunction defineSubsetCollection( CollectionConstructor : typeof Collection ) {\n    @define class SubsetOfCollection extends CollectionConstructor {\n        refs : any[];\n        resolvedWith : Collection = null;\n\n        _attribute : AggregatedType\n\n        get __inner_state__(){ return this.refs || this.models; }\n\n        constructor( recordsOrIds?, options? ){\n            super( [], options, subsetOfBehavior );\n            this.refs = toArray( recordsOrIds );\n        }\n\n        // Remove should work fine as it already accepts ids. Add won't...\n        add( a_elements, options = {} ){\n            const { resolvedWith } = this,\n                    toAdd = toArray( a_elements );\n            \n            if( resolvedWith ){\n                // If the collection is resolved already, everything is simple.\n                return super.add( resolveRefs( resolvedWith, toAdd ), options );\n            }\n            else{\n                // Collection is not resolved yet. So, we prepare the delayed computation.\n                if( toAdd.length ){\n                    const isRoot = transactionApi.begin( this );\n\n                    // Save elements to resolve in future...\n                    this.refs = this.refs ? this.refs.concat( toAdd ) : toAdd.slice();\n\n                    transactionApi.markAsDirty( this, options );\n\n                    // And throw the 'changes' event.\n                    isRoot && transactionApi.commit( this );\n                }\n            }\n        }\n\n        reset( a_elements?, options = {} ){\n            const { resolvedWith } = this,\n                elements = toArray( a_elements );\n    \n            return resolvedWith ?\n                // Collection is resolved, so parse ids and forward the call to set.\n                super.reset( resolveRefs( resolvedWith, elements ), options ) :\n                // Collection is not resolved yet. So, we prepare the delayed computation.\n                delaySet( this, elements, options ) as any || [];\n        }\n\n        _createTransaction( a_elements, options? ){\n            const { resolvedWith } = this,\n                elements = toArray( a_elements );\n    \n            return resolvedWith ?\n                // Collection is resolved, so parse ids and forward the call to set.\n                super._createTransaction( resolveRefs( resolvedWith, elements ), options ) :\n                // Collection is not resolved yet. So, we prepare the delayed computation.\n                delaySet( this, elements, options );\n        }\n\n        // Serialized as an array of model ids.\n        toJSON() : RecordsIds {\n            return this.refs ?\n                this.refs.map( objOrId => objOrId.id || objOrId ) :\n                this.models.map( model => model.id );\n        }\n\n        // Subset is always valid.\n        _validateNested(){ return 0; }\n\n        get length() : number {\n            return this.models.length || ( this.refs ? this.refs.length : 0 );\n        }\n\n        // Must be shallow copied on clone.\n        clone( owner? ){\n            var Ctor = (<any>this).constructor,\n                copy = new Ctor( [], {\n                    model : this.model,\n                    comparator : this.comparator\n                });\n\n            if( this.resolvedWith ){\n                // TODO: bug here. \n                copy.resolvedWith = this.resolvedWith;\n                copy.refs = null;\n                copy.reset( this.models, { silent : true } );\n            }\n            else{\n                copy.refs = this.refs.slice();\n            }\n\n            return copy;\n        }\n\n        // Clean up the custom parse method possibly defined in the base class.\n        parse( raw : any ) : Record[] {\n            return raw;\n        }\n\n        resolve( collection : Collection ) : this {\n            if( collection && collection.length ){\n                this.resolvedWith = collection;\n\n                if( this.refs ){\n                    this.reset( this.refs, { silent : true } );\n                    this.refs = null;\n                }\n            }\n\n            return this;\n        }\n\n        getModelIds() : RecordsIds { return this.toJSON(); }\n\n        toggle( modelOrId : any, val : boolean ) : boolean {\n            return super.toggle( this.resolvedWith.get( modelOrId ), val );\n        }\n\n        addAll() : Record[] {\n            if( this.resolvedWith ){\n                this.set( this.resolvedWith.models );\n                return this.models;\n            }\n\n            throw new Error( \"Cannot add elemens because the subset collection is not resolved yet.\" );\n        }\n\n        toggleAll() : Record[] {\n            return this.length ? this.reset() : this.addAll();\n        }\n    }\n\n    // Clean up all custom item events to prevent memory leaks.\n    SubsetOfCollection.prototype._itemEvents = void 0;\n\n    return SubsetOfCollection;\n}\n\nfunction resolveRefs( master, elements ){\n    const records = [];\n    \n    for( let el of elements ){\n        const record = master.get( el );\n        if( record ) records.push( record );\n    }\n\n    return records;\n}\n\nfunction delaySet( collection, elements, options ) : void {\n    if( tools.notEqual( collection.refs, elements ) ){\n        const isRoot = transactionApi.begin( collection );\n\n        // Save elements to resolve in future...\n        collection.refs = elements.slice();\n\n        transactionApi.markAsDirty( collection, options );\n        \n        // And throw the 'changes' event.\n        isRoot && transactionApi.commit( collection );\n    }\n}\n\nfunction toArray( elements ){\n    return elements ? ( \n        Array.isArray( elements ) ? elements : [ elements ]\n    ) : [];\n}","import { Record } from '../record'\nimport { Transactional } from '../transactions'\nimport { startIO, IOPromise } from '../io-tools'\n\nlet _store : Store = null;\n\nexport class Store extends Record {\n    getStore() : Store { return this; }\n \n    // delegate item lookup to owner, and to the global store if undefined\n    get( name : string ) : any {\n        // Lookup for resource in the current store. \n        let local = this[ name ];\n\n        // If something is found or it's the global store, return result.\n        if( local || this === this._defaultStore ) return local;\n\n        // Forward failed lookup to owner or global store.\n        return this._owner ? this._owner.get( name ) : this._defaultStore.get( name ); \n    }\n\n    static get global(){ return _store; }\n    static set global( store : Store ){\n        if( _store ){\n          _store.dispose();\n        }\n\n        Transactional.prototype._defaultStore = _store = store;\n    }\n}\n\nStore.global = new Store();","// Polyfill for IE10. Should fix problems with babel and statics inheritance.\nimport { tools } from './object-plus'\n\ndeclare global {\n    interface ObjectConstructor {\n        setPrototypeOf( target : Object, proto : Object );\n    }\n}\n\nObject.setPrototypeOf || ( Object.setPrototypeOf = tools.defaults );\n\n/**\n * Export everything \n */\n\nexport * from './object-plus'\nexport * from './collection'\nexport * from './relations'\nexport * from './record'\nexport * from './transactions'\n\nexport * from './io-tools'\n\n// Exported module itself is the global event bus.\nimport { Events } from './object-plus/'\nexport const { on, off, trigger, once, listenTo, stopListening, listenToOnce } = <any>Events;\n\nimport { Collection } from './collection'\n\n// Define synonims for NestedTypes backward compatibility.\nimport { Record as Model } from './record' \nimport { define, Mixable as Class } from './object-plus/'\nexport { Model, Class };\n\nexport function attributes( attrDefs ) : typeof Model {\n    @define class DefaultRecord extends Model {\n        static attributes = attrDefs;\n    }\n\n    return DefaultRecord;\n}\n\nimport { ChainableAttributeSpec } from './record'\n\n/** Typeless attribute declaration with default value. */ \nexport function value( x : any ) : ChainableAttributeSpec {\n    return new ChainableAttributeSpec({ value : x });\n}\n\n/** Wrap model or collection method in transaction. */\nexport function transaction< F extends Function >( method : F ) : F {\n    return <any>function( ...args ){\n        let result;\n        \n        this.transaction( () => {\n            result = method.apply( this, args );\n        });\n        \n        return result;\n    }\n}"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__rest","e","indexOf","getOwnPropertySymbols","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","defaults","dest","source","name","other","isValidJSON","value","proto","getPrototypeOf","every","getBaseClass","Class","isEmpty","obj","some","fun","ArrayProto","arr","result","someArray","someObject","predicate","x","omit","discard","transform","once","func","memo","first","DateProto","Date","ObjectProto","notEqual","a","protoA","arraysNotEqual","keysA","keys","objectsNotEqual","HashProto","hashMap","hash","definition","_i","names","names_1","_a","name_1","prop","o","Mixable","protoProps","staticProps","BaseClass","mixins","defineMixin","merge","mergeObject","getStaticDefinitions","onDefine","definitions","mergeInheritedMembers","spec","statics","TheSubclass","tslib_1.__extends","predefine","define","Constructor","__super__","MixinsState","get","populate","onExtend","ClassOrDefinition","Ctor","rules","definitionRules","definitionDecorator","definitionKey","mergeRules","appliedMixins","rule","slice","mixins_1","mixin","isArray","push","sourceMixins","concat","ctors","ctors_1","unshift","object","ignore","dontMix","name_2","forEachOwnProp","sourceProp","_this","assignProperty","mixinRules","protoValue","baseProto","resolveRule","function","caller","list","destProp","configurable","pipe","classFirst","classLast","map","EventMap","handlers","addEventsMap","addEvent","split","eventSplitter","getBubblingHandler","callback","EventDescriptor","event_1","on","event_2","off","handler","_bubblingHandlers","event","trigger5","trigger3","trigger2","context","next","listOff","_events","filteredHead","prev","head","ev","_callback","listSend3","EventHandler","once_1","_once","name_3","strings","api","events","test","self","queue","all","listSend2","listSend4","listSend5","f","listSend6","_idCount","uniqueId","cid","initialize","Messenger","localEvents","_localEvents","properties","eventsMap","defineProperties","toPropertyDescriptor","addReference","a_source","_listeningTo","removeAll","second","_disposed","stopListening","Events","listener","isProduction","process","env","NODE_ENV","logEvents","_super","console","this_1","topic","msg","props","args","toString","logEvents_1","Logger","window","something","body","join","logRouter","log","trigger","bind","startIO","promise","options","thenDo","abortIO","ioUpdate","_ioPromise","then","resp","triggerAndBubble","catch","err","error","abort","eventSource","collection","_validateNested","nested","validate","ValidationError","iteratee","each","eachError","referenceMask","reference","splitTail","path","match","substr","tail","pop","local","resolve","Function","shift","resolveReference","root","action","skip","getStore","getOwner","ItemsBehavior","cidPrefix","Transactional","endpoint","_endpoint","Transactional_1","_owner","_ownerKey","_changeEventName","listenTo","isRoot","transactionApi","begin","update","set","commit","values","transaction","_createTransaction","__inner_state__","_changeToken","data","_defaultStore","v","k","val","Error","getOwnerEndpoint","_endpoints","_validationError","validationError","getValidationError","_transaction","markAsDirty","dirty","silent","_isDirty","initiator","originalOptions","_onChildrenChange","aquire","owner","child","free","_begin","_markAsDirty","setAttribute","record","_attributes","doUpdate","attributes","_previousAttributes","AttributesCopy","_changedAttributes","UpdateRecordMixin","attribute","propagateChanges","forceAttributeChange","a_values","unknown","changes","parse","shouldBeAnObject","RecordTransaction","nested_1","constructorsMixin","attrDefs","attrs","attr","Attributes","_log","nested_2","changes_1","_b","emptyOptions","a_options","getHooks","transforms","changeHandlers","type","toJSON","changeEvents","hasCustomDefault","defaultValue","tools.isValidJSON","JSON","stringify","isRequired","convert","getHook_1","getHook","reduce","chainGetHooks","validate_1","chainTransforms","handleChange","chainChangeHandlers","AnyType","_attribute","model","isChanged","level","code","text","getClassName","New value","Prev. value","Attribute definition","Record","prevHook","nextHook","prevTransform","nextTransform","prevHandler","nextHandler","AggregatedType","clone","canBeUpdated","nestedTransaction","_shared","persistent","_handleChange","unset","dispose","ChainableAttributeSpec","check","metadata","asProp","ref","_onChange","emptyFunction","changed","eventMap","unsubscribe","subscribe","cloned","attrSpec","has","type_1","Number","String","Boolean","inferType","shared","_isRequired","_has","DateType","date","timestamp","getTime","toISOString","msDatePattern","MSDateType","msDate","exec","TimestampType","supportsDate","isNaN","microsoft","struct","minutesOffset","isoDatePattern","numericKeys","undefined","UTC","safeParseDate","ImmutableClassType","PrimitiveType","NumericType","num","isFinite","Integer","Math","round","integer","ArrayType","ObjectType","doNothing","FunctionType","shareAndListen","listen","share","SharedType","implicitObject","attributesDefinition","baseClassAttributes","attrsWithParse","myAttributes","_.transform","createAttribute","allAttributes","_.defaults","ConstructorsMixin","_attributesArray","createPropertyDescriptor","_toJSON","filter","_parse","attrSpecs","eventsApi.EventMap","createWatcherFromRef","wrapWatcher","localEventsMixin","attrDef","from","createSharedTypeSpec","Attribute","watcher","IORecordMixin","save","getEndpoint","json","isNew","id","fetch","read","destroy","remove","_cidCounter","typeCheck","extend","diff","hasChanged","old","nullify","forEachAttr","idAttribute","_attributesArray_1","copy","pinStore","errors","asJson","l","newModel","clear","Attributes definition:","Collection","BaseRecordAttributes","BaseRecordAttributesCopy","IdAttribute","DefaultCollection","dynamicMixin","_aquire","_free","convertAndAquire","_aggregationError","_itemEvents","sortElements","_comparator","sort","models","addIndex","index","removeIndex","updateIndex","previous","added","removed","sorted","CollectionTransaction","logAggregationError","added_1","_d","removed_1","_e","addTransaction","items","a_items","forceMerge","_byId","prevLength","a_items_1","item","appendElements","needSort","at","length_1","j","moveElements","sortOrMoveElements","removeMany","toRemove","_removeFromIndex","_reallocate","silentOptions","emptySetTransaction","len","src","_reallocateEmpty","setTransaction","_prevById","prevModels","toAdd","orderKept","reusedCount","previous_1","_garbageCollect","children","children_1","freeAll","addedOrChanged","begin$4","_count","CollectionRefsType","records","comparator","toElements","subset","subsetOf","RefsCollection","_SubsetOf","Refs","Subset","itemEvents","aa","bb","_store","objOrId","bindContext","toPredicateFunction","find","mapped","count","a_index","elements","add","reset","enabled","liveUpdates","filter_1","_liveUpdates","updated","tslib_1.__assign","aggregated","a_elements","previousModels","previousModels_1","toDispose","recordsOrIds","el","splice","notify","removeOne","modelOrId","a_next","Argument","Attributes spec","parsed","parseReference","collectionRef","RecordRefType","masterCollection","getMasterCollection","SubsetOf","subsetOfBehavior","refs","toArray","SubsetOfCollection","resolvedWith","resolveRefs","delaySet","raw","toggle","addAll","master","elements_1","tools.notEqual","Store","store","global","tools.defaults","listenToOnce","DefaultRecord","Model","method","listName","attrName","getMetadata","reject","onAbort","fn","Promise","a_resolve","a_reject"],"mappings":"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"}