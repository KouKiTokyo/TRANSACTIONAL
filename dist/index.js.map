{"version":3,"file":"index.js","sources":["../node_modules/tslib/tslib.es6.js","../src/object-plus/tools.ts","../src/object-plus/eventsource.ts","../src/object-plus/mixins.ts","../src/object-plus/events.ts","../src/object-plus/logging.ts","../src/io-tools.ts","../src/traversable.ts","../src/validation.ts","../src/transactions.ts","../src/record/attributes/updates.ts","../src/record/attributes/any.ts","../src/record/attributes/attrDef.ts","../src/record/attributes/basic.ts","../src/record/attributes/date.ts","../src/record/attributes/owned.ts","../src/record/attributes/shared.ts","../src/record/attributes/index.ts","../src/record/io-mixin.ts","../src/record/record.ts","../src/record/index.ts","../src/collection/commons.ts","../src/collection/add.ts","../src/collection/remove.ts","../src/collection/set.ts","../src/collection/index.ts","../src/relations/commons.ts","../src/relations/from.ts","../src/relations/subsetOf.ts","../src/relations/store.ts","../src/index.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n"," /** Similar to underscore `_.defaults` */\nexport function defaults< T >( dest : T, ...sources : Object[] ) : T\nexport function defaults< T >( dest : T, source : Object ) : T {\n    for( var name in source ) {\n        if( source.hasOwnProperty( name ) && !dest.hasOwnProperty( name ) ) {\n            dest[ name ] = source[ name ];\n        }\n    }\n\n    if( arguments.length > 2 ){\n        for( let i = 2; i < arguments.length; i++ ){\n            const other = arguments[ i ];\n            other && defaults( dest, other );\n        }\n    }\n\n    return dest;\n}\n\n/** Check if value is raw JSON */\nexport function isValidJSON( value : any ) : boolean {\n    if( value === null ){\n        return true;\n    }\n\n    switch( typeof value ){\n    case 'number' :\n    case 'string' :\n    case 'boolean' :\n        return true;\n\n    case 'object':\n        var proto = Object.getPrototypeOf( value );\n\n        if( proto === Object.prototype || proto === Array.prototype ){\n            return every( value, isValidJSON );\n        }\n    }\n\n    return false;\n}\n\n/** Get the base class constructor function.\n * @param Class Subclass constructor function.\n * @returns Base class constructor function.\n */\nexport function getBaseClass( Class : Function ) {\n    return Object.getPrototypeOf( Class.prototype ).constructor\n}\n\nexport function assignToClassProto<T, K extends keyof T>( Class, definition : T, ...names : K[] ) : void {\n    for( let name of names ){\n        const value = definition[ name ];\n        value === void 0 || ( Class.prototype[ name ] = value );\n    }\n}\n\n/** Checks whenever given object is an empty hash `{}` */\nexport function isEmpty( obj : {} ) : boolean {\n    if( obj ){\n        for( let key in obj ){\n            if( obj.hasOwnProperty( key ) ){\n                return false;\n            }\n        }\n    }\n\n    return true;\n}\n\nexport type Iteratee = ( value : any, key? : string | number ) => any;\n\n/** @hidden */\nfunction someArray( arr : any[], fun : Iteratee ) : any {\n    let result;\n\n    for( let i = 0; i < arr.length; i++ ){\n        if( result = fun( arr[ i ], i ) ){\n            return result;\n        }\n    }\n}\n\n/** @hidden */\nfunction someObject( obj : {}, fun : Iteratee ) : any {\n    let result;\n\n    for( let key in obj ){\n        if( obj.hasOwnProperty( key ) ){\n            if( result = fun( obj[ key ], key ) ){\n                return result;\n            }\n        }\n    }\n}\n\n/** Similar to underscore `_.some` */\nexport function some( obj, fun : Iteratee ) : any {\n    if( Object.getPrototypeOf( obj ) === ArrayProto ){\n        return someArray( obj, fun );\n    }\n    else{\n        return someObject( obj, fun );\n    }\n}\n\n/** Similar to underscore `_.every` */\nexport function every( obj : { }, predicate : Iteratee ) : boolean {\n    return !some( obj, x => !predicate( x ) );\n}\n\n/** Similar to `getOwnPropertyDescriptor`, but traverse the whole prototype chain. */\nexport function getPropertyDescriptor( obj : {}, prop : string ) : PropertyDescriptor {\n    let desc : PropertyDescriptor;\n\n    for( let proto = obj; !desc && proto; proto = Object.getPrototypeOf( proto ) ) {\n        desc = Object.getOwnPropertyDescriptor( proto, prop );\n    }\n\n    return desc;\n}\n\n/** Similar to underscore `_.omit` */\nexport function omit( source : {}, ...rest : string[] ) : {}\nexport function omit( source ) : {} {\n    const dest = {}, discard = {};\n\n    for( let i = 1; i < arguments.length; i ++ ){\n        discard[ arguments[ i ] ] = true;\n    }\n\n    for( var name in source ) {\n        if( !discard.hasOwnProperty( name ) && source.hasOwnProperty( name ) ) {\n            dest[ name ] = source[ name ];\n        }\n    }\n\n    return dest;\n}\n\n/** map `source` object properties with a given function, and assign the result to the `dest` object.\n * When `fun` returns `undefined`, skip this value. \n */\nexport function transform< A, B >( dest : { [ key : string ] : A }, source : { [ key : string ] : B }, fun : ( value : B, key : string ) => A | void ) : { [ key : string ] : A } {\n    for( var name in source ) {\n        if( source.hasOwnProperty( name ) ) {\n            var value = fun( source[ name ], name );\n            value === void 0 || ( dest[ name ] = < A >value );\n        }\n    }\n\n    return dest;\n}\n\n/** @hidden */\nexport function fastAssign< A >( dest : A, source : {} ) : A {\n    for( var name in source ) {\n        dest[ name ] = source[ name ];\n    }\n\n    return dest;\n}\n\n/** @hidden */\nexport function fastDefaults< A >( dest : A, source : {} ) : A {\n    for( var name in source ) {\n        if( dest[ name ] === void 0 ){\n            dest[ name ] = source[ name ];\n        }\n    }\n\n    return dest;\n}\n\n/** Similar to underscore `_.extend` and `Object.assign` */\nexport function assign< T >( dest : T, ...sources : Object[] ) : T\nexport function assign< T >( dest : T, source : Object ) : T {\n    for( var name in source ) {\n        if( source.hasOwnProperty( name ) ) {\n            dest[ name ] = source[ name ];\n        }\n    }\n\n    if( arguments.length > 2 ){\n        for( let i = 2; i < arguments.length; i++ ){\n            const other = arguments[ i ];\n            other && assign( dest, other );\n        }\n    }\n\n    return dest;\n}\n\n/** Similar to underscore `_.keys` */\nexport function keys( o : any ) : string[]{\n    return o ? Object.keys( o ) : [];\n}\n\n/** Similar to underscore `_.once` */\nexport function once( func : Function ) : Function {\n    var memo, first = true;\n    return function() {\n        if ( first ) {\n            first = false;\n            memo = func.apply(this, arguments);\n            func = null;\n        }\n        return memo;\n    };\n}\n\n/** @hidden */\nconst ArrayProto = Array.prototype,\n      DateProto = Date.prototype,\n      ObjectProto = Object.prototype;\n\n/**\n * Determine whenever two values are not equal, deeply traversing \n * arrays and plain JS objects (hashes). Dates are compared by enclosed timestamps, all other\n * values are compared with strict comparison.\n */\nexport function notEqual( a : any, b : any) : boolean {\n    if( a === b ) return false;\n\n    if( a && b && typeof a == 'object' && typeof b == 'object' ) {\n        const protoA = Object.getPrototypeOf( a );\n\n        if( protoA !== Object.getPrototypeOf( b ) ) return true;\n\n        switch( protoA ){\n            case DateProto   : return +a !== +b;\n            case ArrayProto  : return arraysNotEqual( a, b );\n            case ObjectProto :\n            case null:\n                return objectsNotEqual( a, b );\n        }\n    }\n\n    return true;\n}\n\n/** @hidden */\nfunction objectsNotEqual( a, b ) {\n    const keysA = Object.keys( a );\n\n    if( keysA.length !== Object.keys( b ).length ) return true;\n\n    for( let i = 0; i < keysA.length; i++ ) {\n        const key = keysA[ i ];\n\n        if( !b.hasOwnProperty( key ) || notEqual( a[ key ], b[ key ] ) ) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\n/** @hidden */\nfunction arraysNotEqual( a, b ) {\n    if( a.length !== b.length ) return true;\n\n    for( let i = 0; i < a.length; i++ ) {\n        if( notEqual( a[ i ], b[ i ] ) ) return true;\n    }\n\n    return false;\n}\n\n/**\n * Create an object without Object prototype members except hasOwnProperty.\n * @param obj - optional parameter to populate the hash map from.\n */\nconst HashProto = Object.create( null );\nHashProto.hasOwnProperty = ObjectProto.hasOwnProperty;\n\nexport function hashMap( obj? ){\n    const hash = Object.create( HashProto );\n    return obj ? assign( hash, obj ) : hash;\n}","import { once as _once } from './tools'\n\n/*******************\n * Prebuilt events map, used for optimized bulk event subscriptions.\n *\n * const events = new EventMap({\n *      'change' : true, // Resend this event from self as it is.\n *      'change:attr' : 'localTargetFunction',\n *      'executedInTargetContext' : function(){ ... }\n *      'executedInNativeContext' : '^props.handler'\n * })\n */\n/** @hidden */\nexport interface EventsDefinition {\n    [ events : string ] : Function | string | boolean\n}\n\n/** @hidden */\nexport class EventMap {\n    handlers : EventDescriptor[] = [];\n\n    constructor( map? : EventsDefinition | EventMap ){\n        if( map ){\n            if( map instanceof EventMap ){\n                this.handlers = map.handlers.slice();\n            }\n            else{\n                map && this.addEventsMap( map );\n            }\n        }\n    }\n\n    merge( map : EventMap ){\n        this.handlers = this.handlers.concat( map.handlers );\n    }\n\n    addEventsMap( map : EventsDefinition ){\n        for( let names in map ){\n            this.addEvent( names, map[ names ] )\n        }\n    }\n\n    bubbleEvents( names : string ){\n        for( let name of names.split( eventSplitter ) ){\n            this.addEvent( name, getBubblingHandler( name ) );\n        }\n    }\n\n    addEvent( names : string, callback : Function | string | boolean ){\n        const { handlers } = this;\n\n        for( let name of names.split( eventSplitter ) ){\n            handlers.push( new EventDescriptor( name, callback ) );\n        }\n    }\n\n    subscribe( target : {}, source : EventSource ){\n        for( let event of this.handlers ){\n            on( source, event.name, event.callback, target );\n        }\n    }\n\n    unsubscribe( target : {}, source : EventSource ){\n        for( let event of this.handlers ){\n            off( source, event.name, event.callback, target );\n        }\n    }\n}\n\n/** @hidden */\nexport class EventDescriptor {\n    callback : Function\n\n    constructor(\n        public name : string,\n        callback : Function | string | boolean\n    ){\n        if( callback === true ){\n            this.callback = getBubblingHandler( name );\n        }\n        else if( typeof callback === 'string' ){\n            this.callback =\n                function localCallback(){\n                    const handler = this[ callback ];\n                    handler && handler.apply( this, arguments );\n                };\n        }\n        else{\n            this.callback = <Function>callback;\n        }\n    }\n}\n\n/** @hidden */\nconst _bubblingHandlers = {};\n\n/** @hidden */\nfunction getBubblingHandler( event : string ){\n    return _bubblingHandlers[ event ] || (\n        _bubblingHandlers[ event ] = function( a?, b?, c?, d?, e? ){\n            if( d !== void 0 || e !== void 0 ) trigger5( this, event, a, b, c, d, e );\n            if( c !== void 0 ) trigger3( this, event, a, b, c );\n            else trigger2( this, event, a, b );\n        }\n    );\n}\n\n/** @hidden */\nexport interface HandlersByEvent {\n    [ name : string ] : EventHandler\n}\n\n/** @hidden */\nexport class EventHandler {\n    constructor( public callback : Callback, public context : any, public next = null ){}\n}\n\n/** @hidden */\nfunction listOff( _events : HandlersByEvent, name : string, callback : Callback, context : any ){\n    const head = _events[ name ];\n\n    let filteredHead, prev;\n\n    for( let ev = head; ev; ev = ev.next ){\n        // Element must be kept\n        if( ( callback && callback !== ev.callback && callback !== ev.callback._callback ) ||\n            ( context && context !== ev.context ) ){\n            \n            prev = ev;\n            filteredHead || ( filteredHead = ev );\n        }\n        // Element must be skipped\n        else{\n            if( prev ) prev.next = ev.next;\n        }\n    }\n\n    if( head !== filteredHead ) _events[ name ] = filteredHead;\n}\n\n/** @hidden */\nfunction listSend2( head : EventHandler, a, b ){\n    for( let ev = head; ev; ev = ev.next ) ev.callback.call( ev.context, a, b );\n}\n\n/** @hidden */\nfunction listSend3( head : EventHandler, a, b, c ){\n    for( let ev = head; ev; ev = ev.next ) ev.callback.call( ev.context, a, b, c );\n}\n\n/** @hidden */\nfunction listSend4( head : EventHandler, a, b, c, d ){\n    for( let ev = head; ev; ev = ev.next ) ev.callback.call( ev.context, a, b, c, d );\n}\n\n/** @hidden */\nfunction listSend5( head : EventHandler, a, b, c, d, e ){\n    for( let ev = head; ev; ev = ev.next ) ev.callback.call( ev.context, a, b, c, d, e );\n}\n\n/** @hidden */\nfunction listSend6( head : EventHandler, a, b, c, d, e, f ){\n    for( let ev = head; ev; ev = ev.next ) ev.callback.call( ev.context, a, b, c, d, e, f );\n}\n\n/** @hidden */\nexport interface Callback extends Function {\n    _callback? : Function\n}\n\n/** @hidden */\nexport function on( source : EventSource, name : string, callback : Callback, context? : any ) : void {\n    if( callback ){\n        const _events = source._events || ( source._events = Object.create( null ) );\n        _events[ name ] = new EventHandler( callback, context, _events[ name ] );\n    }\n}\n\n/** @hidden */\nexport function once( source : EventSource, name : string, callback : Callback, context? : any ) : void {\n    if( callback ){\n        const once : Callback = _once( function(){\n            off( source, name, once );\n            callback.apply(this, arguments);\n        });\n\n        once._callback = callback;\n        on( source, name, once, context );\n    }\n}\n\n/** @hidden */\nexport function off( source : EventSource, name? : string, callback? : Callback, context? : any ) : void {\n    const { _events } = source;\n    if( _events ){\n        if( callback || context ) {\n            if( name ){\n                listOff( _events, name, callback, context );\n            }\n            else{\n                for( let name in _events ){\n                    listOff( _events, name, callback, context );\n                }\n            }\n        }\n        else if( name ){\n            _events[ name ] = void 0;\n        }\n        else{\n            source._events = void 0;\n        }\n    }\n}\n\n/** @hidden */\nexport interface EventSource {\n    _events : HandlersByEvent\n}\n\n/** @hidden */\nconst eventSplitter = /\\s+/;\n\n/** @hidden */\nexport function strings( api : ApiEntry, source : EventSource, events : string, callback : Callback, context ){\n    if( eventSplitter.test( events ) ){\n        const names = events.split( eventSplitter );\n        for( let name of names ) api( source, name, callback, context );\n    }\n    else api( source, events, callback, context );\n}\n\n/** @hidden */\nexport type ApiEntry = ( source : EventSource, event : string, callback : Callback, context? : any ) => void\n\n/*********************************\n * Event-triggering API\n */\n\n/** @hidden */\nexport function trigger2( self : EventSource, name : string, a, b ) : void {\n    const { _events } = self;\n    if( _events ){\n        const queue = _events[ name ],\n            { all } = _events;\n\n        listSend2( queue, a, b );\n        listSend3( all, name, a, b );\n    }\n};\n\n/** @hidden */\nexport function trigger3( self : EventSource, name : string, a, b, c ) : void{\n    const { _events } = self;\n    if( _events ){\n        const queue = _events[ name ],\n            { all } = _events;\n\n        listSend3( queue, a, b, c );\n        listSend4( all, name, a, b, c );\n    }\n};\n\n/** @hidden */\nexport function trigger5( self : EventSource, name : string, a, b, c, d, e ) : void{\n    const { _events } = self;\n    if( _events ){\n        const queue = _events[ name ],\n            { all } = _events;\n\n        listSend5( queue, a, b, c, d, e );\n        listSend6( all, name, a, b, c, d, e );\n    }\n};","/*****************************************************************\n * Mixins engine and @define metaprogramming class extensions\n *\n * Vlad Balin & Volicon, (c) 2016-2017\n */\nimport { __extends } from 'tslib';\nimport { assign, defaults, getBaseClass, hashMap, transform } from './tools';\n\nexport interface Subclass< T > extends MixableConstructor {\n    new ( ...args ) : T\n    prototype : T\n}\n\nexport interface MixableConstructor extends Function{\n    __super__? : object;\n    mixins? : MixinsState;\n    onExtend? : ( BaseClass : Function ) => void;\n    onDefine? : ( definition : object, BaseClass : Function ) => void;\n    define? : ( definition? : object, statics? : object ) => MixableConstructor;\n    extend? : <T extends object>( definition? : T, statics? : object ) => Subclass<T>;\n}\n\nexport interface MixableDefinition {\n    mixins? : Mixin[]\n}\n\n/**\n * Base class, holding metaprogramming class extensions.\n * Supports mixins and Class.define metaprogramming method.\n */\nexport class Mixable {\n    static onExtend : ( BaseClass : Function ) => void;\n    static onDefine : ( definition : object, BaseClass : Function ) => object;    \n    static __super__ : object\n    static mixins : MixinsState;\n\n    /** \n     *  Must be called after inheritance and before 'define'.\n     */\n    static define( protoProps : MixableDefinition = {}, staticProps? : object ) : MixableConstructor {\n        const BaseClass : MixableConstructor = getBaseClass( this );\n\n        // Assign statics.\n        staticProps && assign( this, staticProps );\n\n        // Extract and apply mixins from the definition.\n        const { mixins, ...defineMixin } = protoProps;\n        mixins && this.mixins.merge( mixins );\n\n        // Unshift definition to the the prototype.\n        this.mixins.mergeObject( this.prototype, defineMixin, true );\n\n        // Unshift definition from statics to the prototype.\n        this.mixins.mergeObject( this.prototype, this.mixins.getStaticDefinitions( BaseClass ), true );\n\n        // Call onDefine hook, if it's present.\n        this.onDefine && this.onDefine( this.mixins.definitions, BaseClass );\n        \n        // Apply merge rules to inherited members. No mixins can be added after this point.\n        this.mixins.mergeInheritedMembers( BaseClass );\n\n        return this;\n    }\n\n    /** Backbone-compatible extend method to be used in ES5 and for backward compatibility */\n    static extend< T extends object>(spec? : T, statics? : {} ) : Subclass< T > {\n        let TheSubclass : Subclass< T >;\n\n        // 1. Create the subclass (ES5 compatibility shim).\n        // If constructor function is given...\n        if( spec && spec.hasOwnProperty( 'constructor' ) ){\n            // ...we need to manually call internal TypeScript __extend function. Hack! Hack!\n            TheSubclass = spec.constructor as any;\n            __extends( TheSubclass, this );\n        }\n        // Otherwise, create the subclall in usual way.\n        else{\n            TheSubclass = class Subclass extends this {} as any;\n        }\n\n        predefine( TheSubclass );\n        spec && TheSubclass.define( spec, statics );\n\n        return TheSubclass;\n    }\n}\n\n/** @decorator `@predefine` for forward definitions. Can be used with [[Mixable]] classes only.\n * Forwards the call to the [[Mixable.predefine]];\n */\nexport function predefine( Constructor : MixableConstructor ) : void {\n    const BaseClass : MixableConstructor = getBaseClass( Constructor );\n\n    // Legacy systems support\n    Constructor.__super__ = BaseClass.prototype;\n    \n    // Initialize mixins structures...\n    Constructor.define || MixinsState.get( Mixable ).populate( Constructor );\n\n    // Make sure Ctor.mixins are ready before the callback...\n    MixinsState.get( Constructor );\n\n    // Call extend hook.\n    Constructor.onExtend && Constructor.onExtend( BaseClass );\n}\n\n/** @decorator `@define` for metaprogramming magic. Can be used with [[Mixable]] classes only.\n *  Forwards the call to [[Mixable.define]].\n */\nexport function define( ClassOrDefinition : Function ) : void;\nexport function define( ClassOrDefinition : object ) : ClassDecorator;\nexport function define( ClassOrDefinition : object | MixableConstructor ){\n    // @define class\n    if( typeof ClassOrDefinition === 'function' ){\n        predefine( ClassOrDefinition );\n        ( ClassOrDefinition as MixableConstructor ).define();\n    }\n    // @define({ prop : val, ... }) class\n    else{\n        return function( Ctor : MixableConstructor ){\n            predefine( Ctor );\n            Ctor.define( ClassOrDefinition );\n        }\n    }\n}\n\nexport function definitions( rules : MixinMergeRules ) : ClassDecorator {\n    return ( Class : Function ) => {\n        const mixins = MixinsState.get( Class );\n        mixins.definitionRules = defaults( hashMap(), rules, mixins.definitionRules );\n    }\n}\n\n// Create simple property list decorator\nexport function propertyListDecorator( listName: string ) : PropertyDecorator {\n    return function propList(proto, name : string) {\n        const list = proto.hasOwnProperty( listName ) ?\n            proto[ listName ] : (proto[ listName ] = (proto[ listName ] || []).slice());  \n\n        list.push(name);\n    }\n}\n\nexport function definitionDecorator( definitionKey, value ){\n    return ( proto : object, name : string ) => {\n        MixinsState\n            .get( proto.constructor )\n            .mergeObject( proto, {\n                [ definitionKey ] : {\n                    [ name ] : value\n                }\n            });\n    }\n}\n\nexport class MixinsState {\n    mergeRules : MixinMergeRules;\n    definitionRules : MixinMergeRules;\n    definitions : object = {};\n    appliedMixins : Mixin[];\n\n    // Return mixins state for the class. Initialize if it's not exist.\n    static get( Class ) : MixinsState {\n        const { mixins } = Class;\n    \n        return mixins && Class === mixins.Class ? mixins :\n             Class.mixins = new MixinsState( Class );\n    }\n\n    constructor( public Class : MixableConstructor ){\n        const { mixins } = getBaseClass( Class );\n\n        this.mergeRules = ( mixins && mixins.mergeRules ) || hashMap();\n        this.definitionRules = ( mixins && mixins.definitionRules ) || hashMap();\n        this.appliedMixins = ( mixins && mixins.appliedMixins ) || [];\n    }\n\n    getStaticDefinitions( BaseClass : Function ){\n        const definitions = hashMap(),\n            { Class } = this;\n\n        return transform( definitions, this.definitionRules, ( rule, name ) =>{\n            if( BaseClass[ name ] !== Class[ name ]){\n                return Class[ name ];\n            }\n        });\n    }\n\n    merge( mixins : Mixin[] ){\n        const proto      = this.Class.prototype,\n            { mergeRules } = this;\n\n        // Copy applied mixins array as it's going to be updated.\n        const appliedMixins = this.appliedMixins = this.appliedMixins.slice();\n\n        // Apply mixins in sequence...\n        for( let mixin of mixins ) {\n            // Mixins array should be flattened.\n            if( Array.isArray( mixin ) ) {\n                this.merge( mixin );\n            }\n            // Don't apply mixins twice.\n            else if( appliedMixins.indexOf( mixin ) < 0 ){\n                appliedMixins.push( mixin );\n\n                // For constructors, merge _both_ static and prototype members.\n                if( typeof mixin === 'function' ){\n                    // Merge static members\n                    this.mergeObject( this.Class, mixin );\n\n                    // merge definitionRules and mergeRules\n                    const sourceMixins = ( mixin as any ).mixins;\n                    if( sourceMixins ){\n                        this.mergeRules = defaults( hashMap(), this.mergeRules, sourceMixins.mergeRules );\n                        this.definitionRules = defaults( hashMap(), this.definitionRules, sourceMixins.definitionRules );\n                        this.appliedMixins = this.appliedMixins.concat( sourceMixins.appliedMixins );\n                    }\n\n                    // Prototypes are merged according with rules.\n                    this.mergeObject( proto, mixin.prototype );\n                }\n                // Handle plain object mixins.\n                else {\n                    this.mergeObject( proto, mixin );\n                }\n            }\n        }\n    }\n\n    populate( ...ctors : Function[] ){\n        for( let Ctor of ctors ) {\n            MixinsState.get( Ctor ).merge([ this.Class ]);\n        }\n    }\n\n    mergeObject( dest : object, source : object, unshift? : boolean ) {\n        forEachOwnProp( source, name => {\n            const sourceProp = Object.getOwnPropertyDescriptor( source, name );\n            let rule : MixinMergeRule;\n\n            if( rule = this.definitionRules[ name ] ){\n                assignProperty( this.definitions, name, sourceProp, rule, unshift );\n            }\n\n            if( !rule || rule === mixinRules.protoValue  ){\n                assignProperty( dest, name, sourceProp, this.mergeRules[ name ], unshift );\n            }\n        });\n    }\n\n    mergeInheritedMembers( BaseClass : Function ){\n        const { mergeRules, Class } = this;\n\n        if( mergeRules ){\n            const proto = Class.prototype,\n                baseProto = BaseClass.prototype;\n\n            for( let name in mergeRules ) {\n                const rule = mergeRules[ name ];\n\n                if( proto.hasOwnProperty( name ) && name in baseProto ){\n                    proto[ name ] = resolveRule( proto[ name ], baseProto[ name ], rule );\n                }\n            }\n        }\n    }\n}\n\nconst dontMix = {\n    function : hashMap({\n        length : true,\n        prototype : true,\n        caller : true,\n        arguments : true,\n        name : true,\n        __super__ : true\n    }),\n    \n    object : hashMap({\n        constructor : true\n    })    \n}\n\nfunction forEachOwnProp( object : object, fun : ( name : string ) => void ){\n    const ignore = dontMix[ typeof object ];\n\n    for( let name of Object.keys( object ) ) {\n        ignore[ name ] || fun( name );\n    }\n}\n\nexport interface MixinMergeRules {\n    [ name : string ] : MixinMergeRule\n}\n\nexport type MixinMergeRule = ( a : any, b : any ) => any\nexport type Mixin = { [ key : string ] : any } | Function\n\n// @mixins( A, B, ... ) decorator.\nexport interface MixinRulesDecorator {\n    ( rules : MixinMergeRules ) : ClassDecorator\n    value( a : object, b : object) : object;\n    protoValue( a : object, b : object) : object;\n    merge( a : object, b : object ) : object;\n    pipe( a: Function, b : Function ) : Function;\n    defaults( a: Function, b : Function ) : Function;\n    classFirst( a: Function, b : Function ) : Function;\n    classLast( a: Function, b : Function ) : Function;\n    every( a: Function, b : Function ) : Function;\n    some( a: Function, b : Function ) : Function;\n}\n\nexport const mixins = ( ...list : Mixin[] ) => (\n    ( Class : Function ) => MixinsState.get( Class ).merge( list )\n);\n\n// @mixinRules({ name : rule, ... }) decorator.\nexport const mixinRules = ( ( rules : MixinMergeRules ) => (\n    ( Class : Function ) => {\n        const mixins = MixinsState.get( Class );\n        mixins.mergeRules = defaults( rules, mixins.mergeRules );\n    }\n) ) as MixinRulesDecorator;\n\n// Pre-defined mixin merge rules\n\nmixinRules.value = ( a, b ) => a;\n\nmixinRules.protoValue = ( a, b ) => a;\n\n// Recursively merge members\nmixinRules.merge = ( a, b ) => defaults( {}, a, b );\n\n    // Execute methods in pipe, with the class method executed last.\nmixinRules.pipe = ( a, b ) => (\n    function( x : any ) : any {\n        return a.call( this, b.call( this, x ) );\n    }\n);\n\n    // Assume methods return an object, and merge results with defaults (class method executed first)\nmixinRules.defaults = ( a : Function, b : Function ) => (\n    function() : object {\n        return defaults( a.apply( this, arguments ), b.apply( this, arguments ) );\n    }\n);\n\n// Execute methods in sequence staring with the class method.\nmixinRules.classFirst = ( a : Function, b : Function ) => (\n    function() : void {\n        a.apply( this, arguments );\n        b.apply( this, arguments );\n    }\n);\n\n    // Execute methods in sequence ending with the class method.\nmixinRules.classLast = ( a : Function, b : Function ) => (\n    function() : void {\n        b.apply( this, arguments );\n        a.apply( this, arguments );\n    }\n)\n\n    // Execute methods in sequence returning the first falsy result.\nmixinRules.every = ( a : Function, b : Function ) =>(\n    function() : any {\n        return a.apply( this, arguments ) && b.apply( this, arguments );\n    }\n);\n    // Execute methods in sequence returning the first truthy result.\nmixinRules.some = ( a : Function, b : Function ) =>(\n    function() : any {\n        return a.apply( this, arguments ) || b.apply( this, arguments );\n    }\n);\n\n/**\n * Helpers\n */\n\nfunction assignProperty( dest : object, name : string, sourceProp : PropertyDescriptor, rule : MixinMergeRule, unshift? : boolean ){\n// Destination prop is defined, thus the merge rules must be applied.\n    if( dest.hasOwnProperty( name ) ){\n        const destProp = Object.getOwnPropertyDescriptor( dest, name );\n\n        if( destProp.configurable && 'value' in destProp ){\n            dest[ name ] = unshift ?\n                resolveRule( sourceProp.value, destProp.value, rule ) :\n                resolveRule( destProp.value, sourceProp.value, rule ) ;\n        }\n    }\n    // If destination is empty, just copy the prop over.\n    else{\n        Object.defineProperty( dest, name, sourceProp );\n    }\n}\n\nfunction resolveRule( dest, source, rule : MixinMergeRule ){\n    // When destination is empty, take the source.\n    if( dest === void 0 ) return source;\n\n    // In these cases we take non-empty destination:\n    if( !rule || source === void 0 ) return dest;\n\n    // In other cases we must merge values.\n    return rule( dest, source );\n}","import * as _eventsApi from './eventsource';\nimport { EventMap, EventsDefinition, EventSource, HandlersByEvent } from './eventsource';\nimport { define, definitions, Mixable, MixableConstructor, mixinRules, MixinsState } from './mixins';\nimport { omit, transform } from './tools';\n\nconst { strings, on, off, once, trigger5, trigger2, trigger3 } = _eventsApi;\n\n/** @hidden */\nlet _idCount = 0;\n\n/** @hidden */\nfunction uniqueId() : string {\n    return 'l' + _idCount++;\n}\n\nexport { EventMap, EventsDefinition };\n\nexport interface MessengerDefinition {\n    _localEvents? : EventMap\n    localEvents? : EventsDefinition\n    properties? : PropertyMap\n    [ name : string ] : any\n}\n\nexport interface PropertyMap {\n    [ name : string ] : Property\n}\n\nexport type Property = PropertyDescriptor | ( () => any )\n\n/** @hidden */\nexport interface MessengersByCid {\n    [ cid : string ] : Messenger\n}\n\n/** @hidden */\nexport type CallbacksByEvents = { [ events : string ] : Function }\n\n/*************************\n * Messenger is mixable class with capabilities of sending and receiving synchronous events.\n * This class itself can serve as both mixin and base class.\n */\n\n@define\n@definitions({\n    properties : mixinRules.merge,\n    localEvents : mixinRules.merge\n})\nexport class Messenger implements Mixable, EventSource {\n    // Define extendable mixin static properties.\n    static __super__ : object;\n    static mixins : MixinsState;\n    static onExtend : ( BaseClass : Function ) => void;\n    static define : ( definition? : MessengerDefinition, statics? : object ) => MixableConstructor;\n    static extend : ( definition? : MessengerDefinition, statics? : object ) => MixableConstructor;\n    static onDefine({ localEvents, _localEvents, properties } : MessengerDefinition, BaseClass? : typeof Mixable ){\n        // Handle localEvents definition\n        if( localEvents || _localEvents ){\n            const eventsMap = new EventMap( this.prototype._localEvents );\n\n            localEvents && eventsMap.addEventsMap( localEvents );\n            _localEvents && eventsMap.merge( _localEvents );\n            \n            this.prototype._localEvents = eventsMap;\n        }\n\n        // Handle properties definitions...\n        if( properties ){\n            Object.defineProperties( this.prototype, transform( {}, <PropertyMap>properties, toPropertyDescriptor ) );\n        }\n    }\n\n    /** @hidden */ \n    _events : HandlersByEvent = void 0;\n\n    /** @hidden */ \n    _listeningTo : MessengersByCid = void 0\n\n    /** Unique client-only id. */\n    cid : string\n\n    /** @hidden Prototype-only property to manage automatic local events subscription */ \n    _localEvents : EventMap\n\n    /** @hidden */ \n    constructor(){\n        this.cid = uniqueId();\n        this.initialize.apply( this, arguments );\n\n        // TODO: local events subscribe?\n    }\n\n    /** Method is called at the end of the constructor */\n    initialize() : void {}\n    \n    on( events : string | CallbacksByEvents, callback, context? ) : this {\n        if( typeof events === 'string' ) strings( on, this, events, callback, context );\n        else for( let name in events ) strings( on, this, name, events[ name ], context || callback );\n\n        return this;\n    }\n\n    once( events : string | CallbacksByEvents, callback, context? ) : this {\n        if( typeof events === 'string' ) strings( once, this, events, callback, context );\n        else for( let name in events ) strings( once, this, name, events[ name ], context || callback );\n\n        return this;\n    }\n\n    off( events? : string | CallbacksByEvents, callback?, context? ) : this {\n        if( !events ) off( this, void 0, callback, context );\n        else if( typeof events === 'string' ) strings( off, this, events, callback, context );\n        else for( let name in events ) strings( off, this, name, events[ name ], context || callback );\n\n        return this;\n    }\n\n    // Trigger one or many events, firing all bound callbacks. Callbacks are\n    // passed the same arguments as `trigger` is, apart from the event name\n    // (unless you're listening on `\"all\"`, which will cause your callback to\n    // receive the true name of the event as the first argument).\n    trigger(name : string, a?, b?, c?, d?, e? ) : this {\n        if( d !== void 0 || e !== void 0 ) trigger5( this, name, a, b, c, d, e );\n        else if( c !== void 0 ) trigger3( this, name, a, b, c );\n        else trigger2( this, name, a, b );\n        return this;\n    }\n\n    listenTo( source : Messenger, a : string | CallbacksByEvents, b? : Function ) : this {\n        if( source ){\n            addReference( this, source );\n            source.on( a, !b && typeof a === 'object' ? this : b, this );\n        }\n\n        return this;\n    }\n\n    listenToOnce( source : Messenger, a : string | CallbacksByEvents, b? : Function ) : this {\n        if( source ){\n            addReference( this, source );\n            source.once( a, !b && typeof a === 'object' ? this : b, this );\n        }\n\n        return this;\n    }\n\n    stopListening( a_source? : Messenger, a? : string | CallbacksByEvents, b? : Function ) : this {\n        const { _listeningTo } = this;\n        if( _listeningTo ){\n            const removeAll = !( a || b ),\n                  second = !b && typeof a === 'object' ? this : b;\n\n            if( a_source ){\n                const source = _listeningTo[ a_source.cid ];\n                if( source ){\n                    if( removeAll ) delete _listeningTo[ a_source.cid ];\n                    source.off( a, second, this );\n                }\n            }\n            else if( a_source == null ){\n                for( let cid in _listeningTo ) _listeningTo[ cid ].off( a, second, this );\n\n                if( removeAll ) ( this._listeningTo = void 0 );\n            }\n        }\n\n        return this;\n    }\n\n    /**\n     * Destructor. Stops messenger from listening to all objects,\n     * and stop others from listening to the messenger. \n     */\n    _disposed : boolean\n\n    dispose() : void {\n        if( this._disposed ) return;\n\n        this.stopListening();\n        this.off();\n\n        this._disposed = true;\n    }\n}\n\n/**\n * Backbone 1.2 API conformant Events mixin.\n */\nexport const Events : Messenger = <Messenger> omit( Messenger.prototype, 'constructor', 'initialize' );\n\n/**\n * Messenger Private Helpers \n */\n\nfunction toPropertyDescriptor( x : Property ) : PropertyDescriptor {\n    if( x ){\n        return typeof x === 'function' ? { get : < () => any >x } : <PropertyDescriptor> x;\n    }\n}\n\n/** @hidden */\nfunction addReference( listener : Messenger, source : Messenger ){\n      const listeningTo = listener._listeningTo || (listener._listeningTo = Object.create( null ) ),\n            cid = source.cid || ( source.cid = uniqueId() );\n\n      listeningTo[ cid ] = source;\n}","import { Messenger } from './events'\nimport { define } from './mixins';\n\nexport type LogLevel = 'error' | 'warn' | 'debug' | 'info' | 'log';\nexport type LoggerEventHandler = ( topic : string, msg : string, props : object )  => void;\n\nexport const isProduction = typeof process !== 'undefined' && process.env && process.env.NODE_ENV === 'production',\n    logEvents : LogLevel[] =  isProduction ?\n        [ 'error', 'info' ] :\n        [ 'error', 'warn', 'debug', 'info', 'log' ];\n\n@define\nexport class Logger extends Messenger {\n    constructor(){\n        super();\n\n        if( typeof console !== 'undefined' ) {\n            for( let event of logEvents ){\n                this.on( event, ( topic, msg, props ) => {\n                    const args = [ `[${topic}] ${msg}` ];\n\n                    for( let name in props ){\n                        args.push( `\\n\\t${name}:`, toString( props[ name ] ) );\n                    }\n            \n                    console[ event ].apply( console, args );\n                });\n            }\n        }\n    }\n\n    trigger : ( level : LogLevel, topic : string, message : string, props? : object ) => this;\n    off : ( event? : LogLevel ) => this;\n    on : ( handlers : { [ name in LogLevel ] : LoggerEventHandler } | LogLevel, handler? : LoggerEventHandler ) => this\n}\n\n/**\n * Convert objects to the plain text friendly format.\n * primitives as in JSON.\n */\nlet toString = typeof window === 'undefined' ? \n    something => {\n        if( something && typeof something === 'object' ){\n            const { __inner_state__ } = something,\n                value = __inner_state__ || something,\n                isArray = Array.isArray( value );\n\n            const body = isArray ? `[ length = ${ value.length } ]` : `{ ${ Object.keys( value ).join( ', ' )} }`;\n\n            return something.constructor.name + ' ' + body;\n        }\n\n        return JSON.stringify( something );\n    }\n    : x => x;\n\nexport const logger = new Logger();\nexport const log : typeof logger.trigger = logger.trigger.bind( logger );","export interface IONode {\n    _endpoint : IOEndpoint\n    _ioPromise : IOPromise< this >\n}\n\nexport interface IOPromise<T> extends Promise<T> {\n    abort? : () => void\n}\n\nexport interface IOEndpoint {\n    list( options : IOOptions, collection? ) : IOPromise<any>\n    create( json : any, options : IOOptions, record? ) : IOPromise<any>\n    update( id : string | number, json :any, options : IOOptions, record? ) : IOPromise<any>\n    read( id : string | number, options : IOOptions, record? ) : IOPromise<any>\n    destroy( id : string | number, options : IOOptions, record? ) : IOPromise<any>\n    subscribe( events : IOEvents, collection? ) : IOPromise<any>\n    unsubscribe( events : IOEvents, collection? ) : void\n}\n\nexport interface IOOptions {\n    ioUpdate? : boolean\n}\n\nexport interface IOEvents {\n    updated? : ( json : any ) => void\n    removed? : ( json : any ) => void\n}\n\nexport function getOwnerEndpoint( self ) : IOEndpoint {\n    // Check if we are the member of the collection...\n    const { collection } = self;\n    if( collection ){\n        return getOwnerEndpoint( collection );\n    }\n\n    // Now, if we're the member of the model...\n    if( self._owner ){\n        const { _endpoints } = self._owner;\n        return _endpoints && _endpoints[ self._ownerKey ];\n    }\n}\n\n/**\n * Create abortable promise.\n * Adds `promise.abort()` function which rejects the promise by default\n * initialize() function takes third optional argument `abort : ( resolve, reject ) => void`,\n * which can be used to add custom abort handling.\n */\ndeclare var Promise: PromiseConstructorLike;\n\nexport function createIOPromise( initialize : InitIOPromise ) : IOPromise<any>{\n    let resolve, reject, onAbort;\n\n    function abort( fn ){\n        onAbort = fn;\n    }\n\n    const promise : IOPromise<any> = new Promise( ( a_resolve, a_reject ) =>{\n        reject = a_reject;\n        resolve = a_resolve;\n        initialize( resolve, reject, abort );\n    }) as IOPromise<any>;\n\n    promise.abort = () => {\n        onAbort ? onAbort( resolve, reject ) : reject( new Error( \"I/O Aborted\" ) );\n    }\n\n    return promise;\n}\n\nexport type InitIOPromise = ( resolve : ( x? : any ) => void, reject : ( x? : any ) => void, abort? : ( fn : Function ) => void ) => void;\n\nexport function startIO( self : IONode, promise : IOPromise<any>, options : IOOptions, thenDo : ( json : any ) => any ) : IOPromise<any> {\n    // Stop pending I/O first...\n    abortIO( self );\n\n    // Mark future update transaction as IO transaction.\n    options.ioUpdate = true;\n\n    self._ioPromise = promise\n        .then( resp => {\n            self._ioPromise = null;\n    \n            const result = thenDo ? thenDo( resp ) : resp;\n                \n            triggerAndBubble( self, 'sync', self, resp, options );\n                \n            return result;\n        } )  \n        .catch( err => {\n            self._ioPromise = null;\n\n            console.error( err );\n            \n            triggerAndBubble( self, 'error', self, err, options );\n            \n            throw err;\n        } ) as IOPromise<any>;\n\n    self._ioPromise.abort = promise.abort;\n\n    return self._ioPromise;\n}\n\nexport function abortIO( self : IONode ){\n    if( self._ioPromise && self._ioPromise.abort ){\n        self._ioPromise.abort();\n        self._ioPromise = null;\n    }\n}\n\nexport function triggerAndBubble( eventSource, ...args ){\n    eventSource.trigger.apply( eventSource, args );\n    const { collection } = eventSource;\n    collection && collection.trigger.apply( collection, args ); \n}","/**\n * Some sketches for reference resolution.\n *\n * \n * a : Model.from( '~collection' )\n * \n * We need two functions. One for get, and one for compile. \n */\nexport interface Traversable {\n    getStore() : Traversable\n    getOwner() : Traversable\n    get( key : string ) : any \n}\n\nconst referenceMask =  /\\^|(store\\.[^.]+)|([^.]+)/g;\n\n// Compile reference to function\nexport type ResolveReference = ( root : Traversable ) => any;  \n\nexport class CompiledReference {\n    resolve : ResolveReference\n    tail : string\n    local : boolean\n\n    constructor( reference : string, splitTail : boolean = false ){\n        const path = reference\n                        .match( referenceMask )\n                        .map( key => {\n                            if( key === '^' || key === 'owner' ) return 'getOwner()';\n\n                            if( key[ 0 ] === '~' ) return `getStore().get(\"${ key.substr( 1 ) }\")`;\n\n                            if( key.indexOf( 'store.' ) === 0 ) return `getStore().get(\"${ key.substr( 6 ) }\")`;\n                            \n                            return key;\n                        } );\n               \n        this.tail = splitTail && path.pop();\n        this.local = !path.length;\n        \n        this.resolve = <any> new Function( 'self', `\n            var v = self.${ path.shift() };\n                           \n            ${ path.map( x => `\n                v = v && v.${ x };\n            `).join('')}\n\n            return v;\n        ` );\n    }\n}\n\nexport function resolveReference( root : Traversable, reference : string, action : ( object, key : string ) => any ) : any {\n    const path = reference.match( referenceMask ),\n          skip = path.length - 1;\n    \n    let self = root;\n\n    for( var i = 0; i < skip; i++ ){\n        const key = path[ i ];\n        switch( key ){\n            case '~' : self = self.getStore(); break;\n            case '^' : self = self.getOwner(); break;\n            default  : self = self.get( key );\n        }\n\n        // Do nothing if object on the path doesn't exist.\n        if( !self ) return;\n    }\n\n    return action( self, path[ skip ] );\n}","export interface ChildrenErrors {\n    [ key : string ] : ValidationError | any\n} \n\nexport interface Validatable {\n    _validateNested( errors : ChildrenErrors ) : number;\n    validate( self : any ) : any\n    get( key : string ) : any\n}\n\n// Validation error object.\nexport class ValidationError {\n    // Invalid nested object keys \n    nested : ChildrenErrors \n    length : number\n\n    // Local error\n    error : any\n\n    constructor( obj : Validatable ){\n        this.length = obj._validateNested( this.nested = {} );\n\n        if( this.error = obj.validate( obj ) ){\n            this.length++;\n        }\n    }\n\n    each( iteratee : ( value : any, key : string ) => void ) : void {\n        const { error, nested } = this;\n\n        if( error ) iteratee( error, null );\n\n        for( const key in nested ){\n            iteratee( nested[ key ], key );\n        }\n    }\n\n    eachError( iteratee : ( error : any, key : string, object : Validatable ) => void, object : Validatable ) : void {\n        this.each( ( value : any, key : string ) => {\n            if( value instanceof ValidationError ){\n                (<ValidationError>value).eachError( iteratee, object.get( key ) );\n            }\n            else{\n                iteratee( value, key, object );\n            }\n        });\n    }\n}","import { abortIO, IOEndpoint, IONode, IOPromise } from './io-tools';\nimport { CallbacksByEvents, define, definitions, eventsApi, Messenger, MessengerDefinition, MessengersByCid, mixinRules, mixins, MixinsState } from './object-plus';\nimport { resolveReference, Traversable } from './traversable';\nimport { ChildrenErrors, Validatable, ValidationError } from './validation';\n\nconst { trigger3, on, off } = eventsApi;\n/***\n * Abstract class implementing ownership tree, tho-phase transactions, and validation. \n * 1. createTransaction() - apply changes to an object tree, and if there are some events to send, transaction object is created.\n * 2. transaction.commit() - send and process all change events, and close transaction.\n */\n\n/** @private */\nexport interface TransactionalDefinition extends MessengerDefinition {\n    endpoint? : IOEndpoint\n}\n\nexport enum ItemsBehavior {\n    share       = 0b0001,\n    listen      = 0b0010,\n    persistent  = 0b0100\n}\n\n// Transactional object interface\n@define\n@definitions({\n    endpoint : mixinRules.value\n})\n@mixins( Messenger )\nexport abstract class Transactional implements Messenger, IONode, Validatable, Traversable {\n    // Mixins are hard in TypeScript. We need to copy type signatures over...\n    // Here goes 'Mixable' mixin.\n    static endpoint : IOEndpoint;\n    static __super__ : object;\n    static mixins : MixinsState;\n    static define : ( definition? : TransactionalDefinition, statics? : object ) => typeof Transactional;\n    static extend : <T extends TransactionalDefinition>( definition? : T, statics? : object ) => any;\n\n    static onDefine( definitions : TransactionalDefinition, BaseClass : typeof Transactional ){\n        if( definitions.endpoint ) this.prototype._endpoint = definitions.endpoint;\n        Messenger.onDefine.call( this, definitions, BaseClass );\n    };\n\n    static onExtend( BaseClass : typeof Transactional ) : void {\n        // Make sure we don't inherit class factories.\n        if( BaseClass.create === this.create ) {\n            this.create = Transactional.create;\n        }\n    }\n\n    // Define extendable mixin static properties.\n    static create( a : any, b? : any ) : Transactional {\n        return new (this as any)( a, b );\n    }\n\n    /** Generic class factory. May be overridden for abstract classes. Not inherited. */\n    on : ( events : string | CallbacksByEvents, callback, context? ) => this\n    once : ( events : string | CallbacksByEvents, callback, context? ) => this\n    off : ( events? : string | CallbacksByEvents, callback?, context? ) => this\n    trigger      : (name : string, a?, b?, c?, d?, e? ) => this\n\n    stopListening : ( source? : Messenger, a? : string | CallbacksByEvents, b? : Function ) => this\n    listenTo : ( source : Messenger, a : string | CallbacksByEvents, b? : Function ) => this\n    listenToOnce : ( source : Messenger, a : string | CallbacksByEvents, b? : Function ) => this\n    \n    _disposed : boolean;\n\n    // State accessor. \n    readonly __inner_state__ : any;\n\n    // Shared modifier (used by collections of shared models)\n    _shared? : number; \n    \n    dispose() : void {\n        if( this._disposed ) return;\n        \n        abortIO( this );\n        this._owner = void 0;\n        this._ownerKey = void 0;\n        this.off();\n        this.stopListening();\n        this._disposed = true;\n    }\n\n    // Must be called at the end of the constructor in the subclass.\n    initialize() : void {}\n\n    /** @private */\n    _events : eventsApi.HandlersByEvent = void 0;\n\n    /** @private */\n    _listeningTo : MessengersByCid\n\n    /** @private */\n    _localEvents : eventsApi.EventMap\n\n    cid : string\n    cidPrefix : string\n\n    static shared : any;\n\n    // Unique version token replaced on change\n    /** @private */\n    _changeToken : {} = {}\n\n    // true while inside of the transaction\n    /** @private */\n    _transaction : boolean = false;\n\n    // Holds current transaction's options, when in the middle of transaction and there're changes but is an unsent change event\n    /** @private */\n    _isDirty  : TransactionOptions = null;\n\n    // Backreference set by owner (Record, Collection, or other object)\n    /** @private */\n    _owner : Owner = void 0;\n\n    // Key supplied by owner. Used by record to identify attribute key.\n    // Only collections doesn't set the key, which is used to distinguish collections.\n    /** @private */  \n    _ownerKey : string = void 0;\n\n    // Name of the change event\n    /** @private */\n    _changeEventName : string\n\n    /**\n     * Subsribe for the changes.\n     */\n    onChanges( handler : Function, target? : Messenger ){\n        on( this, this._changeEventName, handler, target );\n    }\n\n    /**\n     * Unsubscribe from changes.\n     */\n    offChanges( handler? : Function, target? : Messenger ){\n        off( this, this._changeEventName, handler, target );\n    }\n\n    /**\n     * Listen to changes event. \n     */\n    listenToChanges( target : Transactional, handler ){\n        this.listenTo( target, target._changeEventName, handler );\n    }\n\n    constructor( cid : string | number ){\n        this.cid = this.cidPrefix + cid;\n    }\n\n    // Deeply clone ownership subtree\n    abstract clone( options? : CloneOptions ) : this\n    \n    // Execute given function in the scope of ad-hoc transaction.\n    transaction( fun : ( self : this ) => void, options : TransactionOptions = {} ) : void{\n        const isRoot = transactionApi.begin( this );\n        const update = fun.call( this, this );\n        update && this.set( update );\n        isRoot && transactionApi.commit( this );\n    }\n\n    // Loop through the members in the scope of transaction.\n    // Transactional version of each()\n    updateEach( iteratee : ( val : any, key : string | number ) => void, options? : TransactionOptions ){\n        const isRoot = transactionApi.begin( this );\n        this.each( iteratee );\n        isRoot && transactionApi.commit( this );\n    }\n\n    // Apply bulk in-place object update in scope of ad-hoc transaction \n    set( values : any, options? : TransactionOptions ) : this {\n        if( values ){ \n            const transaction = this._createTransaction( values, options );\n            transaction && transaction.commit();\n        } \n\n        return this;\n    }\n\n    // Assign transactional object \"by value\", copying aggregated items.\n    assignFrom( source : Transactional | Object ) : this {\n        // Need to delay change events until change token willl by synced.\n        this.transaction( () =>{\n            this.set( ( <any>source ).__inner_state__ || source, { merge : true } );\n\n            // Synchronize change tokens\n            const { _changeToken } = source as any;\n    \n            if( _changeToken ){\n                this._changeToken = _changeToken;\n            }    \n        });\n\n        return this;\n    }\n\n    // Apply bulk object update without any notifications, and return open transaction.\n    // Used internally to implement two-phase commit.\n    // Returns null if there are no any changes.\n    /** @private */  \n    abstract _createTransaction( values : any, options? : TransactionOptions ) : Transaction | void\n    \n    // Parse function applied when 'parse' option is set for transaction.\n    parse( data : any, options? : TransactionOptions ) : any { return data }\n\n    // Convert object to the serializable JSON structure\n    abstract toJSON( options? : object ) : {}\n\n    /*******************\n     * Traversals and member access\n     */\n    \n    // Get object member by its key.\n    abstract get( key : string ) : any\n\n    // Get object member by symbolic reference.\n    deepGet( reference : string ) : any {\n        return resolveReference( this, reference, ( object, key ) => object.get ? object.get( key ) : object[ key ] );\n    }\n\n    //_isCollection : boolean\n\n    // Return owner skipping collections.\n    getOwner() : Owner {\n        return this._owner;\n    }\n\n    // Store used when owner chain store lookup failed. Static value in the prototype. \n    /** @private */\n    _defaultStore : Transactional\n\n    // Locate the closest store. Store object stops traversal by overriding this method. \n    getStore() : Transactional {\n        const { _owner } = this;\n        return _owner ? <Transactional> _owner.getStore() : this._defaultStore;\n    }\n\n\n    /***************************************************\n     * Iteration API\n     */\n\n    // Loop through the members. Must be efficiently implemented in container class.\n    abstract each( iteratee : ( val : any, key : string | number ) => void, context? : any )\n\n    // Map members to an array\n    map<T>( iteratee : ( val : any, key : string | number ) => T, context? : any ) : T[]{\n        const arr : T[] = [],\n              fun = context !== void 0 ? ( v, k ) => iteratee.call( context, v, k ) : iteratee;\n        \n        this.each( ( val, key ) => {\n            const result = fun( val, key );\n            if( result !== void 0 ) arr.push( result );\n        } );\n\n        return arr;\n    }\n\n    _endpoint : IOEndpoint\n    _ioPromise : IOPromise<this>\n\n    hasPendingIO() : IOPromise<this> { return this._ioPromise; }\n\n    fetch( options? : object ) : IOPromise<this> { throw new Error( \"Not implemented\" ); }\n\n    getEndpoint() : IOEndpoint {\n        return getOwnerEndpoint( this ) || this._endpoint;\n    }\n\n    // Map members to an object\n    mapObject<T>( iteratee : ( val : any, key : string | number ) => T, context? : any ) : { [ key : string ] : T }{\n        const obj : { [ key : string ] : T } = {},\n            fun = context !== void 0 ? ( v, k ) => iteratee.call( context, v, k ) : iteratee;\n        \n        this.each( ( val, key ) => {\n            const result = iteratee( val, key );\n            if( result !== void 0 ) obj[ key ] = result;\n        } );\n\n        return obj;\n    }\n    \n    /*********************************\n     * Validation API\n     */\n\n    // Lazily evaluated validation error\n    /** @private */\n    _validationError : ValidationError = void 0\n\n    // Validate ownership tree and return valudation error \n    get validationError() : ValidationError {\n        const error = this._validationError || ( this._validationError = new ValidationError( this ) );\n        return error.length ? error : null; \n    }\n\n    // Validate nested members. Returns errors count.\n    /** @private */\n    abstract _validateNested( errors : ChildrenErrors ) : number\n\n    // Object-level validator. Returns validation error.\n    validate( obj? : Transactional ) : any {}\n\n    // Return validation error (or undefined) for nested object with the given key. \n    getValidationError( key : string ) : any {\n        var error = this.validationError;\n        return ( key ? error && error.nested[ key ] : error ) || null;\n    }\n\n    // Get validation error for the given symbolic reference.\n    deepValidationError( reference : string ) : any {\n        return resolveReference( this, reference, ( object, key ) => object.getValidationError( key ) );\n    }\n\n    // Iterate through all validation errors across the ownership tree.\n    eachValidationError( iteratee : ( error : any, key : string, object : Transactional ) => void ) : void {\n        const { validationError } = this;\n        validationError && validationError.eachError( iteratee, this );\n    }\n\n    // Check whenever member with a given key is valid. \n    isValid( key : string ) : boolean {\n        return !this.getValidationError( key );\n    }\n\n    valueOf() : Object { return this.cid; }\n    toString(){ return this.cid; }\n\n    // Get class name for an object instance. Works fine with ES6 classes definitions (not in IE).\n    getClassName() : string {\n        const { name } = <any>this.constructor;\n        if( name !== 'Subclass' ) return name;\n    }\n\n    // Logging interface for run time errors and warnings.\n    abstract _log( level : string, topic : string, text : string, value : any ) : void;\n}\n\nexport interface CloneOptions {\n    // 'Pin store' shall assign this._defaultStore = this.getStore();\n    pinStore? : boolean\n}\n\n// Owner must accept children update events. It's an only way children communicates with an owner.\n/** @private */\nexport interface Owner extends Traversable, Messenger {\n    _onChildrenChange( child : Transactional, options : TransactionOptions ) : void;\n    getOwner() : Owner\n    getStore() : Transactional\n}\n\n// Transaction object used for two-phase commit protocol.\n// Must be implemented by subclasses.\n// Transaction must be created if there are actual changes and when markIsDirty returns true.\n/** @private */ \nexport interface Transaction {\n    // Object transaction is being made on.\n    object : Transactional\n\n    // Send out change events, process update triggers, and close transaction.\n    // Nested transactions must be marked with isNested flag (it suppress owner notification).\n    commit( initiator? : Transactional )\n}\n\n// Options for distributed transaction  \nexport interface TransactionOptions {\n    // Invoke parsing \n    parse? : boolean\n\n    // Suppress change notifications and update triggers\n    silent? : boolean\n\n    // Update existing transactional members in place, or skip the update (ignored by models)\n    merge? : boolean // =true\n\n    // Should collections remove elements in set (ignored by models)  \n    remove? : boolean // =true\n\n    // Always replace enclosed objects with new instances\n    reset? : boolean // = false\n\n    // Do not dispose aggregated members\n    unset? : boolean\n\n    validate? : boolean\n\n    // `true` if the transaction is initiated as a result of IO operation\n    ioUpdate? : boolean\n\n    // The hint for IOEndpoint\n    // If `true`, `record.save()` will behave as \"upsert\" operation for the records having id.\n    upsert? : boolean\n}\n\n/**\n * Low-level transactions API. Must be used like this:\n * const isRoot = begin( record );\n * ...\n * isRoot && commit( record, options );\n * \n * When committing nested transaction, the flag must be set to true. \n * commit( object, options, isNested ) \n */\n\nexport const transactionApi = {\n    // Start transaction. Return true if it's the root one.\n    /** @private */\n    begin( object : Transactional ) : boolean {\n        return object._transaction ? false : ( object._transaction = true );  \n    },\n\n    // Mark object having changes inside of the current transaction.\n    // Returns true whenever there notifications are required.\n    /** @private */\n    markAsDirty( object : Transactional, options : TransactionOptions ) : boolean {\n        // If silent option is in effect, don't set isDirty flag.\n        const dirty = !options.silent;\n        if( dirty ) object._isDirty = options;\n        \n        // Reset version token.\n        object._changeToken = {};\n\n        // Object is changed, so validation must happen again. Clear the cache.\n        object._validationError = void 0;\n\n        return dirty;\n    },\n\n    // Commit transaction. Send out change event and notify owner. Returns true if there were changes.\n    // Must be executed for the root transaction only.\n    /** @private */\n    commit( object : Transactional, initiator? : Transactional ){\n        let originalOptions = object._isDirty;\n\n        if( originalOptions ){\n            // Send the sequence of change events, handling chained handlers.\n            while( object._isDirty ){\n                const options = object._isDirty;\n                object._isDirty = null; \n                trigger3( object, object._changeEventName, object, options, initiator );\n            }\n            \n            // Mark transaction as closed.\n            object._transaction = false;\n\n            // Notify owner on changes out of transaction scope.  \n            const { _owner } = object;  \n            if( _owner && _owner !== <any> initiator ){ // If it's the nested transaction, owner is already aware there are some changes.\n                _owner._onChildrenChange( object, originalOptions );\n            }\n        }\n        else{\n            // No changes. Silently close transaction.\n            object._isDirty = null;\n            object._transaction = false;\n        }\n    },\n\n    /************************************\n     * Ownership management\n     */\n\n    // Add reference to the record.\n    /** @private */\n    aquire( owner : Owner, child : Transactional, key? : string ) : boolean {\n        if( !child._owner ){\n            child._owner = owner;\n            child._ownerKey = key;\n            return true;\n        }\n\n        return child._owner === owner;\n    },\n\n    // Remove reference to the record.\n    /** @private */\n    free( owner : Owner, child : Transactional ) : void {\n        if( owner === child._owner ){\n            child._owner = void 0;\n            child._ownerKey = void 0;\n        }\n    }\n}\n\nfunction getOwnerEndpoint( self : Transactional ) : IOEndpoint {\n    // Check if we are the member of the collection...\n    const { collection } = self as any;\n    if( collection ){\n        return getOwnerEndpoint( collection );\n    }\n\n    // Now, if we're the member of the model...\n    if( self._owner ){\n        const { _endpoints } = self._owner as any;\n        return _endpoints && _endpoints[ self._ownerKey ];\n    }\n}\n","import { eventsApi } from '../../object-plus';\nimport { Owner, Transaction, Transactional, transactionApi, TransactionOptions } from \"../../transactions\";\nconst { begin : _begin, markAsDirty : _markAsDirty, commit } = transactionApi;\n\nconst { trigger3 } = eventsApi;\n\nexport interface ConstructorsMixin {\n    Attributes : AttributesConstructor\n    AttributesCopy : AttributesCopyConstructor\n}\n\nexport interface ConstructorOptions extends TransactionOptions{\n    clone? : boolean\n}\n\nexport type AttributesConstructor = new ( record : AttributesContainer, values : object, options : TransactionOptions ) => AttributesValues;\nexport type AttributesCopyConstructor = new ( values : object ) => AttributesValues;\n\nexport interface AttributesContainer extends Transactional, Owner, ConstructorsMixin {\n    // Attribute descriptors.\n    _attributes : AttributesDescriptors\n\n    // Attribute values.\n    attributes : AttributesValues\n\n    // Previous attribute values.\n    _previousAttributes : AttributesValues\n\n    // Changed attributes cache. \n    _changedAttributes : AttributesValues\n}\n\nexport interface AttributesValues {\n    [ name : string ] : any\n}\n\nexport interface AttributesDescriptors {\n    [ name : string ] : AttributeUpdatePipeline\n}\n\nexport interface AttributeUpdatePipeline{\n    doUpdate( value, record : AttributesContainer, options : TransactionOptions, nested? : Transaction[] ) : boolean\n}\n\n // Optimized single attribute transactional update. To be called from attributes setters\n // options.silent === false, parse === false. \nexport function setAttribute( record : AttributesContainer, name : string, value : any ) : void {\n    // Open the transaction.\n    const isRoot  = begin( record ),\n          options = {};\n\n    // Update attribute.      \n    if( record._attributes[ name ].doUpdate( value, record, options ) ){\n        // Notify listeners on changes.\n        markAsDirty( record, options );\n        trigger3( record, 'change:' + name, record, record.attributes[ name ], options );\n    }\n\n    // Close the transaction.\n    isRoot && commit( record );\n}\n\nfunction begin( record : AttributesContainer ){\n    if( _begin( record ) ){\n        record._previousAttributes = new record.AttributesCopy( record.attributes );\n        record._changedAttributes = null;\n        return true;\n    }\n    \n    return false;\n}\n\nfunction markAsDirty( record : AttributesContainer, options : TransactionOptions ){\n    // Need to recalculate changed attributes, when we have nested set in change:attr handler\n    if( record._changedAttributes ){\n        record._changedAttributes = null;\n    }\n\n    return _markAsDirty( record, options );\n}\n\n/**\n * TODO: There's an opportunity to create an optimized pipeline for primitive types and Date, which makes the majority\n * of attributes. It might create the major speedup.\n * \n * Create the dedicated pipeline for owned and shared attributes as well.\n * \n * Three elements of the pipeline:\n * - from constructor\n * - from assignment\n * - from `set`\n */\n\nexport const UpdateRecordMixin = {\n// Need to override it here, since begin/end transaction brackets are overriden. \n    transaction( this : AttributesContainer, fun : ( self : AttributesContainer ) => void, options : TransactionOptions = {} ) : void{\n        const isRoot = begin( this );\n        fun.call( this, this );\n        isRoot && commit( this );\n    },\n            \n    // Handle nested changes. TODO: propagateChanges == false, same in transaction.\n    _onChildrenChange( child : Transactional, options : TransactionOptions ) : void {\n        const { _ownerKey } = child,\n              attribute = this._attributes[ _ownerKey ];\n\n        if( !attribute /* TODO: Must be an opposite, likely the bug */ || attribute.propagateChanges ) this.forceAttributeChange( _ownerKey, options );\n    },\n\n    // Simulate attribute change \n    forceAttributeChange( key : string, options : TransactionOptions = {} ){\n        // Touch an attribute in bounds of transaction\n        const isRoot = begin( this );\n\n        if( markAsDirty( this, options ) ){\n            trigger3( this, 'change:' + key, this, this.attributes[ key ], options );\n        }\n        \n        isRoot && commit( this );\n    },\n\n    _createTransaction( this : AttributesContainer, a_values : {}, options : TransactionOptions = {} ) : Transaction {\n        const isRoot = begin( this ),\n                changes : string[] = [],\n                nested : RecordTransaction[]= [],\n                { _attributes } = this,\n                values = options.parse ? this.parse( a_values, options ) : a_values;\n\n        let unknown;\n\n        if( shouldBeAnObject( this, values ) ){\n            for( let name in values ){\n                const spec = _attributes[ name ];\n\n                if( spec ){\n                    if( spec.doUpdate( values[ name ], this, options, nested ) ){\n                        changes.push( name );\n                    }\n                }\n                else{\n                    unknown || ( unknown = [] );\n                    unknown.push( `'${ name }'` );\n                }\n            }\n\n            if( unknown ){\n                unknownAttrsWarning( this, unknown, { values } );\n            }\n        }\n        \n        if( changes.length && markAsDirty( this, options ) ){\n            return new RecordTransaction( this, isRoot, nested, changes );\n        }\n        \n        // No changes, but there might be silent attributes with open transactions.\n        for( let pendingTransaction of nested ){\n            pendingTransaction.commit( this );\n        }\n\n        isRoot && commit( this );\n    }\n};\n\nexport function unknownAttrsWarning( record : AttributesContainer, unknown : string[], props ){\n    this._log( 'warn', 'Type-R:UnknownAttrs', `undefined attributes ${ unknown.join(', ')} are ignored.`, props );\n}\n\n// One of the main performance tricks of Type-R.\n// Create loop unrolled constructors for internal attribute hash,\n// so the hidden class JIT optimization will be engaged and they will become static structs.\n// It dramatically improves record performance.\nexport function constructorsMixin( attrDefs : AttributesDescriptors ) : ConstructorsMixin {\n    const attrs = Object.keys( attrDefs );\n\n    const AttributesCopy : AttributesCopyConstructor = new Function( 'values', `\n        ${ attrs.map( attr =>`\n            this.${ attr } = values.${ attr };\n        `).join( '' ) }\n    `) as any;\n\n    AttributesCopy.prototype = Object.prototype;\n\n    const Attributes : AttributesConstructor = new Function( 'record', 'values', 'options', `\n        var _attrs = record._attributes;\n\n        ${ attrs.map( attr =>`\n            this.${ attr } = _attrs.${ attr }.doInit( values.${ attr }, record, options );\n        `).join( '' ) }\n    `) as any;\n\n    Attributes.prototype = Object.prototype;\n\n    return { Attributes, AttributesCopy };\n}\n\nexport function shouldBeAnObject( record : AttributesContainer, values : object ){\n    if( values && values.constructor === Object ) return true;\n\n    record._log( 'error', 'Type-R:InvalidObject', 'update with non-object is ignored!', { values } );\n    return false;\n}\n\n// Transaction class. Implements two-phase transactions on object's tree. \n// Transaction must be created if there are actual changes and when markIsDirty returns true. \nexport class RecordTransaction implements Transaction {\n    // open transaction\n    constructor( public object : AttributesContainer,\n                 public isRoot : boolean,\n                 public nested : Transaction[],\n                 public changes : string[] ){}\n\n    // commit transaction\n    commit( initiator? : AttributesContainer ) : void {\n        const { nested, object, changes } = this;\n\n        // Commit all pending nested transactions...\n        for( let transaction of nested ){ \n            transaction.commit( object );\n        }\n\n        // Notify listeners on attribute changes...\n        // Transaction is never created when silent option is set, so just send events out.\n        const { attributes, _isDirty } = object;\n        for( let key of changes ){\n            trigger3( object, 'change:' + key, object, attributes[ key ], _isDirty );\n        }\n\n        this.isRoot && commit( object, initiator );\n    }\n}","import { IOEndpoint } from '../../io-tools';\nimport { log, LogLevel, tools } from '../../object-plus';\nimport { TransactionOptions } from '../../transactions';\nimport { AttributesContainer, AttributeUpdatePipeline, RecordTransaction, setAttribute } from './updates';\n\nconst { notEqual, assign} = tools;\n\n\ndeclare global {\n    interface Function {\n        _attribute : typeof AnyType\n    }\n}\n\nexport type Transform = ( this : AnyType, next : any, prev : any, record : AttributesContainer, options : TransactionOptions ) => any;\nexport type ChangeHandler = ( this : AnyType, next : any, prev : any, record : AttributesContainer, options : TransactionOptions ) => void;\n\nexport interface AttributeOptions {\n    _attribute? : typeof AnyType\n    validate? : ( record : AttributesContainer, value : any, key : string ) => any\n    isRequired? : boolean\n    changeEvents? : boolean\n\n    endpoint? : IOEndpoint\n\n    type? : Function\n    value? : any\n    hasCustomDefault? : boolean\n\n    parse? : Parse\n    toJSON? : AttributeToJSON\n   \n    getHooks? : GetHook[]\n    transforms? : Transform[]\n    changeHandlers? : ChangeHandler[]\n\n    _onChange? : ChangeAttrHandler\n}\n\nexport type Parse = ( value : any, key : string ) => any;\nexport type GetHook = ( value : any, key : string ) => any;\nexport type AttributeToJSON = ( value : any, key : string ) => any\nexport type AttributeParse = ( value : any, key : string ) => any\nexport type ChangeAttrHandler = ( ( value : any, attr : string ) => void ) | string;\n\n// TODO: interface differs from options, do something obout it\nconst emptyOptions : TransactionOptions = {};\n\n/**\n * Typeless attribute. Is the base class for all other attributes.\n */\nexport class AnyType implements AttributeUpdatePipeline {\n    // Factory method to create attribute from options \n    static create( options : AttributeOptions, name : string ) : AnyType {\n        const type = options.type,\n              AttributeCtor = options._attribute || ( type ? type._attribute : AnyType );\n\n        return new AttributeCtor( name, options );\n    }\n    /**\n     * Update pipeline functions\n     * =========================\n     *\n     * Stage 0. canBeUpdated( value )\n     * - presence of this function implies attribute's ability to update in place.\n     */\n    canBeUpdated( prev, next, options : TransactionOptions ) : any {}\n\n    /**\n     * Stage 1. Transform stage\n     */\n    transform( next : any, prev : any, model : AttributesContainer, options : TransactionOptions ) : any { return next; }\n\n    // convert attribute type to `this.type`.\n    convert( next : any, prev : any, model : AttributesContainer, options : TransactionOptions ) : any { return next; }\n\n    /**\n     * Stage 2. Check if attr value is changed\n     */\n    isChanged( a : any, b : any ) : boolean {\n        return notEqual( a, b );\n    }\n\n    /**\n     * Stage 3. Handle attribute change\n     */\n    handleChange( next : any, prev : any, model : AttributesContainer, options : TransactionOptions ) {}\n\n    /**\n     * End update pipeline definitions.\n     */\n\n    // create empty object passing backbone options to constructor...\n    create() { return void 0; }\n\n    // generic clone function for typeless attributes\n    // Must be overriden in sublass\n    clone( value : any, record : AttributesContainer ) {\n        return value;\n    }\n\n    dispose( record : AttributesContainer, value : any ) : void {\n        this.handleChange( void 0, value, record, emptyOptions );\n    }\n\n    validate( record : AttributesContainer, value : any, key : string ) : any {}\n\n    toJSON( value, key, options? : object ) {\n        return value && value.toJSON ? value.toJSON( options ) : value;\n    }\n\n    createPropertyDescriptor() : PropertyDescriptor | void {\n        const { name, getHook } = this;\n\n        if( name !== 'id' ){\n            return {\n                // call to optimized set function for single argument.\n                set( value ){\n                    setAttribute( this, name, value );\n                },\n\n                // attach get hook to the getter function, if it present\n                get : (\n                    getHook ?\n                        function() {\n                            return getHook.call( this, this.attributes[ name ], name );\n                        } :\n                        function() { return this.attributes[ name ]; }\n                )\n            }\n        }\n    }\n\n    value : any\n\n    // Used as global default value for the given metatype\n    static defaultValue : any;\n\n    type : Function\n\n    initialize( name : string, options : TransactionOptions ){}\n\n    options : AttributeOptions\n\n    doInit( value, record : AttributesContainer, options : TransactionOptions ){\n        const v = value === void 0 ? this.defaultValue() : value,\n            x = this.transform( v, void 0, record, options );\n            \n        this.handleChange( x, void 0, record, options );\n        return x;\n    }\n\n    doUpdate( value, record : AttributesContainer, options : TransactionOptions, nested? : RecordTransaction[] ){\n        const { name } = this,\n            { attributes } = record,\n              prev = attributes[ name ];\n\n        const next = this.transform( value, prev, record, options );\n        attributes[ name ] = next;\n\n        if( this.isChanged( next, prev ) ) {\n            // Do the rest of the job after assignment\n            this.handleChange( next, prev, record, options );\n            return true;\n        }\n\n        return false;\n    }\n\n    propagateChanges : boolean\n\n    protected _log( level : LogLevel, code : string, text : string, value, record : AttributesContainer ){\n        log( level, code, `${record.getClassName()}.${ this.name } ${ text }`, {\n            'New value' : value,\n            'Prev. value' : record.attributes[ this.name ],\n            'Attribute definition' : this,\n            'Record' : record\n        });\n    }\n\n    defaultValue(){\n        return this.value;\n    }\n\n    constructor( public name : string, a_options : AttributeOptions ) {        \n        // Save original options...\n        this.options = a_options;\n\n        // Clone options.\n        const options : AttributeOptions = assign( { getHooks : [], transforms : [], changeHandlers : [] }, a_options );\n        options.getHooks = options.getHooks.slice();\n        options.transforms = options.transforms.slice();\n        options.changeHandlers = options.changeHandlers.slice();\n\n        const {\n                  value, type, parse, toJSON, changeEvents,\n                  validate, getHooks, transforms, changeHandlers\n              } = options;\n\n        // Initialize default value...\n        this.value = value;\n        this.type  = type;\n\n        // TODO: An opportunity to optimize for attribute subtype.\n        if( !options.hasCustomDefault && type ){\n            this.defaultValue = this.create;\n        }\n        else if( tools.isValidJSON( value ) ){ \n            // JSON literals must be deep copied.\n            this.defaultValue = new Function( `return ${ JSON.stringify( value ) };` ) as any;\n        }\n        else{\n            this.defaultValue = this.defaultValue;\n        }\n\n        // Changes must be bubbled when they are not disabled for an attribute and transactional object.\n        this.propagateChanges = changeEvents !== false;\n\n        this.toJSON = toJSON === void 0 ? this.toJSON : toJSON;\n\n        this.validate = validate || this.validate;\n        \n        if( options.isRequired ){\n            this.validate = wrapIsRequired( this.validate );\n        }\n\n        /**\n         * Assemble pipelines...\n         */\n\n        // `convert` is default transform, which is always present...\n        transforms.unshift( this.convert );\n\n        // Get hook from the attribute will be used first...\n        if( this.get ) getHooks.unshift( this.get );\n\n        // let subclasses configure the pipeline...\n        this.initialize.call( this, options );\n\n        // let attribute spec configure the pipeline...\n        if( getHooks.length ){\n            const getHook = this.getHook = getHooks.reduce( chainGetHooks );\n\n            const { validate } = this;\n            this.validate = function( record : AttributesContainer, value : any, key : string ){\n                return validate.call( this, record, getHook.call( record, value, key ), key );\n            }\n        }\n        \n        this.transform = transforms.length ? transforms.reduce( chainTransforms ) : this.transform;\n        \n        this.handleChange = changeHandlers.length ? changeHandlers.reduce( chainChangeHandlers ) : this.handleChange;\n\n        // Attribute-level parse transform are attached as update hooks modifiers...\n        const { doInit, doUpdate } = this;\n        this.doInit = parse ? function( value, record : AttributesContainer, options : TransactionOptions ){\n            return doInit.call( this, options.parse && value !== void 0 ? parse.call( record, value, this.name ) : value, record, options );\n        } : doInit;\n\n        this.doUpdate = parse ? function( value, record : AttributesContainer, options : TransactionOptions, nested? : RecordTransaction[] ){\n            return doUpdate.call( this, options.parse && value !== void 0 ? parse.call( record, value, this.name ) : value, record, options, nested );\n        } : doUpdate;\n    }\n\n    getHook : ( value, key : string ) => any = null\n    get : ( value, key : string ) => any\n}\n\n\nfunction chainGetHooks( prevHook : GetHook, nextHook : GetHook ) : GetHook {\n    return function( value, name ) {\n        return nextHook.call( this, prevHook.call( this, value, name ), name );\n    }\n}\n\nfunction chainTransforms( prevTransform : Transform, nextTransform : Transform ) : Transform {\n    return function( next, prev, record, options ) {\n        return nextTransform.call( this, prevTransform.call( this, next, prev, record, options ), prev, record, options );\n    }\n}\n\nfunction chainChangeHandlers( prevHandler : ChangeHandler, nextHandler : ChangeHandler ) : ChangeHandler {\n    return function( next, prev, record, options ) {\n        prevHandler.call( this, next, prev, record, options );\n        nextHandler.call( this, next, prev, record, options );\n    }\n}\n\nfunction wrapIsRequired( validate ){\n    return function( record : AttributesContainer, value : any, key : string ){\n        return value ? validate.call( this, record, value, key ) : 'Required';\n    }\n}","/**\n * Type spec engine. Declare attributes using chainable syntax,\n * and returns object with spec.\n */\nimport { IOEndpoint } from '../../io-tools';\nimport { definitionDecorator, EventMap, EventsDefinition, tools } from '../../object-plus';\nimport { Transactional } from '../../transactions';\nimport { AttributeOptions, Parse } from './any';\nimport { AttributesContainer } from './updates';\n\nconst { assign } = tools;\n\nexport interface AttributeCheck {\n    ( value : any, key : string ) : boolean\n    error? : any\n}\n\nexport class ChainableAttributeSpec {\n    options : AttributeOptions;\n\n    constructor( options : AttributeOptions ) {\n        // Shallow copy options, fill it with defaults.\n        this.options = { getHooks : [], transforms : [], changeHandlers : []};\n        if( options ) assign( this.options, options );\n    }\n\n    check( check : AttributeCheck, error : any ) : ChainableAttributeSpec {\n        function validate( model, value, name ){\n            if( !check.call( model, value, name ) ){\n                const msg = error || check.error || name + ' is not valid';\n                return typeof msg === 'function' ? msg.call( model, name ) : msg;\n            }\n        }\n\n        const prev = this.options.validate;\n\n        return this.metadata({\n            validate : prev ? (\n                            function( model, value, name ){\n                                return prev( model, value, name ) || validate( model, value, name );\n                            }\n                       ) : validate\n        });\n    }\n\n    get asProp(){\n        return definitionDecorator( 'attributes', this );\n    }\n\n    get as(){ return this.asProp; }\n\n    get isRequired() : ChainableAttributeSpec {\n        return this.metadata({ isRequired : true }); \n    }\n\n    endpoint( endpoint : IOEndpoint ){\n        return this.metadata({ endpoint });\n    }\n\n    watcher( ref : string | ( ( value : any, key : string ) => void ) ) : ChainableAttributeSpec {\n        return this.metadata({ _onChange : ref });\n    }\n\n    // Attribute-specific parse transform\n    parse( fun : Parse ) : ChainableAttributeSpec {\n        return this.metadata({ parse : fun });\n    }\n\n    toJSON( fun ) : ChainableAttributeSpec {\n        return this.metadata({\n            toJSON : typeof fun === 'function' ? fun : ( fun ? ( x, k, o ) => x && x.toJSON( o ) : emptyFunction ) \n        });\n    }\n\n    // Attribute get hook.\n    get( fun ) : ChainableAttributeSpec {\n        return this.metadata({\n            getHooks : this.options.getHooks.concat( fun )\n        });\n    }\n\n    // Attribute set hook.\n    set( fun ) : ChainableAttributeSpec {\n        function handleSetHook( next, prev, record : AttributesContainer, options ) {\n            if( this.isChanged( next, prev ) ) {\n                const changed = fun.call( record, next, this.name );\n                return changed === void 0 ? prev : this.convert( changed, prev, record, options );\n            }\n\n            return prev;\n        }\n\n        return this.metadata({\n            transforms : this.options.transforms.concat( handleSetHook )\n        });\n    }\n\n    changeEvents( events : boolean ) : ChainableAttributeSpec {\n        return this.metadata({ changeEvents : events });\n    }\n\n    // Subsribe to events from an attribute.\n    events( map : EventsDefinition ) : ChainableAttributeSpec {\n        const eventMap = new EventMap( map );\n\n        function handleEventsSubscribtion( next, prev, record : AttributesContainer ){\n            prev && prev.trigger && eventMap.unsubscribe( record, prev );\n\n            next && next.trigger && eventMap.subscribe( record, next );\n        }\n\n        return this.metadata({\n            changeHandlers : this.options.changeHandlers.concat( handleEventsSubscribtion )\n        });\n    }\n\n    // Creates a copy of the spec.\n    get has() : ChainableAttributeSpec {\n        return this;\n    }\n\n    metadata( options : AttributeOptions ) : ChainableAttributeSpec {\n        const cloned = new ChainableAttributeSpec( this.options );\n        assign( cloned.options, options );\n        return cloned;\n    }\n\n    value( x ) : ChainableAttributeSpec {\n        return this.metadata({ value : x, hasCustomDefault : true });\n    }\n\n    static from( spec : any ) : ChainableAttributeSpec {\n        let attrSpec : ChainableAttributeSpec;\n\n        if( typeof spec === 'function' ) {\n            attrSpec = type( spec );\n        }\n        else if( spec && spec instanceof ChainableAttributeSpec ) {\n            attrSpec = spec;\n        }\n        else{\n            // Infer type from value.\n            const type = inferType( spec );\n    \n            // Transactional types inferred from values must have shared type. \n            if( type && type.prototype instanceof Transactional ){\n                attrSpec = type( ( type as typeof Transactional ).shared ).value( spec );\n            }\n            // All others will be created in regular way.\n            else{\n                attrSpec = new ChainableAttributeSpec({ type : type, value : spec, hasCustomDefault : true });\n            }\n        }\n    \n        return attrSpec;\n    }\n}\n\nfunction emptyFunction(){}\n\nexport function type( this : void, spec : ChainableAttributeSpec | Function ) : ChainableAttributeSpec {\n    return spec instanceof ChainableAttributeSpec ? spec : new ChainableAttributeSpec( {\n        type : spec,\n        value : spec._attribute.defaultValue,\n        hasCustomDefault : spec._attribute.defaultValue !== void 0\n    } );\n}\n\nfunction inferType( value : {} ) : Function {\n    switch( typeof value ) {\n        case 'number' :\n            return Number;\n        case 'string' :\n            return String;\n        case 'boolean' :\n            return Boolean;\n        case 'undefined' :\n            return void 0;\n        case 'object' :\n            return value ? <any> value.constructor : void 0;\n    }\n}\n","/**\n * Built-in JSON types attributes: Object, Array, Number, String, Boolean, and immutable class.\n * \n * Adds type assertions, default validation, and optimized update pipeline.\n */\n\nimport { TransactionOptions } from '../../transactions';\nimport { AnyType } from './any';\nimport { AttributesContainer } from './updates';\n\n/**\n * Custom class must be immutable class which implements toJSON() method\n * with a constructor taking json.\n */\nclass ImmutableClassType extends AnyType {\n    type : new ( value? : any ) => {}\n\n    create(){\n        return new this.type();\n    }\n\n    convert( next : any ) : any {\n        return next == null || next instanceof this.type ? next : new this.type( next );\n    }\n\n    toJSON( value, key? : string, options? : object ){\n        return value && value.toJSON ? value.toJSON( options ) : value;\n    }\n\n    clone( value ) {\n        return new this.type( this.toJSON( value ) );\n    }\n\n    isChanged( a, b ){\n        return a !== b;\n    }\n}\n\nFunction.prototype._attribute = ImmutableClassType;\n\n/**\n * Optimized attribute of primitive type.\n * \n * Primitives has specialized simplified pipeline.\n */\nexport class PrimitiveType extends AnyType {\n    type : NumberConstructor | StringConstructor | BooleanConstructor\n\n    dispose(){}\n    create() { return this.type(); }\n\n    toJSON( value ) { return value; }\n\n    convert( next ) { return next == null ? next : this.type( next ); }\n\n    isChanged( a, b ) { return a !== b; }\n\n    clone( value ) { return value; }\n\n    doInit( value, record : AttributesContainer, options : TransactionOptions ){\n        return this.transform( value === void 0 ? this.value : value, void 0, record, options );\n    }\n\n    doUpdate( value, record, options, nested ){\n        const   { name } = this,\n                { attributes } = record,\n                prev = attributes[ name ];\n        \n        return prev !== ( attributes[ name ] = this.transform( value, prev, record, options ) );\n    }\n\n    initialize(){\n        if( !this.options.hasCustomDefault ){\n            this.value = this.type();\n        }\n    }\n}\n\nBoolean._attribute = String._attribute = PrimitiveType;\n\n// Number type with special validation algothim.\n/** @private */ \nexport class NumericType extends PrimitiveType {\n    type : NumberConstructor\n\n    create(){\n        return 0;\n    }\n\n    convert( next, prev?, record? ) {\n        const num = next == null ? next : this.type( next );\n\n        if( num !== num ){\n            this._log( 'error', 'Type-R:InvalidNumber', 'Number attribute is assigned with an invalid number', next, record );\n        }\n        \n        return num;\n    }\n\n    validate( model, value, name ) {\n        // Whatever is not symmetrically serializable to JSON, is not valid by default.\n        if( value != null && !isFinite( value ) ) {\n            return name + ' is not valid number';\n        }\n    }\n}\n\nNumber._attribute = NumericType;\n\n/**\n * Compatibility wrapper for Array type.\n * @private\n */ \nexport class ArrayType extends AnyType {\n    toJSON( value ) { return value; }\n    dispose(){}\n    create(){ return []; }\n\n    convert( next, prev, record ) {\n        // Fix incompatible constructor behaviour of Array...\n        if( next == null || Array.isArray( next ) ) return next;\n\n        this._log( 'error', 'Type-R:InvalidArray', 'Array attribute assigned with non-array value', next, record );\n\n        return [];\n    }\n\n    clone( value ){\n        return value && value.slice();\n    }\n}\n\nArray._attribute = ArrayType;\n\nexport class ObjectType extends AnyType {\n    create(){ return {}; }\n\n    convert( next, prev, record ) {\n        if( next == null || typeof next === 'object' ) return next;\n                \n        this._log( 'error', 'Type-R:InvalidObject', 'Object attribute is assigned with non-object value', next, record );\n        return {};\n    }\n}\n\nObject._attribute = ObjectType;\n\nexport function doNothing(){}\n\nexport class FunctionType extends AnyType {\n    // Functions are not serialized.\n    toJSON( value ) { return void 0; }\n    create(){ return doNothing; }\n    dispose(){}\n\n    convert( next, prev, record ) {\n        // Fix incompatible constructor behaviour of Function...\n        if( next == null || typeof next === 'function' ) return next;\n\n        this._log( 'error', 'Type-R:InvalidFunction', 'Function attribute assigned with non-function value', next, record );\n\n        return doNothing;\n    }\n\n    // Functions are not cloned.\n    clone( value ){ return value; }\n}\n\nFunction._attribute = FunctionType;","/**\n * Date attribute type.\n * \n * Implements validation, cross-browser compatibility fixes, variety of Date serialization formats,\n * and optimized update pipeline.\n */\nimport { TransactionOptions } from '../../transactions';\nimport { AnyType } from './any';\nimport { AttributesContainer } from './updates';\n\n// Date Attribute\n/** @private */\nexport class DateType extends AnyType {\n    create(){\n        return new Date();\n    }\n    \n    convert( next : any, a, record ){\n        if( next == null || next instanceof Date ) return next;\n\n        const date = new Date( next ),\n              timestamp = date.getTime();\n\n        if( timestamp !== timestamp ){\n            this._log( 'error', 'Type-R:InvalidDate', 'Date attribute assigned with invalid date', next, record );\n        }\n\n        return date;\n    }\n\n    validate( model, value, name ) {\n        if( value != null ){\n            const timestamp = value.getTime(); \n            if( timestamp !== timestamp ) return name + ' is Invalid Date';\n        }\n    }\n\n    toJSON( value ) { return value && value.toISOString(); }\n\n    isChanged( a, b ) { return ( a && a.getTime() ) !== ( b && b.getTime() ); }\n\n    doInit( value, record : AttributesContainer, options : TransactionOptions ){\n        // Date don't have handleChanges step.\n        return this.transform( value === void 0 ? this.defaultValue() : value, void 0, record, options );\n    }\n\n    doUpdate( value, record, options, nested ){\n        const   { name } = this,\n                { attributes } = record,\n                prev = attributes[ name ];\n        \n        // Date don't have handleChanges step.\n        return this.isChanged( prev , attributes[ name ] = this.transform( value, prev, record, options ) );\n    }\n\n    clone( value ) { return value && new Date( value.getTime() ); }\n    dispose(){}\n}\n\nDate._attribute = DateType;\n\n// If ISO date is not supported by date constructor (such as in Safari), polyfill it.\nfunction supportsDate( date ){\n    return !isNaN( ( new Date( date ) ).getTime() );\n}\n\nif( !supportsDate('2011-11-29T15:52:30.5') ||\n    !supportsDate('2011-11-29T15:52:30.52') ||\n    !supportsDate('2011-11-29T15:52:18.867') ||\n    !supportsDate('2011-11-29T15:52:18.867Z') ||\n    !supportsDate('2011-11-29T15:52:18.867-03:30') ){\n\n    DateType.prototype.convert = function( value ){\n        return value == null || value instanceof Date ? value : new Date( safeParseDate( value ) );\n    }\n}\n\nconst numericKeys    = [ 1, 4, 5, 6, 7, 10, 11 ],\n      isoDatePattern = /^(\\d{4}|[+\\-]\\d{6})(?:-(\\d{2})(?:-(\\d{2}))?)?(?:T(\\d{2}):(\\d{2})(?::(\\d{2})(?:\\.(\\d{3}))?)?(?:(Z)|([+\\-])(\\d{2})(?::(\\d{2}))?)?)?$/;\n\nfunction safeParseDate( date : string ) : number {\n    var timestamp, struct : any[], minutesOffset = 0;\n\n    if( ( struct = isoDatePattern.exec( date )) ) {\n        // avoid NaN timestamps caused by undefined values being passed to Date.UTC\n        for( var i = 0, k; ( k = numericKeys[ i ] ); ++i ) {\n            struct[ k ] = +struct[ k ] || 0;\n        }\n\n        // allow undefined days and months\n        struct[ 2 ] = (+struct[ 2 ] || 1) - 1;\n        struct[ 3 ] = +struct[ 3 ] || 1;\n\n        if( struct[ 8 ] !== 'Z' && struct[ 9 ] !== undefined ) {\n            minutesOffset = struct[ 10 ] * 60 + struct[ 11 ];\n\n            if( struct[ 9 ] === '+' ) {\n                minutesOffset = 0 - minutesOffset;\n            }\n        }\n\n        timestamp =\n            Date.UTC( struct[ 1 ], struct[ 2 ], struct[ 3 ], struct[ 4 ], struct[ 5 ] + minutesOffset, struct[ 6 ],\n                    struct[ 7 ] );\n    }\n    else {\n        timestamp = Date.parse( date );\n    }\n\n    return timestamp;\n}","import { ItemsBehavior, Transactional, transactionApi, TransactionOptions } from '../../transactions';\nimport { ValidationError } from '../../validation';\nimport { AnyType } from './any';\nimport { AttributesContainer, ConstructorOptions } from './updates';\n\nconst { free, aquire } = transactionApi;\n\nexport class AggregatedType extends AnyType {\n    type : typeof Transactional\n\n    clone( value : Transactional ) : Transactional {\n        return value ? value.clone() : value;\n    }\n\n    toJSON( x, key : string, options : object ){ return x && x.toJSON( options ); }\n\n    doInit( value, record : AttributesContainer, options : ConstructorOptions ){\n        const v = options.clone ? this.clone( value ) : (\n            value === void 0 ? this.defaultValue() : value\n        );\n\n        const x = this.transform( v, void 0, record, options );\n        this.handleChange( x, void 0, record, options );\n        return x;\n    }\n\n    doUpdate( value, record, options, nested : any[] ){ // Last to things can be wrapped to an object, either transaction or ad-hoc\n        const key = this.name, { attributes } = record; \n        const prev = attributes[ key ];\n        let update;\n\n        // This can be moved to transactional attribute. And chained with the rest.\n        if( update = this.canBeUpdated( prev, value, options ) ) { // todo - skip empty updates.\n            const nestedTransaction = prev._createTransaction( update, options );\n            if( nestedTransaction ){\n                if( nested ){\n                    nested.push( nestedTransaction );\n                }\n                else{\n                    nestedTransaction.commit( record );\n                }\n\n                if( this.propagateChanges ) return true;\n            }\n\n            return false;\n        }\n\n        const next = this.transform( value, prev, record, options );\n        attributes[ key ] = next;\n\n        if( this.isChanged( next, prev ) ) { // Primitives and nested comparison can be inlined.\n            // Do the rest of the job after assignment\n            this.handleChange( next, prev, record, options );\n\n            return true;\n        }\n\n        return false;\n    }\n\n    canBeUpdated( prev : Transactional, next : any, options : TransactionOptions ) : any {\n        // If an object already exists, and new value is of incompatible type, let object handle the update.\n        if( prev && next != null ){\n            if( next instanceof this.type ){\n                // In case if merge option explicitly specified, force merge.\n                if( options.merge ) return next.__inner_state__;\n            }\n            else{\n                return next;\n            }\n        }\n    }\n\n    convert( next : any, prev : any, record : AttributesContainer, options : TransactionOptions ) : Transactional {\n        // Invoke class factory to handle abstract classes\n        if( next == null ) return next;\n        \n        if( next instanceof this.type ){\n            if( next._shared && !( next._shared & ItemsBehavior.persistent ) ) { // TODO: think more about shared types assignment compatibility. \n                this._log( 'error', 'Type-R:InvalidCollection', 'aggregated collection attribute is assigned with shared collection type', next, record );\n            }\n\n            // With explicit 'merge' option we need to clone an object if its previous value was 'null'.\n            // This is an only case we could be here when merge === true.\n            return options.merge ? next.clone() : next;\n        }\n\n        return <any>this.type.create( next, options );\n    }\n\n    dispose ( record : AttributesContainer, value : Transactional ){\n        if( value ){\n            this.handleChange( void 0, value, record, {} );\n        }\n    }\n\n    validate( record : AttributesContainer, value : Transactional ) : ValidationError {\n        var error = value && value.validationError;\n        if( error ) return error;\n    }\n\n    create() : Transactional {\n        return (<any>this.type).create(); // this the subclass of Transactional here.\n    }\n\n    initialize( options ){\n        options.changeHandlers.unshift( this._handleChange );\n    }\n\n    _handleChange( next : Transactional, prev : Transactional, record : AttributesContainer, options : TransactionOptions ){\n        if( prev ){\n            free( record, prev );\n            options.unset || prev.dispose();\n        } \n        \n        if( next && !aquire( record, next, this.name ) ){\n            this._log( 'error', 'Type-R:InvalidOwner', 'aggregated attribute assigned with an object already having an owner', next, record );\n        }\n    }\n}","import { eventsApi } from '../../object-plus';\nimport { ItemsBehavior, Transactional, transactionApi, TransactionOptions } from '../../transactions';\nimport { AnyType } from './any';\nimport { AttributesContainer, ConstructorOptions } from './updates';\n\nconst { on, off } = eventsApi,\n    { free, aquire } = transactionApi;\n\n/************************\n * Shared attribute definition.\n * - Not serialized.\n * - Listening to the changes.\n * - Doesn't take ownership when assigned with object of proper type.\n * - Takes ownership on objects which are converted.\n */\n\nconst shareAndListen = ItemsBehavior.listen | ItemsBehavior.share;\n\n/** @private */\nexport class SharedType extends AnyType {\n    type : typeof Transactional\n\n     doInit( value, record : AttributesContainer, options : ConstructorOptions ){\n        const v = options.clone ? this.clone( value, record ) : (\n            value === void 0 ? this.defaultValue() : value\n        );\n\n        const x = this.transform( v, void 0, record, options );\n        this.handleChange( x, void 0, record, options );\n        return x;\n    }\n\n    doUpdate( value, record, options, nested : any[] ){ // Last to things can be wrapped to an object, either transaction or ad-hoc\n        const key = this.name, { attributes } = record; \n        const prev = attributes[ key ];\n        let update;\n\n        // This can be moved to transactional attribute. And chained with the rest.\n        if( update = this.canBeUpdated( prev, value, options ) ) { // todo - skip empty updates.\n            const nestedTransaction = prev._createTransaction( update, options );\n            if( nestedTransaction ){\n                if( nested ){\n                    nested.push( nestedTransaction );\n                }\n                else{\n                    nestedTransaction.commit( record );\n                }\n\n                if( this.propagateChanges ) return true;\n            }\n\n            return false;\n        }\n\n        const next = this.transform( value, prev, record, options );\n        attributes[ key ] = next;\n\n        if( this.isChanged( next, prev ) ) { // Primitives and nested comparison can be inlined.\n            // Do the rest of the job after assignment\n            this.handleChange( next, prev, record, options );\n\n            return true;\n        }\n\n        return false;\n    }\n\n    clone( value : Transactional, record : AttributesContainer ) : Transactional {\n        // References are not cloned.\n        if( !value || value._owner !== record ) return value;\n\n        // Implicitly created objects are cloned.\n        const clone = value.clone();\n        aquire( record, clone, this.name );\n        return clone;\n    }\n\n    // Do not serialize by default.\n    toJSON(){}\n\n    canBeUpdated( prev : Transactional, next : any, options : TransactionOptions ) : any {\n        // If an object already exists, and new value is of incompatible type, let object handle the update.\n        if( prev && next != null && !( next instanceof this.type ) ){\n            return next;\n        }\n    }\n\n    convert( next : any, prev : any, record : AttributesContainer, options : TransactionOptions ) : Transactional {\n        if( next == null || next instanceof this.type ) return next;\n\n        // Convert type using implicitly created rtransactional object.\n        const implicitObject = new ( this.type as any )( next, options, shareAndListen );\n\n        // To prevent a leak, we need to take an ownership on it.\n        aquire( record, implicitObject, this.name );\n\n        return implicitObject;\n    }\n\n    // Refs are always valid.\n    validate( model, value, name ){}\n\n    // They are always created as null.\n    create() : Transactional {\n        return null;\n    }\n\n    // Listening to the change events\n    _handleChange( next : Transactional, prev : Transactional, record : AttributesContainer, options ){\n        if( prev ){\n            // If there was an implicitly created object, remove an ownership.\n            if( prev._owner === record ){\n                free( record, prev );\n                options.unset || prev.dispose();\n            }\n            else{\n                off( prev, prev._changeEventName, this._onChange, record );\n            }\n        }  \n \n        if( next ){\n            // No need to take an ownership for an implicit object - already done in convert or clone.\n            if( next._owner !== record ){\n                on( next, next._changeEventName, this._onChange, record );\n            }\n        } \n    }\n\n    dispose( record : AttributesContainer, value : Transactional ){\n        if( value ){\n            this.handleChange( void 0, value, record, {} );\n        }\n    }\n\n    _onChange : ( child : Transactional, options : TransactionOptions, initiator : Transactional ) => void \n\n    initialize( options ){\n        // Create change event handler which knows current attribute name. \n        const attribute = this;\n        this._onChange = this.propagateChanges ? function( child, options, initiator ){\n            this === initiator || this.forceAttributeChange( attribute.name, options );\n        } : ignore;\n\n        options.changeHandlers.unshift( this._handleChange );\n    }\n}\n\nfunction ignore(){}","import { IOEndpoint } from '../../io-tools';\nimport { eventsApi, tools as _ } from '../../object-plus';\nimport { CompiledReference } from '../../traversable';\nimport { AnyType } from './any';\nimport { ChainableAttributeSpec } from './attrDef';\nimport { ConstructorsMixin, constructorsMixin } from './updates';\n\nexport * from './any';\nexport * from './attrDef';\nexport * from './basic';\nexport * from './date';\nexport * from './owned';\nexport * from './shared';\nexport * from './updates';\n\nexport interface RecordAttributesMixin extends ConstructorsMixin {\n    // Attributes descriptors\n    _attributes : AttributeDescriptors\n    _attributesArray : AnyType[]\n    \n    // Attribute's property descriptors\n    properties : PropertyDescriptorMap\n\n    // Event map for record's local events.\n    _localEvents? : eventsApi.EventMap,\n\n    _endpoints : { [ name : string ] : IOEndpoint }\n}\n\nexport interface AttributeDescriptors {\n    [ name : string ] : AnyType\n}\n\n// Create record mixin from the given record's attributes definition\nexport default function( attributesDefinition : object, baseClassAttributes : AttributeDescriptors ) : RecordAttributesMixin {\n    const myAttributes = _.transform( {} as AttributeDescriptors, attributesDefinition, createAttribute ),\n          allAttributes = _.defaults( {} as AttributeDescriptors, myAttributes, baseClassAttributes );\n\n    const ConstructorsMixin = constructorsMixin( allAttributes );\n\n    return {\n        ...ConstructorsMixin,\n        _attributes : new ConstructorsMixin.AttributesCopy( allAttributes ),\n        _attributesArray : Object.keys( allAttributes ).map( key => allAttributes[ key ] ),\n        properties : _.transform( <PropertyDescriptorMap>{}, myAttributes, x => x.createPropertyDescriptor() ),\n        ...localEventsMixin( myAttributes ),\n        _endpoints : _.transform( {}, allAttributes, attrDef => attrDef.options.endpoint )\n    }            \n}\n\n// Create attribute from the type spec.\nexport function createAttribute( spec : any, name : string ) : AnyType {\n    return AnyType.create( ChainableAttributeSpec.from( spec ).options, name );\n}\n\nexport function createSharedTypeSpec( Constructor : Function, Attribute : typeof AnyType ){\n    if( !Constructor.hasOwnProperty( 'shared' ) ){\n        Object.defineProperty( Constructor, 'shared', {\n            get(){\n                return new ChainableAttributeSpec({\n                    value : null,\n                    type : Constructor,\n                    _attribute : Attribute\n                });\n            }\n        });\n    }\n}\n\ninterface LocalEventsMixin {\n    _localEvents? : eventsApi.EventMap\n}\n\nfunction localEventsMixin( attrSpecs : AttributeDescriptors ) : LocalEventsMixin {\n    let _localEvents : eventsApi.EventMap;\n\n    for( var key in attrSpecs ){\n        const attribute = attrSpecs[ key ],\n            { _onChange } = attribute.options; \n\n        if( _onChange ){\n            _localEvents || ( _localEvents = new eventsApi.EventMap() );\n\n            _localEvents.addEvent( 'change:' + key,\n                typeof _onChange === 'string' ?\n                    createWatcherFromRef( _onChange, key ) : \n                    wrapWatcher( _onChange, key ) );\n        }\n    }\n\n    return _localEvents ? { _localEvents } : {};\n}\n\nfunction wrapWatcher( watcher, key ){\n    return function( record, value ){\n        watcher.call( record, value, key );\n    } \n}\n\nfunction createWatcherFromRef( ref : string, key : string ){\n    const { local, resolve, tail } = new CompiledReference( ref, true );\n    return local ?\n        function( record, value ){\n            record[ tail ]( value, key );\n        } :\n        function( record, value ){\n            resolve( record )[ tail ]( value, key );\n        }\n}","import { IOEndpoint, IONode, IOOptions, IOPromise, startIO } from '../io-tools';\n\nexport interface IORecord extends IONode {\n    getEndpoint() : IOEndpoint\n    save( options? : IOOptions ) : IOPromise<this>\n    fetch( options? : IOOptions ) : IOPromise<this>\n    destroy( options? : IOOptions ) : IOPromise<this>\n    toJSON( options? : object ) : any\n    isNew() : boolean\n    id : string | number\n    set( json : object, options : object )\n}\n\nexport const IORecordMixin = {\n    save( this : IORecord, options : IOOptions = {} ){\n        const endpoint = this.getEndpoint(),\n              json = this.toJSON( options );\n\n        return startIO(\n            this,\n            this.isNew() ?\n                endpoint.create( json, options, this ) :\n                endpoint.update( this.id, json, options, this ),\n            options,\n\n            update => {\n                this.set( update, { parse : true, ...options } );\n            }\n        );\n    },\n\n    fetch( options : IOOptions = {} ){\n        return startIO(\n            this,\n            this.getEndpoint().read( this.id, options, this ),\n            options,\n\n            json => this.set( json, { parse : true, ...options } )\n        );\n    },\n\n    destroy( options : IOOptions = {} ){  \n        return startIO(\n            this,\n            this.getEndpoint().destroy( this.id, options, this ),\n            options,\n\n            () => {\n                const { collection } = this;\n                if( collection ){\n                    collection.remove( this, options );\n                }\n                else{\n                    this.dispose();\n                }\n\n                return this;\n            }\n        )\n    }\n}","/**\n * Record core implementing transactional updates.\n * The root of all definitions. \n */\n\nimport { Collection } from '../collection';\nimport { IOEndpoint, IOPromise } from '../io-tools';\nimport { define, definitions, isProduction, log, LogLevel, mixinRules, tools } from '../object-plus';\nimport { CloneOptions, Owner, Transaction, Transactional, TransactionalDefinition, TransactionOptions } from '../transactions';\nimport { ChildrenErrors } from '../validation';\nimport { AggregatedType, AnyType, AttributesConstructor, AttributesContainer, AttributesCopyConstructor, AttributesValues, setAttribute, shouldBeAnObject, unknownAttrsWarning, UpdateRecordMixin } from './attributes';\nimport { IORecord, IORecordMixin } from './io-mixin';\n\nconst { assign, isEmpty } = tools;\n\n/*******************************************************\n * Record core implementation\n */\n\nexport interface ConstructorOptions extends TransactionOptions{\n    clone? : boolean\n}\n\n// Client unique id counter\nlet _cidCounter : number = 0;\n\n/***************************************************************\n * Record Definition as accepted by Record.define( definition )\n */\nexport interface RecordDefinition extends TransactionalDefinition {\n    idAttribute? : string\n    attributes? : AttributesValues\n    collection? : object\n    Collection? : typeof Transactional\n}\n\n@define({\n    // Default client id prefix \n    cidPrefix : 'm',\n\n    // Name of the change event\n    _changeEventName : 'change',\n\n    // Default id attribute name\n    idAttribute : 'id'\n})\n@definitions({\n    defaults : mixinRules.merge,\n    attributes : mixinRules.merge,\n    collection : mixinRules.merge,\n    Collection : mixinRules.value,\n    idAttribute : mixinRules.protoValue\n})\nexport class Record extends Transactional implements IORecord, AttributesContainer {\n    // Hack\n    static onDefine( definition, BaseClass ){}\n\n    static Collection : typeof Collection;\n    static DefaultCollection : typeof Collection;\n\n    static from : ( collectionReference : any ) => any;\n    \n    static defaults( attrs : AttributesValues ) : typeof Record {\n        return <any>this.extend({ attributes : attrs });\n    }\n    \n    static attributes : AttributesValues\n\n    /********************\n     * IO Methods\n     */\n     _endpoints : { [ name : string ] : IOEndpoint }\n\n     // Save record\n     save( options? : object ) : IOPromise<this> { throw new Error( 'Implemented by mixin' ); }\n\n     // Destroy record\n     destroy( options? : object ) : IOPromise<this> { throw new Error( 'Implemented by mixin' ); }\n\n    /***********************************\n     * Core Members\n     */\n    // Previous attributes\n    _previousAttributes : {}\n\n    previousAttributes(){ return new this.AttributesCopy( this._previousAttributes ); } \n\n    // Current attributes    \n    attributes : AttributesValues\n\n    // Polymorphic accessor for aggregated attribute's canBeUpdated().\n    get __inner_state__(){ return this.attributes; }\n\n    // Lazily evaluated changed attributes hash\n    _changedAttributes : AttributesValues\n\n    get changed(){\n        let changed = this._changedAttributes;\n\n        if( !changed ){\n            const prev = this._previousAttributes;\n            changed = {};\n\n            const { _attributes, attributes } = this;\n\n            for( let attr of this._attributesArray ){\n                const key = attr.name,\n                    value = attributes[ key ];\n\n                if( attr.isChanged( value, prev[ key ] ) ){\n                    changed[ key ] = value;\n                }\n            }\n\n            this._changedAttributes = changed;\n        }\n\n        return changed;    \n    }\n\n    changedAttributes( diff? : {} ) : boolean | {} {\n        if( !diff ) return this.hasChanged() ? assign( {}, this.changed ) : false;\n\n        var val, changed : {} | boolean = false,\n            old          = this._transaction ? this._previousAttributes : this.attributes,\n            attrSpecs    = this._attributes;\n\n        for( var attr in diff ){\n            if( !attrSpecs[ attr ].isChanged( old[ attr ], ( val = diff[ attr ] ) ) ) continue;\n            (changed || (changed = {}))[ attr ] = val;\n        }\n\n        return changed;        \n    }\n\n    hasChanged( key? : string ) : boolean {\n        const { _previousAttributes } = this;\n        if( !_previousAttributes ) return false;\n\n        return key ?\n                this._attributes[ key ].isChanged( this.attributes[ key ], _previousAttributes[ key ] ) :\n                !isEmpty( this.changed );\n    }\n\n    previous( key : string ) : any {\n        if( key ){\n            const { _previousAttributes } = this;\n            if( _previousAttributes ) return _previousAttributes[ key ];\n        }\n        \n        return null;\n    }\n\n    isNew() : boolean {\n        return this.id == null;\n    }\n\n    has( key : string ) : boolean {\n        return this[ key ] != void 0;\n    }\n\n    // Return attribute value, setting an attribute to undefined.\n    // TODO: If attribute was aggregated, don't dispose it.\n    unset( key : string, options? ) : any {\n        const value = this[ key ];\n        this.set({ [ key ] : void 0 }, { unset : true, ...options });\n        return value;\n    }\n\n    // Undocumented. Move to NestedTypes?\n    clear( options? ) : this {\n        const nullify = options && options.nullify;\n\n        this.transaction( () =>{\n            this.forEachAttr( this.attributes, ( value, key ) => this[ key ] = nullify ? null : void 0 );\n        }, options );\n\n        return this;\n    }\n\n    // Returns Record owner skipping collections. TODO: Move out\n    getOwner() : Owner {\n        const owner : any = this._owner;\n\n        // If there are no key, owner must be transactional object, and it's the collection.\n        // We don't expect that collection can be the member of collection, so we're skipping just one level up. An optimization.\n        return this._ownerKey ? owner : owner && owner._owner;\n    }\n\n    /***********************************\n     * Identity managements\n     */\n\n    // Id attribute name ('id' by default)\n    idAttribute : string;\n\n    // Fixed 'id' property pointing to id attribute\n    get id() : string | number { return this.attributes[ this.idAttribute ]; }\n    set id( x : string | number ){ setAttribute( this, this.idAttribute, x ); }\n\n    /***********************************\n     * Dynamically compiled stuff\n     */\n\n    // Attributes specifications \n    _attributes : { [ key : string ] : AnyType }\n    _attributesArray : AnyType[]\n\n    // Attributes object copy constructor\n    Attributes : AttributesConstructor\n    AttributesCopy : AttributesCopyConstructor\n\n    // forEach function for traversing through attributes, with protective default implementation\n    // Overriden by dynamically compiled loop unrolled function in define.ts\n    forEachAttr( attrs : {}, iteratee : ( value : any, key? : string, spec? : AnyType ) => void ) : void {\n        const { _attributes } = this;\n        let unknown : string[];\n\n        for( let name in attrs ){\n            const spec = _attributes[ name ];\n\n            if( spec ){\n                iteratee( attrs[ name ], name, spec );\n            }\n            else{\n                unknown || ( unknown = [] );\n                unknown.push( `'${ name }'` );\n            }\n        }\n\n        if( unknown ){\n            unknownAttrsWarning( this, unknown, { attributes : attrs } );\n        }\n    }\n\n    each( iteratee : ( value? : any, key? : string ) => void, context? : any ){\n        const fun = context !== void 0 ? ( v, k ) => iteratee.call( context, v, k ) : iteratee,\n            { attributes } = this;\n\n        for( const key in this.attributes ){\n            const value = attributes[ key ];\n            if( value !== void 0 ) fun( value, key );\n        }\n    }\n\n    // Get array of attribute keys (Record) or record ids (Collection) \n    keys() : string[] {\n        const keys : string[] = [];\n\n        this.each( ( value, key ) => value === void 0 || keys.push( key ) );\n\n        return keys;\n    }\n\n    // Get array of attribute values (Record) or records (Collection)\n    values() : any[] {\n        return this.map( value => value );\n    }\n\n    // Create record default values, optionally augmenting given values.\n    defaults( values = {} ){\n        const defaults = {},\n            { _attributesArray } = this;\n\n        for( let attr of _attributesArray ){\n            const key = attr.name,\n            value = values[ key ];\n\n            defaults[ key ] = value === void 0 ? attr.defaultValue() : value;\n        }\n\n        return defaults;\n    }\n\n    /***************************************************\n     * Record construction\n     */\n    // Create record, optionally setting an owner\n    constructor( a_values? : {}, a_options? : ConstructorOptions ){\n        super( _cidCounter++ );\n        this.attributes = {};\n        \n        const options = a_options || {},\n              values = ( options.parse ? this.parse( a_values, options ) :  a_values ) || {};\n\n        isProduction || typeCheck( this, values );\n\n        this._previousAttributes = this.attributes = new this.Attributes( this, values, options );\n\n        this.initialize( a_values, a_options );\n\n        if( this._localEvents ) this._localEvents.subscribe( this, this );\n    }\n\n    // Initialization callback, to be overriden by the subclasses \n    initialize( values?, options? ){}\n\n    // Deeply clone record, optionally setting new owner.\n    clone( options : CloneOptions = {} ) : this {\n        const copy : this = new (<any>this.constructor)( this.attributes, { clone : true } );\n        \n        if( options.pinStore ) copy._defaultStore = this.getStore();\n\n        return copy;\n    }\n\n    // Deprecated, every clone is the deep one now.\n    deepClone() : this { return this.clone() };\n\n    // Validate attributes.\n    _validateNested( errors : ChildrenErrors ) : number {\n        var length    = 0;\n\n        this.forEachAttr( this.attributes, ( value, name, attribute ) => {\n            const error = attribute.validate( this, value, name );\n\n            if( error ){\n                errors[ name ] = error;\n                length++;\n            }\n        } );\n\n        return length;\n    }\n\n    // Get attribute by key\n    get( key : string ) : any {\n        return this[ key ];\n    }\n\n    /**\n     * Serialization control\n     */\n\n    // Default record-level serializer, to be overriden by subclasses \n    toJSON( options? : object ) : any {\n        const json = {};\n\n        this.forEachAttr( this.attributes, ( value, key : string, { toJSON } ) =>{\n            // If attribute serialization is not disabled, and its value is not undefined...\n            if( value !== void 0 ){\n                // ...serialize it according to its spec.\n                const asJson = toJSON.call( this, value, key, options );\n\n                // ...skipping undefined values. Such an attributes are excluded.\n                if( asJson !== void 0 ) json[ key ] = asJson; \n            }\n        });\n\n        return json;\n    }\n    \n    // Default record-level parser, to be overriden by the subclasses.\n    parse( data, options? : TransactionOptions ){\n        return data;\n    }\n\n    // DEPRECATED: Attributes-level parse. Is moved to attribute descriptors.\n    _parse( data ){ return data; }\n\n    /**\n     * Transactional control\n     */\n\n    deepSet( name : string, value : any, options? ){\n        // Operation might involve series of nested object updates, thus it's wrapped in transaction.\n        this.transaction( () => {\n            const path  = name.split( '.' ),\n                l     = path.length - 1,\n                attr  = path[ l ];\n\n            let model = this;\n\n            // Locate the model, traversing the path.\n            for( let i = 0; i < l; i++ ){\n                const key = path[ i ];\n\n                // There might be collections in path, so use `get`.\n                let next    = model.get ? model.get( key ) : model[ key ];\n\n                // Create models, if they are not exist.\n                if( !next ){\n                    const attrSpecs = model._attributes;\n                    if( attrSpecs ){\n                        // If current object is model, create default attribute\n                        var newModel = attrSpecs[ key ].create();\n\n                        // If created object is model, nullify attributes when requested\n                        if( options && options.nullify && newModel._attributes ){\n                            newModel.clear( options );\n                        }\n\n                        model[ key ] = next = newModel;\n                    }\n                    // Silently fail in other case.\n                    else return;\n                }\n                \n                model = next;\n            }\n\n            // Set model attribute.\n            if( model.set ){\n                model.set({ [ attr ] : value }, options );\n            }\n            else{\n                model[ attr ] = value;\n            }\n        });\n\n        return this;\n    }\n            \n    // Returns owner without the key (usually it's collection)\n    get collection() : any {\n        return this._ownerKey ? null : this._owner;\n    }\n\n    // Dispose object and all childrens\n    dispose(){\n        if( this._disposed ) return;\n        \n        this.forEachAttr( this.attributes, ( value, key, attribute ) => {\n            attribute.dispose( this, value );\n        });\n\n        super.dispose();\n    }\n\n    _log( level : LogLevel, topic: string, text : string, props : object ) : void {\n        log( level, topic, text, {\n            ...props,\n            'Record' : this,\n            'Attributes definition:' : this._attributes\n        });\n    }\n\n    getClassName() : string {\n        return super.getClassName() || 'Record';\n    }\n\n    // Dummies to \n    _createTransaction( values : object, options : TransactionOptions ) : Transaction { return void 0; }\n    // Simulate attribute change \n    forceAttributeChange : ( key : string, options : TransactionOptions ) => void\n    _onChildrenChange : ( child : Transactional, options : TransactionOptions ) => void\n};\n\nassign( Record.prototype, UpdateRecordMixin, IORecordMixin );\n\n/***********************************************\n * Helper functions\n */\n\nclass BaseRecordAttributes {\n    id : string | number\n\n    constructor( record : Record, x : AttributesValues, options : TransactionOptions ) {\n        this.id = x.id;\n    }\n}\n\nRecord.prototype.Attributes = BaseRecordAttributes;\n\nclass BaseRecordAttributesCopy {\n    id : string | number\n\n    constructor( x : AttributesValues ) {\n        this.id = x.id;\n    }\n}\n\nRecord.prototype.AttributesCopy = BaseRecordAttributesCopy;\n\nconst IdAttribute = AnyType.create({ value : void 0 }, 'id' );\nRecord.prototype._attributes = { id : IdAttribute };\nRecord.prototype._attributesArray = [ IdAttribute ];\nRecord._attribute = AggregatedType;\n\n\nfunction typeCheck( record : Record, values : object ){\n    if( shouldBeAnObject( record, values ) ){\n        const { _attributes } = record;\n        let unknown : string[];\n\n        for( let name in values ){\n            if( !_attributes[ name ] ){\n                unknown || ( unknown = [] );\n                unknown.push( `'${ name }'` );\n            }\n        }\n\n        if( unknown ){\n            unknownAttrsWarning( record, unknown, { values } );\n        }\n    }\n}","import { predefine, tools } from '../object-plus';\nimport { Transactional } from '../transactions';\nimport compile, { AggregatedType, ChainableAttributeSpec, createSharedTypeSpec, SharedType, type } from './attributes';\nimport { Record, RecordDefinition } from './record';\n\n\nexport * from './attributes';\nexport { Record };\n\nconst { assign, defaults, omit, getBaseClass } = tools;\n\nRecord.onExtend = function( this : typeof Record, BaseClass : typeof Record ){\n    Transactional.onExtend.call( this, BaseClass );\n\n    // Create the default collection\n    const Class = this;\n\n    @predefine class DefaultCollection extends BaseClass.Collection<any> {\n        static model = Class;\n    }\n\n    this.DefaultCollection = DefaultCollection;\n\n    // If there are no collection defined in statics, use the default collection.\n    // It will appear in onDefine's definition, overriding all other settings.\n    if( Class.Collection === BaseClass.Collection ){\n        this.Collection = DefaultCollection;\n    }\n\n    // Create Class.shared modifier\n    createSharedTypeSpec( this, SharedType );\n}\n\nRecord.onDefine = function( definition : RecordDefinition, BaseClass : typeof Record ){\n    const baseProto : Record = BaseClass.prototype;\n\n    // Compile attributes spec, creating definition mixin.\n    const { properties, _localEvents, ...dynamicMixin } = compile( this.attributes = getAttributes( definition ), baseProto._attributes );\n    assign( this.prototype, dynamicMixin );\n    \n    definition.properties = defaults( definition.properties || {}, properties );\n    definition._localEvents = _localEvents;\n    \n    Transactional.onDefine.call( this, definition, BaseClass );\n\n    // Finalize the definition of the default collection.\n    this.DefaultCollection.define( definition.collection || {} );\n\n    // assign collection from the definition.\n    this.Collection = definition.Collection;\n    this.Collection.prototype.model = this;\n\n    if( definition.endpoint ) this.Collection.prototype._endpoint = definition.endpoint;    \n}\n\nRecord._attribute = AggregatedType;\ncreateSharedTypeSpec( Record, SharedType );\n\nfunction getAttributes({ defaults, attributes, idAttribute } : RecordDefinition ) {\n    const definition = attributes || defaults || {};\n    \n    // If there is an undeclared idAttribute, add its definition as untyped generic attribute.\n    if( idAttribute && !( idAttribute in definition ) ){\n        definition[ idAttribute ] = void 0;\n    }\n\n    return definition;\n}\n\ndeclare var Reflect;\n\nexport function attr( proto : object, attrName : string ) : void;\nexport function attr( spec : any ) : PropertyDecorator;\nexport function attr( proto, attrName? : string ) : any {\n    if( attrName ){\n        // Called without the spec. Extract the type.\n        if( typeof Reflect !== 'undefined' && Reflect.getMetadata ){\n            type( Reflect.getMetadata( \"design:type\", proto, attrName ) ).asProp( proto, attrName );\n        }\n        else{\n            proto._log( 'error', 'Type-R:MissingImport', 'Add import \"reflect-metadata\"; as the first line of your app.' );\n        }\n    }\n    else{\n        return ChainableAttributeSpec.from( proto ).asProp;\n    }\n}\n\nexport function prop( spec ) : any {\n    return spec.asProp;\n}","import { eventsApi } from '../object-plus';\nimport { Record } from '../record';\nimport { ItemsBehavior, Owner, Transaction, Transactional, transactionApi, TransactionOptions } from '../transactions';\n\n\nconst { trigger2, trigger3, on, off } = eventsApi,\n      { commit } = transactionApi,\n      _aquire = transactionApi.aquire, _free = transactionApi.free;\n\n/** @private */\nexport interface CollectionCore extends Transactional, Owner {\n    _byId : IdIndex\n    models : Record[]\n    model : typeof Record\n    idAttribute : string // TODO: Refactor inconsistent idAttribute usage\n    _comparator : Comparator\n    get( objOrId : string | Record | Object ) : Record    \n    _itemEvents? : eventsApi.EventMap\n    _shared : number\n    _aggregationError : Record[]\n\n    _log( level : string, topic : string, text : string, value : any ) : void\n}\n\n// Collection's manipulation methods elements\nexport type Elements = ( Object | Record )[];\n\nexport interface CollectionOptions extends TransactionOptions {\n    sort? : boolean\n}\n\nexport type Comparator = ( a : Record, b : Record ) => number;  \n\n/** @private */\nexport function dispose( collection : CollectionCore ) : Record[]{\n    const { models } = collection;\n\n    collection.models = [];\n    collection._byId  = {};\n\n    freeAll( collection, models );\n    return models;\n}\n\n/** @private */\nexport function convertAndAquire( collection : CollectionCore, attrs : {} | Record, options : CollectionOptions ){\n    const { model } = collection;\n    \n    let record : Record;\n\n    if( collection._shared ){\n        record = attrs instanceof model ? attrs : <Record>model.create( attrs, options );\n\n        if( collection._shared & ItemsBehavior.listen ){\n            on( record, record._changeEventName, collection._onChildrenChange, collection );\n        }\n    }\n    else{\n        record = attrs instanceof model ? ( options.merge ? attrs.clone() : attrs ) : <Record>model.create( attrs, options );\n\n        if( !_aquire( collection, record ) ){\n            const errors = collection._aggregationError || ( collection._aggregationError = [] );\n            errors.push( record );\n        }\n    }    \n\n    // Subscribe for events...\n    const { _itemEvents } = collection;\n    _itemEvents && _itemEvents.subscribe( collection, record );\n\n    return record;\n}\n\n/** @private */\nexport function free( owner : CollectionCore, child : Record, unset? : boolean ) : void {\n    if( owner._shared ){\n        if( owner._shared & ItemsBehavior.listen ){\n            off( child, child._changeEventName, owner._onChildrenChange, owner );\n        }\n    }\n    else{\n        _free( owner, child );\n        unset || child.dispose();\n    }\n\n    const { _itemEvents } = owner;\n    _itemEvents && _itemEvents.unsubscribe( owner, child );\n}\n\n/** @private */\nexport function freeAll( collection : CollectionCore, children : Record[] ) : Record[] {\n    for( let child of children ){\n        free( collection, child );\n    }\n\n    return children;\n}\n\n/**\n * Silently sort collection, if its required. Returns true if sort happened.\n * @private\n */   \nexport function sortElements( collection : CollectionCore, options : CollectionOptions ) : boolean {\n    let { _comparator } = collection;\n    if( _comparator && options.sort !== false ){\n        collection.models.sort( _comparator );\n        return true;\n    }\n\n    return false;\n}\n\n/**********************************\n * Collection Index\n * @private \n */\nexport interface IdIndex {\n    [ id : string ] : Record\n}\n\n/** @private Add record */ \nexport function addIndex( index : IdIndex, model : Record ) : void {\n    index[ model.cid ] = model;\n    var id             = model.id;\n    \n    if( id || id === 0 ){\n        index[ id ] = model;\n    }\n}\n\n/** @private Remove record */ \nexport function removeIndex( index : IdIndex, model : Record ) : void {\n    delete index[ model.cid ];\n    var id = model.id;\n    if( id || id === 0 ){\n        delete index[ id ];\n    }\n}\n\nexport function updateIndex( index : IdIndex, model : Record ){\n    delete index[ model.previous( model.idAttribute ) ];\n\n    const { id } = model;\n    id == null || ( index[ id ] = model );\n}\n\n/***\n * In Collections, transactions appears only when\n * add remove or change events might be emitted.\n * reset doesn't require transaction.\n * \n * Transaction holds information regarding events, and knows how to emit them.\n * \n * Two major optimization cases.\n * 1) Population of an empty collection\n * 2) Update of the collection (no or little changes) - it's crucial to reject empty transactions.\n */\n\n\n// Transaction class. Implements two-phase transactions on object's tree.\n/** @private */ \nexport class CollectionTransaction implements Transaction {\n    // open transaction\n    constructor(    public object : CollectionCore,\n                    public isRoot : boolean,\n                    public added : Record[],\n                    public removed : Record[],\n                    public nested : Transaction[],\n                    public sorted : boolean ){}\n\n    // commit transaction\n    commit( initiator? : Transactional ){\n        const { nested, object } = this,\n              { _isDirty } = object;\n\n        // Commit all nested transactions...\n        for( let transaction of nested ){\n            transaction.commit( object );\n        }\n\n        if( object._aggregationError ){\n            logAggregationError( object );\n        }\n\n        // Just trigger 'change' on collection, it must be already triggered for models during nested commits.\n        // ??? TODO: do it in nested transactions loop? This way appears to be more correct. \n        for( let transaction of nested ){\n            trigger2( object, 'change', transaction.object, _isDirty );\n        }\n\n        // Notify listeners on attribute changes...\n        const { added, removed } = this;\n\n        // Trigger `add` events for both model and collection.\n        for( let record of added ){\n            trigger3( record, 'add', record, object, _isDirty );\n            trigger3( object, 'add', record, object, _isDirty );\n        }\n\n        // Trigger `remove` events for both model and collection.\n        for( let record of removed ){\n            trigger3( record, 'remove', record, object, _isDirty );\n            trigger3( object, 'remove', record, object, _isDirty );\n        }\n\n        if( this.sorted ){\n            trigger2( object, 'sort', object, _isDirty );\n        }\n\n        if( added.length || removed.length ){\n            trigger2( object, 'update', object, _isDirty );\n        }\n\n        this.isRoot && commit( object, initiator );\n    }\n}\n\nexport function logAggregationError( collection : CollectionCore ){\n    collection._log( 'error', 'Type-R:InvalidOwner', 'added records already have an owner', collection._aggregationError );\n    collection._aggregationError = void 0;\n}","import { Record } from '../record';\nimport { Transaction, transactionApi } from '../transactions';\nimport { addIndex, CollectionCore, CollectionOptions, CollectionTransaction, convertAndAquire, logAggregationError, sortElements, updateIndex } from './commons';\n\nconst { begin, commit, markAsDirty } = transactionApi;\n\nexport interface AddOptions extends CollectionOptions {\n    at? : number \n}\n\n/** @private */\nexport function addTransaction( collection : CollectionCore, items : any[], options : AddOptions, merge? : boolean ){\n    const isRoot = begin( collection ),\n          nested : Transaction[]= [];\n\n    var added = appendElements( collection, items, nested, options, merge );\n\n    if( added.length || nested.length ){\n        let needSort = sortOrMoveElements( collection, added, options );\n        if( markAsDirty( collection, options ) ){\n            return new CollectionTransaction( collection, isRoot, added, [], nested, needSort );\n        }\n\n        if( collection._aggregationError ) logAggregationError( collection );\n    }\n\n    // No changes...\n    isRoot && commit( collection );\n};\n\n// Handle sort or insert at options for add operation. Reurns true if sort happened.\n/** @private */ \nfunction sortOrMoveElements( collection : CollectionCore, added : Record[], options : AddOptions ) : boolean {\n    let at = options.at;\n\n    // if `at` option is given, it overrides sorting option...\n    if( at != null ){\n        // Take an original collection's length. \n        const length = collection.models.length - added.length;\n\n        // Crazy Backbone rules about `at` index. I don't know what that guys smoke.\n        at = Number( at );\n        if( at < 0 ) at += length + 1;\n        if( at < 0 ) at = 0;\n        if( at > length ) at = length;\n\n        // Move added elements to desired position. In place.\n        moveElements( collection.models, at, added );\n        return false;\n    }\n\n    return sortElements( collection, options );\n}\n\n/** @private */\nfunction moveElements( source : any[], at : number, added : any[] ) : void {\n    for( var j = source.length - 1, i = j - added.length; i >= at; i--, j-- ){\n        source[ j ] = source[ i ];\n    }\n\n    for( i = 0, j = at; i < added.length; i++, j++ ){\n        source[ j ] = added[ i ];\n    }\n}\n\n// append data to model and index\n/** @private */\nfunction appendElements( collection : CollectionCore, a_items : any[], nested : Transaction[], a_options : AddOptions, forceMerge : boolean ){\n    var { _byId, models } = collection,\n        merge       = ( forceMerge || a_options.merge ) && !collection._shared,\n        parse       = a_options.parse,\n        idAttribute = collection.model.prototype.idAttribute,\n        prevLength = models.length;\n\n    for( const item of a_items ){\n        let model = item ? _byId[ item[ idAttribute ] ] || _byId[ item.cid ] : null;\n\n        if( model ){\n            if( merge && item !== model ){\n                var attrs = item.attributes || item;\n                const transaction = model._createTransaction( attrs, a_options );\n                transaction && nested.push( transaction );\n\n                if( model.hasChanged( idAttribute ) ){\n                    updateIndex( _byId, model );\n                }\n            }\n        }\n        else{\n            model = convertAndAquire( collection, item, a_options );\n            models.push( model );\n            addIndex( _byId, model );\n        }\n    }\n\n    return models.slice( prevLength );\n}\n","/*************\n * Remove items from collections.\n * \n * Cannot be a part of two-phase transaction on object tree.\n * Can be executed in the scope of ad-hoc transaction or from the trigger, though.\n *\n * Implemented with low-level API. \n * Most frequent operation - single element remove. Thus, it have the fast-path.\n */\n\nimport { eventsApi } from '../object-plus';\nimport { Record } from '../record';\nimport { transactionApi, TransactionOptions } from '../transactions';\nimport { CollectionCore, CollectionTransaction, free, removeIndex } from './commons';\n\nconst { trigger2, trigger3 } = eventsApi,\n    { markAsDirty, begin, commit } = transactionApi;\n\n/** @private */\nexport function removeOne( collection : CollectionCore, el : Record | {} | string, options : TransactionOptions ) : Record {\n    var model : Record = collection.get( el );\n\n    if( model ){\n        const isRoot = begin( collection ),\n              models = collection.models;\n\n        // Remove model form the collection. \n        models.splice( models.indexOf( model ), 1 );\n        removeIndex( collection._byId, model );\n        \n        // Mark transaction as dirty. \n        const notify = markAsDirty( collection, options );\n\n        // Send out events.\n        if( notify ){\n            trigger3( model, 'remove', model, collection, options );\n            trigger3( collection, 'remove', model, collection, options );\n        } \n\n        free( collection, model, options.unset );\n\n        notify && trigger2( collection, 'update', collection, options );\n\n        // Commit transaction.\n        isRoot && commit( collection );\n\n        return model;\n    }\n};\n\n/** Optimized for removing many elements\n * 1. Remove elements from the index, checking for duplicates\n * 2. Create new models array matching index\n * 3. Send notifications and remove references\n */\n\n/** @private */\nexport function removeMany( collection : CollectionCore, toRemove : any[], options ){\n    const removed = _removeFromIndex( collection, toRemove, options.unset );\n    if( removed.length ){\n        const isRoot = begin( collection );\n\n        _reallocate( collection, removed.length );\n\n        if( markAsDirty( collection, options ) ){\n            const transaction = new CollectionTransaction( collection, isRoot, [], removed, [], false );\n            transaction.commit();\n        }\n        else{\n            // Commit transaction.\n            isRoot && commit( collection );\n        }\n    }\n\n    return removed;\n};\n\n// remove models from the index...\n/** @private */\nfunction _removeFromIndex( collection, toRemove, unset : boolean ){\n    var removed = Array( toRemove.length ),\n        _byId   = collection._byId;\n\n    for( var i = 0, j = 0; i < toRemove.length; i++ ){\n        var model = collection.get( toRemove[ i ] );\n        if( model ){\n            removed[ j++ ] = model;\n            removeIndex( _byId, model );\n            free( collection, model, unset );\n        }\n    }\n\n    removed.length = j;\n\n    return removed;\n}\n\n// Allocate new models array removing models not present in the index.\n/** @private */\nfunction _reallocate( collection, removed ){\n    var prev   = collection.models,\n        models = collection.models = Array( prev.length - removed ),\n        _byId = collection._byId;\n\n    for( var i = 0, j = 0; i < prev.length; i++ ){\n        var model = prev[ i ];\n\n        if( _byId[ model.cid ] ){\n            models[ j++ ] = model;\n        }\n    }\n\n    models.length = j;\n}","import { Record } from '../record';\nimport { Transaction, transactionApi } from '../transactions';\nimport { addIndex, CollectionCore, CollectionOptions, CollectionTransaction, convertAndAquire, Elements, free, freeAll, IdIndex, logAggregationError, sortElements } from './commons';\n\nconst { begin, commit, markAsDirty } = transactionApi;\n\n/** @private */\nconst silentOptions = { silent : true };\n\n/** @private */\nexport function emptySetTransaction( collection : CollectionCore, items : Elements, options : CollectionOptions, silent? : boolean ){\n    const isRoot = begin( collection );\n\n    const added = _reallocateEmpty( collection, items, options );\n\n    if( added.length ){\n        const needSort = sortElements( collection, options );\n\n        if( markAsDirty( collection, silent ? silentOptions : options ) ){\n            // 'added' is the reference to this.models. Need to copy it.\n            return new CollectionTransaction( collection, isRoot, added.slice(), [], [], needSort );\n        }\n\n        if( collection._aggregationError ) logAggregationError( collection );\n    }\n\n    // No changes...\n    isRoot && commit( collection );\n};\n\n/** @private */\nexport function setTransaction( collection, items, options ){\n    const isRoot = begin( collection ),\n          nested = [];\n\n    var previous = collection.models,\n        added    = _reallocate( collection, items, nested, options );\n\n    const reusedCount = collection.models.length - added.length,\n          removed = reusedCount < previous.length ? (\n                        reusedCount ? _garbageCollect( collection, previous ) :\n                                        freeAll( collection, previous )\n                    ) : [];                    \n    \n    const addedOrChanged = nested.length || added.length,\n          // As we are reallocating models array, it needs to be sorted even if there are no changes.\n          sorted = ( sortElements( collection, options ) && addedOrChanged ) || added.length || options.sorted;\n\n    if( addedOrChanged || removed.length || sorted ){\n        if( markAsDirty( collection, options ) ){ \n            return new CollectionTransaction( collection, isRoot, added, removed, nested, sorted );\n        }\n\n        if( collection._aggregationError ) logAggregationError( collection );\n    }\n\n    isRoot && commit( collection );\n};\n\n// Remove references to all previous elements, which are not present in collection.\n// Returns an array with removed elements.\n/** @private */\nfunction _garbageCollect( collection : CollectionCore, previous : Record[] ) : Record[]{\n    const { _byId }  = collection,\n          removed = [];\n\n    // Filter out removed models and remove them from the index...\n    for( let record of previous ){\n        if( !_byId[ record.cid ] ){\n            removed.push( record );\n            free( collection, record );\n        }\n    }\n\n    return removed;\n}\n\n// reallocate model and index\n/** @private */\nfunction _reallocate( collection : CollectionCore, source : any[], nested : Transaction[], options ){\n    var models      = Array( source.length ),\n        _byId : IdIndex = {},\n        merge       = ( options.merge == null ? true : options.merge ) && !collection._shared,\n        _prevById   = collection._byId,\n        prevModels  = collection.models, \n        idAttribute = collection.model.prototype.idAttribute,\n        toAdd       = [],\n        orderKept   = true;\n\n    // for each item in source set...\n    for( var i = 0, j = 0; i < source.length; i++ ){\n        var item  = source[ i ],\n            model : Record = null;\n\n        if( item ){\n            var id  = item[ idAttribute ],\n                cid = item.cid;\n\n            if( _byId[ id ] || _byId[ cid ] ) continue;\n\n            model = _prevById[ id ] || _prevById[ cid ];\n        }\n\n        if( model ){\n            if( merge && item !== model ){\n                if( orderKept && prevModels[ j ] !== model ) orderKept = false;\n\n                var attrs = item.attributes || item;\n                const transaction = model._createTransaction( attrs, options );\n                transaction && nested.push( transaction );\n            }\n        }\n        else{\n            model = convertAndAquire( collection, item, options );\n            toAdd.push( model );\n        }\n\n        models[ j++ ] = model;\n        addIndex( _byId, model );\n    }\n\n    models.length = j;\n    collection.models   = models;\n    collection._byId    = _byId;\n\n    if( !orderKept ) options.sorted = true;\n\n    return toAdd;\n}\n\n/** @private */\nfunction _reallocateEmpty( self, source, options ){\n    var len         = source ? source.length : 0,\n        models      = Array( len ),\n        _byId : IdIndex = {},\n        idAttribute = self.model.prototype.idAttribute;\n\n    for( var i = 0, j = 0; i < len; i++ ){\n        var src = source[ i ];\n\n        if( src && ( _byId[ src[ idAttribute ] ] || _byId[ src.cid ] ) ){\n            continue;\n        }\n\n        var model = convertAndAquire( self, src, options );\n        models[ j++ ] = model;\n        addIndex( _byId, model );\n    }\n\n    models.length = j;\n    self._byId    = _byId;\n\n    return self.models = models;\n}","import { IOPromise, startIO } from '../io-tools';\nimport { define, definitions, EventMap, eventsApi, EventsDefinition, log, LogLevel, Mixable, mixinRules, tools } from '../object-plus';\nimport { AggregatedType, createSharedTypeSpec, Record, SharedType } from '../record';\nimport { CloneOptions, ItemsBehavior, Transactional, TransactionalDefinition, transactionApi, TransactionOptions } from '../transactions';\nimport { AddOptions, addTransaction } from './add';\nimport { CollectionCore, CollectionTransaction, Elements, free, sortElements, updateIndex } from './commons';\nimport { removeMany, removeOne } from './remove';\nimport { emptySetTransaction, setTransaction } from './set';\n\n\nconst { trigger2 } = eventsApi,\n    { begin, commit, markAsDirty } = transactionApi,\n    { assign, defaults } = tools;\n\nlet _count = 0;\n\nexport type GenericComparator = string | ( ( x : Record ) => number ) | ( ( a : Record, b : Record ) => number ); \n\nexport interface CollectionOptions extends TransactionOptions {\n    comparator? : GenericComparator\n    model? : typeof Record\n}\n\nexport type Predicate<R> = ( val : R, key : number ) => boolean | object;\n\nexport interface CollectionDefinition extends TransactionalDefinition {\n    model? : typeof Record,\n    itemEvents? : EventsDefinition\n    _itemEvents? : EventMap\n}\n\nconst slice = Array.prototype.slice;\n\nclass CollectionRefsType extends SharedType {\n    static defaultValue = [];\n}\n\n@define({\n    // Default client id prefix \n    cidPrefix : 'c',\n    model : Record,\n    _changeEventName : 'changes',\n    _aggregationError : null\n})\n@definitions({\n    comparator : mixinRules.value,\n    model : mixinRules.protoValue,\n    itemEvents : mixinRules.merge\n})\nexport class Collection< R extends Record = Record> extends Transactional implements CollectionCore {\n    _shared : number\n    _aggregationError : R[]\n\n    static Subset : typeof Collection\n    static Refs : typeof Collection\n    static _SubsetOf : typeof Collection\n    \n    createSubset( models : ElementsArg, options ){\n        const SubsetOf = (<any>this.constructor).subsetOf( this ).options.type,\n            subset   = new SubsetOf( models, options );\n            \n        subset.resolve( this );\n        return subset;\n    }\n\n    static onExtend( BaseClass : typeof Transactional ){\n        // Cached subset collection must not be inherited.\n        const Ctor = this;\n        this._SubsetOf = null;\n\n        function RefsCollection( a, b, listen? ){\n            Ctor.call( this, a, b, ItemsBehavior.share | ( listen ? ItemsBehavior.listen : 0 ) );\n        }\n\n        Mixable.mixins.populate( RefsCollection );\n        \n        RefsCollection.prototype = this.prototype;\n        RefsCollection._attribute = CollectionRefsType;\n\n        this.Refs = this.Subset = <any>RefsCollection;\n\n        Transactional.onExtend.call( this, BaseClass );\n        createSharedTypeSpec( this, SharedType );\n    }\n    \n    static onDefine( definition : CollectionDefinition, BaseClass : any ){\n        if( definition.itemEvents ){\n            const eventsMap = new EventMap( BaseClass.prototype._itemEvents );\n            eventsMap.addEventsMap( definition.itemEvents );\n            this.prototype._itemEvents = eventsMap;\n        }\n\n        if( definition.comparator !== void 0 ) this.prototype.comparator = definition.comparator;\n\n        Transactional.onDefine.call( this, definition );\n    }\n\n    static subsetOf : ( collectionReference : any ) => any;\n    \n    _itemEvents : EventMap\n\n    /***********************************\n     * Core Members\n     */\n    // Array of the records\n    models : R[]\n\n    // Polymorphic accessor for aggregated attribute's canBeUpdated().\n    get __inner_state__(){ return this.models; }\n\n    // Index by id and cid\n    _byId : { [ id : string ] : R }\n\n    set comparator( x : GenericComparator ){\n\n        switch( typeof x ){\n            case 'string' :\n                this._comparator = ( a, b ) => {\n                    const aa = a[ <string>x ], bb = b[ <string>x ];\n                    if( aa === bb ) return 0;\n                    return aa < bb ? -1 : + 1;\n                } \n                break;\n            case 'function' :\n                if( x.length === 1 ){\n                    this._comparator = ( a, b ) => {\n                        const aa = (<any>x).call( this, a ), bb = (<any>x).call( this, b );\n                        if( aa === bb ) return 0;\n                        return aa < bb ? -1 : + 1;\n                    }\n                }\n                else{\n                    this._comparator = ( a, b ) => (<any>x).call( this, a, b );\n                }\n                break;\n                \n            default :\n                this._comparator = null;\n        }\n    }\n    \n    // TODO: Improve typing\n    getStore() : Transactional {\n        return this._store || ( this._store = this._owner ? this._owner.getStore() : this._defaultStore );\n    }\n\n    _store : Transactional\n\n    get comparator(){ return this._comparator; }\n    _comparator : ( a : R, b : R ) => number\n\n    _onChildrenChange( record : R, options : TransactionOptions = {}, initiator? : Transactional ){\n        // Ignore updates from nested transactions.\n        if( initiator === this ) return;\n\n        const { idAttribute } = this;\n\n        if( record.hasChanged( idAttribute ) ){\n            updateIndex( this._byId, record );\n        }\n\n        const isRoot = begin( this );\n\n        if( markAsDirty( this, options ) ){\n            // Forward change event from the record.\n            trigger2( this, 'change', record, options )\n        }\n\n        isRoot && commit( this );\n    }\n\n    get( objOrId : string | R | Object ) : R {\n        if( objOrId == null ) return;\n\n        if( typeof objOrId === 'object' ){\n            const id = objOrId[ this.idAttribute ];\n            return ( id !== void 0 && this._byId[ id ] ) || this._byId[ (<R>objOrId).cid ];\n        }\n        else{\n            return this._byId[ objOrId ];\n        }        \n    }\n\n    each( iteratee : ( val : R, key : number ) => void, context? : any ){\n        const fun = bindContext( iteratee, context ),\n            { models } = this;\n\n        for( let i = 0; i < models.length; i++ ){\n            fun( models[ i ], i ); \n        }\n    }\n\n    forEach( iteratee : ( val : R, key? : number ) => void, context? : any ){\n        return this.each( iteratee, context );\n    }\n\n    every( iteratee : Predicate<R>, context? : any ) : boolean {\n        const fun = toPredicateFunction( iteratee, context ),\n            { models } = this;\n\n        for( let i = 0; i < models.length; i++ ){\n            if( !fun( models[ i ], i ) ) return false;\n        }\n\n        return true;\n    }\n\n    filter( iteratee : Predicate<R>, context? : any ) : R[] {\n        const fun = toPredicateFunction( iteratee, context );\n\n        return this.map( ( x, i ) => fun( x, i ) ? x : void 0 );\n    }\n\n    find( iteratee : Predicate<R>, context? : any ) : R {\n        const fun = toPredicateFunction( iteratee, context ),\n        { models } = this;\n\n        for( let i = 0; i < models.length; i++ ){\n            if( fun( models[ i ], i ) ) return models[ i ];\n        }\n\n        return null;\n    }\n\n    some( iteratee : Predicate<R>, context? : any ) : boolean {\n        return Boolean( this.find( iteratee, context ) );\n    }\n\n    map< T >( iteratee : ( val : R, key : number ) => T, context? : any ) : T[]{\n        const fun = bindContext( iteratee, context ),\n            { models } = this,\n            mapped = Array( models.length );\n\n        let j = 0;\n\n        for( let i = 0; i < models.length; i++ ){\n            const x = fun( models[ i ], i );\n            x === void 0 || ( mapped[ j++ ] = x ); \n        }\n\n        mapped.length = j;\n\n        return mapped;\n    }\n\n    _validateNested( errors : {} ) : number {\n        // Don't validate if not aggregated.\n        if( this._shared ) return 0;\n\n        let count = 0;\n\n        this.each( record => {\n            const error = record.validationError;\n            if( error ){\n                errors[ record.cid ] = error;\n                count++;\n            }\n        });\n\n        return count;\n    }\n\n    model : typeof Record\n\n    // idAttribute extracted from the model type.\n    idAttribute : string\n\n    constructor( records? : ( R | {} )[], options : CollectionOptions = {}, shared? : number ){\n        super( _count++ );\n        this.models = [];\n        this._byId = {};\n        \n        this.comparator  = this.comparator;\n\n        if( options.comparator !== void 0 ){\n            this.comparator = options.comparator;\n            options.comparator = void 0;\n        }\n        \n        this.model       = this.model;\n        \n        if( options.model ){\n            this.model = options.model;\n            options.model = void 0;\n        }\n\n        this.idAttribute = this.model.prototype.idAttribute; //TODO: Remove?\n\n        this._shared = shared || 0;\n\n        if( records ){\n            const elements = toElements( this, records, options );\n            emptySetTransaction( this, elements, options, true );\n        }\n\n        this.initialize.apply( this, arguments );\n\n        if( this._localEvents ) this._localEvents.subscribe( this, this );\n    }\n\n    initialize(){}\n\n    get length() : number { return this.models.length; }\n    first() : R { return this.models[ 0 ]; }\n    last() : R { return this.models[ this.models.length - 1 ]; }\n    at( a_index : number ) : R {\n        const index = a_index < 0 ? a_index + this.models.length : a_index;    \n        return this.models[ index ];\n    }\n\n    // Deeply clone collection, optionally setting new owner.\n    clone( options : CloneOptions = {} ) : this {\n        const models = this._shared & ItemsBehavior.share ? this.models : this.map( model => model.clone() ),\n              copy : this = new (<any>this.constructor)( models, { model : this.model, comparator : this.comparator }, this._shared );\n        \n        if( options.pinStore ) copy._defaultStore = this.getStore();\n        \n        return copy;\n    }\n\n    toJSON( options? : object ) : any {\n        return this.models.map( model => model.toJSON( options ) );\n    }\n\n    // Apply bulk in-place object update in scope of ad-hoc transaction \n    set( elements : ElementsArg = [], options : TransactionOptions = {} ) : this {\n        if( (<any>options).add !== void 0 ){\n            this._log( 'warn', \"Type-R:InvalidOption\", \"Collection.set doesn't support 'add' option, behaving as if options.add === true.\", options );\n        }\n\n        // Handle reset option here - no way it will be populated from the top as nested transaction.\n        if( options.reset ){\n            this.reset( elements, options )\n        }\n        else{\n            const transaction = this._createTransaction( elements, options );\n            transaction && transaction.commit();\n        } \n\n        return this;    \n    }\n\n        /**\n     * Enable or disable live updates.\n     * \n     * `true` enables full collection synchronization.\n     * `false` cancel live updates.\n     * `json => true | false` - filter updates\n     */\n    liveUpdates( enabled : LiveUpdatesOption ) : IOPromise<this> {\n        if( enabled ){\n            this.liveUpdates( false );\n\n            const filter = typeof enabled === 'function' ? enabled : () => true;\n\n            this._liveUpdates = {\n                updated : json => {\n                    filter( json ) && this.add( json, { parse : true, merge : true } );\n                },\n\n                removed : id => this.remove( id )\n            };\n\n            return this.getEndpoint().subscribe( this._liveUpdates, this ).then( () => this );\n        }\n        else{\n            if( this._liveUpdates ){\n                this.getEndpoint().unsubscribe( this._liveUpdates, this );\n                this._liveUpdates = null;\n            }\n        }\n    }\n\n    _liveUpdates : object\n\n    fetch( a_options : { liveUpdates? : LiveUpdatesOption } & TransactionOptions = {} ) : IOPromise<this> {\n        const options = { parse : true, ...a_options },\n            endpoint = this.getEndpoint();\n\n        return startIO(\n            this,\n            endpoint.list( options, this ),\n            options,\n\n            json => {\n                let result : any = this.set( json, { parse : true, ...options } as TransactionOptions );\n                \n                if( options.liveUpdates ){\n                    result = this.liveUpdates( options.liveUpdates );\n                }\n\n                return result;\n            }\n        );\n    }\n\n    dispose() : void {\n        if( this._disposed ) return;\n\n        const aggregated = !this._shared;\n\n        for( let record of this.models ){\n            free( this, record );\n\n            if( aggregated ) record.dispose();\n        }\n\n        this.liveUpdates( false );\n\n        super.dispose();\n    }\n\n    reset( a_elements? : ElementsArg, options : TransactionOptions = {} ) : R[] {\n        const isRoot = begin( this ),\n              previousModels = this.models;\n\n        // Make all changes required, but be silent.\n        if( a_elements ){            \n            emptySetTransaction( this, toElements( this, a_elements, options ), options, true );\n        }\n        else{\n            this._byId = {};\n            this.models = [];\n        }\n\n        markAsDirty( this, options );\n\n        options.silent || trigger2( this, 'reset', this, defaults( { previousModels : previousModels }, options ) );\n\n        // Dispose models which are not in the updated collection.\n        const { _byId } = this;\n        \n        for( let toDispose of previousModels ){\n            _byId[ toDispose.cid ] || free( this, toDispose );\n        }\n\n        isRoot && commit( this );\n        return this.models;\n    }\n\n    // Add elements to collection.\n    add( a_elements : ElementsArg , options : AddOptions = {} ){\n        const elements = toElements( this, a_elements, options ),\n              transaction = this.models.length ?\n                    addTransaction( this, elements, options ) :\n                    emptySetTransaction( this, elements, options );\n\n        if( transaction ){\n            transaction.commit();\n            return transaction.added;\n        }\n    }\n\n    // Remove elements. \n    remove( recordsOrIds : any, options : CollectionOptions = {} ) : R[] | R {\n        if( recordsOrIds ){\n            return Array.isArray( recordsOrIds ) ?\n                        removeMany( this, recordsOrIds, options ) as R[]:\n                        removeOne( this, recordsOrIds, options ) as R;\n        }\n\n        return [];\n    }\n\n    // Apply bulk object update without any notifications, and return open transaction.\n    // Used internally to implement two-phase commit.   \n    _createTransaction( a_elements : ElementsArg, options : TransactionOptions = {} ) : CollectionTransaction | void {\n        const elements = toElements( this, a_elements, options );\n\n        if( this.models.length ){\n            return options.remove === false ?\n                        addTransaction( this, elements, options, true ) :\n                        setTransaction( this, elements, options );\n        }\n        else{\n            return emptySetTransaction( this, elements, options );\n        }\n    }\n\n    static _attribute = AggregatedType;\n\n    /***********************************\n     * Collection manipulation methods\n     */\n\n    pluck( key : keyof R ) : any[] {\n        return this.models.map( model => model[ key ] );\n    }\n\n    sort( options : TransactionOptions = {} ) : this {\n        if( sortElements( this, options ) ){\n            const isRoot = begin( this );\n            \n            if( markAsDirty( this, options ) ){\n                trigger2( this, 'sort', this, options );\n            }\n\n            isRoot && commit( this );\n        }\n\n        return this;\n    }\n\n    // Add a model to the end of the collection.\n    push(model : ElementsArg, options : CollectionOptions ) {\n      return this.add(model, assign({at: this.length}, options));\n    }\n\n    // Remove a model from the end of the collection.\n    pop( options : CollectionOptions ) : R {\n      var model = this.at(this.length - 1);\n      this.remove(model, { unset : true, ...options });\n      return model;\n    }\n\n    // Remove and return given model.\n    // TODO: do not dispose the model for aggregated collection.\n    unset( modelOrId : R | string, options? ) : R {\n        const value = this.get( modelOrId );\n        this.remove( modelOrId, { unset : true, ...options } );\n        return value;\n    }\n\n    // Add a model to the beginning of the collection.\n    unshift(model : ElementsArg, options : CollectionOptions ) {\n      return this.add(model, assign({at: 0}, options));\n    }\n\n    // Remove a model from the beginning of the collection.\n    shift( options? : CollectionOptions ) : R {\n      var model = this.at(0);\n      this.remove( model, { unset : true, ...options } );\n      return model;\n    }\n\n    // Slice out a sub-array of models from the collection.\n    slice() : R[] {\n      return slice.apply(this.models, arguments);\n    }\n\n    indexOf( modelOrId : any ) : number {\n        const record = this.get( modelOrId );\n        return this.models.indexOf( record );\n    }\n\n    modelId( attrs : {} ) : any {\n        return attrs[ this.model.prototype.idAttribute ];\n    }\n\n    // Toggle model in collection.\n    toggle( model : R, a_next? : boolean ) : boolean {\n        var prev = Boolean( this.get( model ) ),\n            next = a_next === void 0 ? !prev : Boolean( a_next );\n\n        if( prev !== next ){\n            if( prev ){\n                this.remove( model );\n            }\n            else{\n                this.add( model );\n            }\n        }\n\n        return next;\n    }\n\n    _log( level : LogLevel, topic : string, text : string, value ) : void {\n        log( level, topic, `${ this.model.prototype.getClassName() }.${ this.getClassName() }: ` + text, {\n            Argument : value,\n            'Attributes spec' : this.model.prototype._attributes\n        });\n    }\n\n    getClassName() : string {\n        return super.getClassName() || 'Collection';\n    }\n}\n\nexport type LiveUpdatesOption = boolean | ( ( x : any ) => boolean );\n\nexport type ElementsArg = Object | Record | Object[] | Record[];\n\n// TODO: make is safe for parse to return null (?)\nfunction toElements( collection : Collection, elements : ElementsArg, options : CollectionOptions ) : Elements {\n    const parsed = options.parse ? collection.parse( elements, options ) : elements; \n    return Array.isArray( parsed ) ? parsed : [ parsed ];\n}\n\ncreateSharedTypeSpec( Collection, SharedType );\n\nRecord.Collection = <any>Collection;\n\nfunction bindContext( fun : Function, context? : any ){\n    return context !== void 0 ? ( v, k ) => fun.call( context, v, k ) : fun;\n}\n\nfunction toPredicateFunction<R>( iteratee : Predicate<R>, context : any ){\n    if( typeof iteratee === 'object' ){\n        // Wrap object to the predicate...\n        return x => {\n            for( let key in iteratee as any ){\n                if( iteratee[ key ] !== x[ key ] )\n                    return false;\n            }\n\n            return true;\n        }\n    }\n    \n    return bindContext( iteratee, context );\n\n}","import { Collection } from '../collection';\nimport { Record } from '../record';\nimport { CompiledReference } from '../traversable';\n\nexport type CollectionReference = ( () => Collection ) | Collection | string; \n\n/** @private */\nexport function parseReference( collectionRef : CollectionReference ) : ( root : Record ) => Collection {\n    switch( typeof collectionRef ){\n        case 'function' :\n            return root => (<any>collectionRef).call( root );\n        case 'object'   :\n            return () => <Collection>collectionRef;\n        case 'string'   :\n            const { resolve } = new CompiledReference( <string>collectionRef );\n            return resolve;\n    }\n}","import { AnyType, ChainableAttributeSpec, Record } from '../record';\nimport { CollectionReference, parseReference } from './commons';\n\n\n/********\n * Reference to model by id.\n * \n * Untyped attribute. Holds model id, when unresolved. When resolved, is substituted\n * with a real model.\n * \n * No model changes are detected and counted as owner's change. That's intentional.\n */\n\n/** @private */\ntype RecordRefValue = Record | string;\n\n/** @private */\nclass RecordRefType extends AnyType {\n    // It is always serialized as an id, whenever it's resolved or not. \n    toJSON( value : RecordRefValue ){\n        return value && typeof value === 'object' ? value.id : value;\n    }\n\n    // Wne \n    clone( value : RecordRefValue ){\n        return value && typeof value === 'object' ? value.id : value;\n    }\n\n    // Model refs by id are equal when their ids are equal.\n    isChanged( a : RecordRefValue, b : RecordRefValue){\n        var aId = a && ( (<Record>a).id == null ? a : (<Record>a).id ),\n            bId = b && ( (<Record>b).id == null ? b : (<Record>b).id );\n\n        return aId !== bId;\n    }\n\n    // Refs are always valid.\n    validate( model, value, name ){}\n}\n\nRecord.from = function from( masterCollection : CollectionReference ) : ChainableAttributeSpec {\n    const getMasterCollection = parseReference( masterCollection );\n\n    const typeSpec = new ChainableAttributeSpec({\n        value : null,\n        _attribute : RecordRefType\n    });\n    \n    return typeSpec\n        .get( function( objOrId : RecordRefValue, name : string ) : Record {\n            if( typeof objOrId === 'object' ) return objOrId;\n\n            // So, we're dealing with an id reference. Resolve it.\n            const collection = getMasterCollection( this );\n            let   record : Record = null;\n\n            // If master collection exists and is not empty...\n            if( collection && collection.length ){\n                // Silently update attribute with record from this collection.\n                record = collection.get( objOrId ) || null;\n                this.attributes[ name ] = record;\n\n                // Subscribe for events manually. delegateEvents won't be invoked.\n                record && this._attributes[ name ].handleChange( record, null, this, {} );\n            }\n\n            return record;\n        });\n};","import { Collection } from '../collection';\nimport { define, tools } from '../object-plus';\nimport { AggregatedType, ChainableAttributeSpec, Record } from '../record';\nimport { ItemsBehavior, transactionApi } from '../transactions';\nimport { CollectionReference, parseReference } from './commons';\n\ntype RecordsIds = ( string | number )[];\n\nCollection.subsetOf = function subsetOf( masterCollection : CollectionReference ) : ChainableAttributeSpec {\n    const SubsetOf = this._SubsetOf || ( this._SubsetOf = defineSubsetCollection( this ) ),\n        getMasterCollection = parseReference( masterCollection ),\n        typeSpec = new ChainableAttributeSpec({\n            type : SubsetOf\n        });\n\n    return typeSpec.get(\n        function( refs ){\n            !refs || refs.resolvedWith || refs.resolve( getMasterCollection( this ) );\n            return refs;\n        }\n    );\n};\n\nconst subsetOfBehavior = ItemsBehavior.share | ItemsBehavior.persistent;\n\nfunction defineSubsetCollection( CollectionConstructor : typeof Collection ) {\n    @define class SubsetOfCollection extends CollectionConstructor {\n        refs : any[];\n        resolvedWith : Collection = null;\n\n        _attribute : AggregatedType\n\n        get __inner_state__(){ return this.refs || this.models; }\n\n        constructor( recordsOrIds?, options? ){\n            super( [], options, subsetOfBehavior );\n            this.refs = toArray( recordsOrIds );\n        }\n\n        // Remove should work fine as it already accepts ids. Add won't...\n        add( a_elements, options = {} ){\n            const { resolvedWith } = this,\n                    toAdd = toArray( a_elements );\n            \n            if( resolvedWith ){\n                // If the collection is resolved already, everything is simple.\n                return super.add( resolveRefs( resolvedWith, toAdd ), options );\n            }\n            else{\n                // Collection is not resolved yet. So, we prepare the delayed computation.\n                if( toAdd.length ){\n                    const isRoot = transactionApi.begin( this );\n\n                    // Save elements to resolve in future...\n                    this.refs = this.refs ? this.refs.concat( toAdd ) : toAdd.slice();\n\n                    transactionApi.markAsDirty( this, options );\n\n                    // And throw the 'changes' event.\n                    isRoot && transactionApi.commit( this );\n                }\n            }\n        }\n\n        reset( a_elements?, options = {} ){\n            const { resolvedWith } = this,\n                elements = toArray( a_elements );\n    \n            return resolvedWith ?\n                // Collection is resolved, so parse ids and forward the call to set.\n                super.reset( resolveRefs( resolvedWith, elements ), options ) :\n                // Collection is not resolved yet. So, we prepare the delayed computation.\n                delaySet( this, elements, options ) as any || [];\n        }\n\n        _createTransaction( a_elements, options? ){\n            const { resolvedWith } = this,\n                elements = toArray( a_elements );\n    \n            return resolvedWith ?\n                // Collection is resolved, so parse ids and forward the call to set.\n                super._createTransaction( resolveRefs( resolvedWith, elements ), options ) :\n                // Collection is not resolved yet. So, we prepare the delayed computation.\n                delaySet( this, elements, options );\n        }\n\n        // Serialized as an array of model ids.\n        toJSON() : RecordsIds {\n            return this.refs ?\n                this.refs.map( objOrId => objOrId.id || objOrId ) :\n                this.models.map( model => model.id );\n        }\n\n        // Subset is always valid.\n        _validateNested(){ return 0; }\n\n        get length() : number {\n            return this.models.length || ( this.refs ? this.refs.length : 0 );\n        }\n\n        // Must be shallow copied on clone.\n        clone( owner? ){\n            var Ctor = (<any>this).constructor,\n                copy = new Ctor( [], {\n                    model : this.model,\n                    comparator : this.comparator\n                });\n\n            if( this.resolvedWith ){\n                // TODO: bug here. \n                copy.resolvedWith = this.resolvedWith;\n                copy.refs = null;\n                copy.reset( this.models, { silent : true } );\n            }\n            else{\n                copy.refs = this.refs.slice();\n            }\n\n            return copy;\n        }\n\n        // Clean up the custom parse method possibly defined in the base class.\n        parse( raw : any ) : Record[] {\n            return raw;\n        }\n\n        resolve( collection : Collection ) : this {\n            if( collection && collection.length ){\n                this.resolvedWith = collection;\n\n                if( this.refs ){\n                    this.reset( this.refs, { silent : true } );\n                    this.refs = null;\n                }\n            }\n\n            return this;\n        }\n\n        getModelIds() : RecordsIds { return this.toJSON(); }\n\n        toggle( modelOrId : any, val : boolean ) : boolean {\n            return super.toggle( this.resolvedWith.get( modelOrId ), val );\n        }\n\n        addAll() : Record[] {\n            if( this.resolvedWith ){\n                this.set( this.resolvedWith.models );\n                return this.models;\n            }\n\n            throw new Error( \"Cannot add elemens because the subset collection is not resolved yet.\" );\n        }\n\n        toggleAll() : Record[] {\n            return this.length ? this.reset() : this.addAll();\n        }\n    }\n\n    // Clean up all custom item events to prevent memory leaks.\n    SubsetOfCollection.prototype._itemEvents = void 0;\n\n    return SubsetOfCollection;\n}\n\nfunction resolveRefs( master, elements ){\n    const records = [];\n    \n    for( let el of elements ){\n        const record = master.get( el );\n        if( record ) records.push( record );\n    }\n\n    return records;\n}\n\nfunction delaySet( collection, elements, options ) : void {\n    if( tools.notEqual( collection.refs, elements ) ){\n        const isRoot = transactionApi.begin( collection );\n\n        // Save elements to resolve in future...\n        collection.refs = elements.slice();\n\n        transactionApi.markAsDirty( collection, options );\n        \n        // And throw the 'changes' event.\n        isRoot && transactionApi.commit( collection );\n    }\n}\n\nfunction toArray( elements ){\n    return elements ? ( \n        Array.isArray( elements ) ? elements : [ elements ]\n    ) : [];\n}","import { Record } from '../record';\nimport { Transactional } from '../transactions';\n\nlet _store : Store = null;\n\nexport class Store extends Record {\n    getStore() : Store { return this; }\n \n    // delegate item lookup to owner, and to the global store if undefined\n    get( name : string ) : any {\n        // Lookup for resource in the current store. \n        let local = this[ name ];\n\n        // If something is found or it's the global store, return result.\n        if( local || this === this._defaultStore ) return local;\n\n        // Forward failed lookup to owner or global store.\n        return this._owner ? this._owner.get( name ) : this._defaultStore.get( name ); \n    }\n\n    static get global(){ return _store; }\n    static set global( store : Store ){\n        if( _store ){\n          _store.dispose();\n        }\n\n        Transactional.prototype._defaultStore = _store = store;\n    }\n}\n\nStore.global = new Store();","// Polyfill for IE10. Should fix problems with babel and statics inheritance.\n// Exported module itself is the global event bus.\nimport { define, Events, Mixable as Class } from './object-plus/';\n// Define synonims for NestedTypes backward compatibility.\nimport { ChainableAttributeSpec, Record as Model } from './record';\n\n/**\n * Export everything \n */\nexport * from './collection';\nexport * from './io-tools';\nexport * from './object-plus';\nexport * from './record';\nexport * from './relations';\nexport * from './transactions';\nexport { Model, Class };\n\n\nexport const { on, off, trigger, once, listenTo, stopListening, listenToOnce } = <any>Events;\n\n\n\nexport function attributes( attrDefs ) : typeof Model {\n    @define class DefaultRecord extends Model {\n        static attributes = attrDefs;\n    }\n\n    return DefaultRecord;\n}\n\n\n/** Typeless attribute declaration with default value. */ \nexport function value( x : any ) : ChainableAttributeSpec {\n    return new ChainableAttributeSpec({ value : x });\n}\n\n/** Wrap model or collection method in transaction. */\nexport function transaction< F extends Function >( method : F ) : F {\n    return <any>function( ...args ){\n        let result;\n        \n        this.transaction( () => {\n            result = method.apply( this, args );\n        });\n        \n        return result;\n    }\n}"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__rest","e","indexOf","getOwnPropertySymbols","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","defaults","dest","source","name","other","isValidJSON","value","proto","getPrototypeOf","every","getBaseClass","Class","isEmpty","obj","some","fun","ArrayProto","arr","result","someArray","someObject","predicate","x","omit","discard","transform","once","func","memo","first","DateProto","Date","ObjectProto","notEqual","a","protoA","arraysNotEqual","keysA","keys","objectsNotEqual","HashProto","hashMap","hash","definition","_i","names","names_1","_a","name_1","prop","o","map","EventMap","handlers","slice","addEventsMap","concat","addEvent","split","eventSplitter","getBubblingHandler","callback","name_2","push","EventDescriptor","event_1","on","event_2","off","handler","_bubblingHandlers","event","trigger5","trigger3","trigger2","context","next","listOff","_events","filteredHead","prev","head","ev","_callback","listSend3","EventHandler","once_1","_once","name_3","strings","api","events","test","self","queue","all","listSend2","listSend4","listSend5","f","listSend6","Mixable","protoProps","staticProps","BaseClass","mixins","defineMixin","merge","mergeObject","getStaticDefinitions","onDefine","definitions","mergeInheritedMembers","spec","statics","TheSubclass","tslib_1.__extends","predefine","define","Constructor","__super__","MixinsState","get","populate","onExtend","ClassOrDefinition","Ctor","rules","definitionRules","definitionDecorator","definitionKey","mergeRules","appliedMixins","rule","mixins_1","mixin","isArray","sourceMixins","ctors","ctors_1","unshift","object","ignore","dontMix","forEachOwnProp","sourceProp","_this","assignProperty","mixinRules","protoValue","baseProto","resolveRule","function","caller","list","destProp","configurable","pipe","classFirst","classLast","_idCount","uniqueId","cid","initialize","Messenger","localEvents","_localEvents","properties","eventsMap","defineProperties","toPropertyDescriptor","addReference","a_source","_listeningTo","removeAll","second","_disposed","stopListening","Events","listener","isProduction","process","env","NODE_ENV","logEvents","_super","console","this_1","topic","msg","props","args","toString","logEvents_1","Logger","window","something","body","join","JSON","stringify","logger","log","trigger","bind","startIO","promise","options","thenDo","abortIO","ioUpdate","_ioPromise","then","resp","triggerAndBubble","catch","err","error","abort","eventSource","collection","referenceMask","reference","splitTail","path","match","substr","tail","pop","local","resolve","Function","shift","resolveReference","root","action","skip","getStore","getOwner","ItemsBehavior","_validateNested","nested","validate","ValidationError","iteratee","each","eachError","cidPrefix","Transactional","endpoint","_endpoint","Transactional_1","_owner","_ownerKey","_changeEventName","listenTo","isRoot","transactionApi","begin","update","set","commit","values","transaction","_createTransaction","__inner_state__","_changeToken","data","_defaultStore","v","k","val","Error","getOwnerEndpoint","_endpoints","_validationError","validationError","getValidationError","_transaction","markAsDirty","dirty","silent","_isDirty","initiator","originalOptions","_onChildrenChange","aquire","owner","child","free","_begin","_markAsDirty","setAttribute","record","_attributes","doUpdate","attributes","_previousAttributes","AttributesCopy","_changedAttributes","UpdateRecordMixin","attribute","propagateChanges","forceAttributeChange","a_values","unknown","changes","parse","shouldBeAnObject","unknownAttrsWarning","RecordTransaction","nested_1","_log","constructorsMixin","attrDefs","attrs","attr","Attributes","nested_2","changes_1","_b","emptyOptions","a_options","getHooks","transforms","changeHandlers","type","toJSON","changeEvents","hasCustomDefault","defaultValue","tools.isValidJSON","isRequired","convert","getHook_1","getHook","reduce","chainGetHooks","validate_1","chainTransforms","handleChange","chainChangeHandlers","doInit","AnyType","_attribute","model","isChanged","level","code","text","getClassName","New value","Prev. value","Attribute definition","Record","prevHook","nextHook","prevTransform","nextTransform","prevHandler","nextHandler","ChainableAttributeSpec","check","metadata","asProp","ref","_onChange","emptyFunction","changed","eventMap","unsubscribe","subscribe","cloned","attrSpec","type_1","Number","String","Boolean","inferType","shared","ImmutableClassType","PrimitiveType","NumericType","num","isFinite","ArrayType","ObjectType","doNothing","FunctionType","DateType","date","timestamp","getTime","toISOString","supportsDate","isNaN","struct","minutesOffset","isoDatePattern","exec","numericKeys","undefined","UTC","safeParseDate","AggregatedType","clone","canBeUpdated","nestedTransaction","_shared","persistent","_handleChange","unset","dispose","shareAndListen","listen","share","SharedType","implicitObject","attributesDefinition","baseClassAttributes","myAttributes","_.transform","createAttribute","allAttributes","_.defaults","ConstructorsMixin","_attributesArray","createPropertyDescriptor","attrSpecs","eventsApi.EventMap","createWatcherFromRef","wrapWatcher","localEventsMixin","attrDef","from","createSharedTypeSpec","Attribute","watcher","IORecordMixin","save","getEndpoint","json","isNew","id","fetch","read","destroy","remove","_cidCounter","typeCheck","extend","diff","hasChanged","old","nullify","forEachAttr","idAttribute","_attributesArray_1","copy","pinStore","errors","asJson","l","newModel","clear","Attributes definition:","Collection","BaseRecordAttributes","BaseRecordAttributesCopy","IdAttribute","DefaultCollection","dynamicMixin","_aquire","_free","convertAndAquire","_aggregationError","_itemEvents","sortElements","_comparator","sort","models","addIndex","index","removeIndex","updateIndex","previous","added","removed","sorted","CollectionTransaction","logAggregationError","added_1","_d","removed_1","_e","addTransaction","items","a_items","forceMerge","_byId","prevLength","a_items_1","item","appendElements","needSort","at","length_1","j","moveElements","sortOrMoveElements","removeMany","toRemove","_removeFromIndex","_reallocate","silentOptions","emptySetTransaction","len","src","_reallocateEmpty","setTransaction","_prevById","prevModels","toAdd","orderKept","reusedCount","previous_1","_garbageCollect","children","children_1","freeAll","addedOrChanged","_count","CollectionRefsType","records","comparator","toElements","subset","subsetOf","RefsCollection","_SubsetOf","Refs","Subset","itemEvents","aa","bb","_store","objOrId","bindContext","toPredicateFunction","find","mapped","count","a_index","elements","add","reset","enabled","liveUpdates","filter_1","_liveUpdates","updated","tslib_1.__assign","aggregated","a_elements","previousModels","previousModels_1","toDispose","recordsOrIds","el","splice","notify","removeOne","modelOrId","a_next","Argument","Attributes spec","parsed","parseReference","collectionRef","RecordRefType","masterCollection","getMasterCollection","SubsetOf","subsetOfBehavior","refs","toArray","SubsetOfCollection","resolvedWith","resolveRefs","delaySet","raw","toggle","addAll","master","elements_1","tools.notEqual","Store","store","global","listenToOnce","DefaultRecord","Model","method","reject","onAbort","fn","Promise","a_resolve","a_reject","listName","attrName","getMetadata"],"mappings":"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"}